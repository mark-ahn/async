// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package async

import "context"

type WorkOfBoolThenBool struct {
	Argument bool
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushBoolThenBool interface {
	Push(context.Context, *WorkOfBoolThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenByte struct {
	Argument bool
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushBoolThenByte interface {
	Push(context.Context, *WorkOfBoolThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenComplex128 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushBoolThenComplex128 interface {
	Push(context.Context, *WorkOfBoolThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenComplex64 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushBoolThenComplex64 interface {
	Push(context.Context, *WorkOfBoolThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenError struct {
	Argument bool
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushBoolThenError interface {
	Push(context.Context, *WorkOfBoolThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenFloat32 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushBoolThenFloat32 interface {
	Push(context.Context, *WorkOfBoolThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenFloat64 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushBoolThenFloat64 interface {
	Push(context.Context, *WorkOfBoolThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenInt struct {
	Argument bool
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushBoolThenInt interface {
	Push(context.Context, *WorkOfBoolThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenInt16 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushBoolThenInt16 interface {
	Push(context.Context, *WorkOfBoolThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenInt32 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushBoolThenInt32 interface {
	Push(context.Context, *WorkOfBoolThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenInt64 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushBoolThenInt64 interface {
	Push(context.Context, *WorkOfBoolThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenInt8 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushBoolThenInt8 interface {
	Push(context.Context, *WorkOfBoolThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenRune struct {
	Argument bool
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushBoolThenRune interface {
	Push(context.Context, *WorkOfBoolThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenString struct {
	Argument bool
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushBoolThenString interface {
	Push(context.Context, *WorkOfBoolThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenUint struct {
	Argument bool
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushBoolThenUint interface {
	Push(context.Context, *WorkOfBoolThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenUint16 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushBoolThenUint16 interface {
	Push(context.Context, *WorkOfBoolThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenUint32 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushBoolThenUint32 interface {
	Push(context.Context, *WorkOfBoolThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenUint64 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushBoolThenUint64 interface {
	Push(context.Context, *WorkOfBoolThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenUint8 struct {
	Argument bool
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushBoolThenUint8 interface {
	Push(context.Context, *WorkOfBoolThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenUintptr struct {
	Argument bool
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushBoolThenUintptr interface {
	Push(context.Context, *WorkOfBoolThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenInterface struct {
	Argument bool
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushBoolThenInterface interface {
	Push(context.Context, *WorkOfBoolThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfBoolThenStruct struct {
	Argument bool
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushBoolThenStruct interface {
	Push(context.Context, *WorkOfBoolThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenBool struct {
	Argument byte
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushByteThenBool interface {
	Push(context.Context, *WorkOfByteThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenByte struct {
	Argument byte
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushByteThenByte interface {
	Push(context.Context, *WorkOfByteThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenComplex128 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushByteThenComplex128 interface {
	Push(context.Context, *WorkOfByteThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenComplex64 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushByteThenComplex64 interface {
	Push(context.Context, *WorkOfByteThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenError struct {
	Argument byte
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushByteThenError interface {
	Push(context.Context, *WorkOfByteThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenFloat32 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushByteThenFloat32 interface {
	Push(context.Context, *WorkOfByteThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenFloat64 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushByteThenFloat64 interface {
	Push(context.Context, *WorkOfByteThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenInt struct {
	Argument byte
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushByteThenInt interface {
	Push(context.Context, *WorkOfByteThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenInt16 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushByteThenInt16 interface {
	Push(context.Context, *WorkOfByteThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenInt32 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushByteThenInt32 interface {
	Push(context.Context, *WorkOfByteThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenInt64 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushByteThenInt64 interface {
	Push(context.Context, *WorkOfByteThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenInt8 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushByteThenInt8 interface {
	Push(context.Context, *WorkOfByteThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenRune struct {
	Argument byte
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushByteThenRune interface {
	Push(context.Context, *WorkOfByteThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenString struct {
	Argument byte
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushByteThenString interface {
	Push(context.Context, *WorkOfByteThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenUint struct {
	Argument byte
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushByteThenUint interface {
	Push(context.Context, *WorkOfByteThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenUint16 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushByteThenUint16 interface {
	Push(context.Context, *WorkOfByteThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenUint32 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushByteThenUint32 interface {
	Push(context.Context, *WorkOfByteThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenUint64 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushByteThenUint64 interface {
	Push(context.Context, *WorkOfByteThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenUint8 struct {
	Argument byte
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushByteThenUint8 interface {
	Push(context.Context, *WorkOfByteThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenUintptr struct {
	Argument byte
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushByteThenUintptr interface {
	Push(context.Context, *WorkOfByteThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenInterface struct {
	Argument byte
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushByteThenInterface interface {
	Push(context.Context, *WorkOfByteThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfByteThenStruct struct {
	Argument byte
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushByteThenStruct interface {
	Push(context.Context, *WorkOfByteThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenBool struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushComplex128ThenBool interface {
	Push(context.Context, *WorkOfComplex128ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenByte struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushComplex128ThenByte interface {
	Push(context.Context, *WorkOfComplex128ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenComplex128 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushComplex128ThenComplex128 interface {
	Push(context.Context, *WorkOfComplex128ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenComplex64 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushComplex128ThenComplex64 interface {
	Push(context.Context, *WorkOfComplex128ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenError struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushComplex128ThenError interface {
	Push(context.Context, *WorkOfComplex128ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenFloat32 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushComplex128ThenFloat32 interface {
	Push(context.Context, *WorkOfComplex128ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenFloat64 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushComplex128ThenFloat64 interface {
	Push(context.Context, *WorkOfComplex128ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenInt struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushComplex128ThenInt interface {
	Push(context.Context, *WorkOfComplex128ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenInt16 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushComplex128ThenInt16 interface {
	Push(context.Context, *WorkOfComplex128ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenInt32 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushComplex128ThenInt32 interface {
	Push(context.Context, *WorkOfComplex128ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenInt64 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushComplex128ThenInt64 interface {
	Push(context.Context, *WorkOfComplex128ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenInt8 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushComplex128ThenInt8 interface {
	Push(context.Context, *WorkOfComplex128ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenRune struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushComplex128ThenRune interface {
	Push(context.Context, *WorkOfComplex128ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenString struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushComplex128ThenString interface {
	Push(context.Context, *WorkOfComplex128ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenUint struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushComplex128ThenUint interface {
	Push(context.Context, *WorkOfComplex128ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenUint16 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushComplex128ThenUint16 interface {
	Push(context.Context, *WorkOfComplex128ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenUint32 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushComplex128ThenUint32 interface {
	Push(context.Context, *WorkOfComplex128ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenUint64 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushComplex128ThenUint64 interface {
	Push(context.Context, *WorkOfComplex128ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenUint8 struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushComplex128ThenUint8 interface {
	Push(context.Context, *WorkOfComplex128ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenUintptr struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushComplex128ThenUintptr interface {
	Push(context.Context, *WorkOfComplex128ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenInterface struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushComplex128ThenInterface interface {
	Push(context.Context, *WorkOfComplex128ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex128ThenStruct struct {
	Argument complex128
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushComplex128ThenStruct interface {
	Push(context.Context, *WorkOfComplex128ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenBool struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushComplex64ThenBool interface {
	Push(context.Context, *WorkOfComplex64ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenByte struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushComplex64ThenByte interface {
	Push(context.Context, *WorkOfComplex64ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenComplex128 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushComplex64ThenComplex128 interface {
	Push(context.Context, *WorkOfComplex64ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenComplex64 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushComplex64ThenComplex64 interface {
	Push(context.Context, *WorkOfComplex64ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenError struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushComplex64ThenError interface {
	Push(context.Context, *WorkOfComplex64ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenFloat32 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushComplex64ThenFloat32 interface {
	Push(context.Context, *WorkOfComplex64ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenFloat64 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushComplex64ThenFloat64 interface {
	Push(context.Context, *WorkOfComplex64ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenInt struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushComplex64ThenInt interface {
	Push(context.Context, *WorkOfComplex64ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenInt16 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushComplex64ThenInt16 interface {
	Push(context.Context, *WorkOfComplex64ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenInt32 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushComplex64ThenInt32 interface {
	Push(context.Context, *WorkOfComplex64ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenInt64 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushComplex64ThenInt64 interface {
	Push(context.Context, *WorkOfComplex64ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenInt8 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushComplex64ThenInt8 interface {
	Push(context.Context, *WorkOfComplex64ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenRune struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushComplex64ThenRune interface {
	Push(context.Context, *WorkOfComplex64ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenString struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushComplex64ThenString interface {
	Push(context.Context, *WorkOfComplex64ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenUint struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushComplex64ThenUint interface {
	Push(context.Context, *WorkOfComplex64ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenUint16 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushComplex64ThenUint16 interface {
	Push(context.Context, *WorkOfComplex64ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenUint32 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushComplex64ThenUint32 interface {
	Push(context.Context, *WorkOfComplex64ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenUint64 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushComplex64ThenUint64 interface {
	Push(context.Context, *WorkOfComplex64ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenUint8 struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushComplex64ThenUint8 interface {
	Push(context.Context, *WorkOfComplex64ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenUintptr struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushComplex64ThenUintptr interface {
	Push(context.Context, *WorkOfComplex64ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenInterface struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushComplex64ThenInterface interface {
	Push(context.Context, *WorkOfComplex64ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfComplex64ThenStruct struct {
	Argument complex64
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushComplex64ThenStruct interface {
	Push(context.Context, *WorkOfComplex64ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenBool struct {
	Argument error
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushErrorThenBool interface {
	Push(context.Context, *WorkOfErrorThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenByte struct {
	Argument error
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushErrorThenByte interface {
	Push(context.Context, *WorkOfErrorThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenComplex128 struct {
	Argument error
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushErrorThenComplex128 interface {
	Push(context.Context, *WorkOfErrorThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenComplex64 struct {
	Argument error
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushErrorThenComplex64 interface {
	Push(context.Context, *WorkOfErrorThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenError struct {
	Argument error
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushErrorThenError interface {
	Push(context.Context, *WorkOfErrorThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenFloat32 struct {
	Argument error
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushErrorThenFloat32 interface {
	Push(context.Context, *WorkOfErrorThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenFloat64 struct {
	Argument error
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushErrorThenFloat64 interface {
	Push(context.Context, *WorkOfErrorThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenInt struct {
	Argument error
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushErrorThenInt interface {
	Push(context.Context, *WorkOfErrorThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenInt16 struct {
	Argument error
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushErrorThenInt16 interface {
	Push(context.Context, *WorkOfErrorThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenInt32 struct {
	Argument error
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushErrorThenInt32 interface {
	Push(context.Context, *WorkOfErrorThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenInt64 struct {
	Argument error
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushErrorThenInt64 interface {
	Push(context.Context, *WorkOfErrorThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenInt8 struct {
	Argument error
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushErrorThenInt8 interface {
	Push(context.Context, *WorkOfErrorThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenRune struct {
	Argument error
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushErrorThenRune interface {
	Push(context.Context, *WorkOfErrorThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenString struct {
	Argument error
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushErrorThenString interface {
	Push(context.Context, *WorkOfErrorThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenUint struct {
	Argument error
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushErrorThenUint interface {
	Push(context.Context, *WorkOfErrorThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenUint16 struct {
	Argument error
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushErrorThenUint16 interface {
	Push(context.Context, *WorkOfErrorThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenUint32 struct {
	Argument error
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushErrorThenUint32 interface {
	Push(context.Context, *WorkOfErrorThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenUint64 struct {
	Argument error
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushErrorThenUint64 interface {
	Push(context.Context, *WorkOfErrorThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenUint8 struct {
	Argument error
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushErrorThenUint8 interface {
	Push(context.Context, *WorkOfErrorThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenUintptr struct {
	Argument error
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushErrorThenUintptr interface {
	Push(context.Context, *WorkOfErrorThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenInterface struct {
	Argument error
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushErrorThenInterface interface {
	Push(context.Context, *WorkOfErrorThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfErrorThenStruct struct {
	Argument error
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushErrorThenStruct interface {
	Push(context.Context, *WorkOfErrorThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenBool struct {
	Argument float32
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushFloat32ThenBool interface {
	Push(context.Context, *WorkOfFloat32ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenByte struct {
	Argument float32
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushFloat32ThenByte interface {
	Push(context.Context, *WorkOfFloat32ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenComplex128 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushFloat32ThenComplex128 interface {
	Push(context.Context, *WorkOfFloat32ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenComplex64 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushFloat32ThenComplex64 interface {
	Push(context.Context, *WorkOfFloat32ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenError struct {
	Argument float32
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushFloat32ThenError interface {
	Push(context.Context, *WorkOfFloat32ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenFloat32 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushFloat32ThenFloat32 interface {
	Push(context.Context, *WorkOfFloat32ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenFloat64 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushFloat32ThenFloat64 interface {
	Push(context.Context, *WorkOfFloat32ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenInt struct {
	Argument float32
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushFloat32ThenInt interface {
	Push(context.Context, *WorkOfFloat32ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenInt16 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushFloat32ThenInt16 interface {
	Push(context.Context, *WorkOfFloat32ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenInt32 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushFloat32ThenInt32 interface {
	Push(context.Context, *WorkOfFloat32ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenInt64 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushFloat32ThenInt64 interface {
	Push(context.Context, *WorkOfFloat32ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenInt8 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushFloat32ThenInt8 interface {
	Push(context.Context, *WorkOfFloat32ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenRune struct {
	Argument float32
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushFloat32ThenRune interface {
	Push(context.Context, *WorkOfFloat32ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenString struct {
	Argument float32
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushFloat32ThenString interface {
	Push(context.Context, *WorkOfFloat32ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenUint struct {
	Argument float32
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushFloat32ThenUint interface {
	Push(context.Context, *WorkOfFloat32ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenUint16 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushFloat32ThenUint16 interface {
	Push(context.Context, *WorkOfFloat32ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenUint32 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushFloat32ThenUint32 interface {
	Push(context.Context, *WorkOfFloat32ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenUint64 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushFloat32ThenUint64 interface {
	Push(context.Context, *WorkOfFloat32ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenUint8 struct {
	Argument float32
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushFloat32ThenUint8 interface {
	Push(context.Context, *WorkOfFloat32ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenUintptr struct {
	Argument float32
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushFloat32ThenUintptr interface {
	Push(context.Context, *WorkOfFloat32ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenInterface struct {
	Argument float32
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushFloat32ThenInterface interface {
	Push(context.Context, *WorkOfFloat32ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat32ThenStruct struct {
	Argument float32
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushFloat32ThenStruct interface {
	Push(context.Context, *WorkOfFloat32ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenBool struct {
	Argument float64
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushFloat64ThenBool interface {
	Push(context.Context, *WorkOfFloat64ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenByte struct {
	Argument float64
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushFloat64ThenByte interface {
	Push(context.Context, *WorkOfFloat64ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenComplex128 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushFloat64ThenComplex128 interface {
	Push(context.Context, *WorkOfFloat64ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenComplex64 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushFloat64ThenComplex64 interface {
	Push(context.Context, *WorkOfFloat64ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenError struct {
	Argument float64
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushFloat64ThenError interface {
	Push(context.Context, *WorkOfFloat64ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenFloat32 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushFloat64ThenFloat32 interface {
	Push(context.Context, *WorkOfFloat64ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenFloat64 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushFloat64ThenFloat64 interface {
	Push(context.Context, *WorkOfFloat64ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenInt struct {
	Argument float64
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushFloat64ThenInt interface {
	Push(context.Context, *WorkOfFloat64ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenInt16 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushFloat64ThenInt16 interface {
	Push(context.Context, *WorkOfFloat64ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenInt32 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushFloat64ThenInt32 interface {
	Push(context.Context, *WorkOfFloat64ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenInt64 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushFloat64ThenInt64 interface {
	Push(context.Context, *WorkOfFloat64ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenInt8 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushFloat64ThenInt8 interface {
	Push(context.Context, *WorkOfFloat64ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenRune struct {
	Argument float64
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushFloat64ThenRune interface {
	Push(context.Context, *WorkOfFloat64ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenString struct {
	Argument float64
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushFloat64ThenString interface {
	Push(context.Context, *WorkOfFloat64ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenUint struct {
	Argument float64
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushFloat64ThenUint interface {
	Push(context.Context, *WorkOfFloat64ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenUint16 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushFloat64ThenUint16 interface {
	Push(context.Context, *WorkOfFloat64ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenUint32 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushFloat64ThenUint32 interface {
	Push(context.Context, *WorkOfFloat64ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenUint64 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushFloat64ThenUint64 interface {
	Push(context.Context, *WorkOfFloat64ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenUint8 struct {
	Argument float64
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushFloat64ThenUint8 interface {
	Push(context.Context, *WorkOfFloat64ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenUintptr struct {
	Argument float64
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushFloat64ThenUintptr interface {
	Push(context.Context, *WorkOfFloat64ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenInterface struct {
	Argument float64
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushFloat64ThenInterface interface {
	Push(context.Context, *WorkOfFloat64ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfFloat64ThenStruct struct {
	Argument float64
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushFloat64ThenStruct interface {
	Push(context.Context, *WorkOfFloat64ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenBool struct {
	Argument int
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushIntThenBool interface {
	Push(context.Context, *WorkOfIntThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenByte struct {
	Argument int
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushIntThenByte interface {
	Push(context.Context, *WorkOfIntThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenComplex128 struct {
	Argument int
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushIntThenComplex128 interface {
	Push(context.Context, *WorkOfIntThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenComplex64 struct {
	Argument int
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushIntThenComplex64 interface {
	Push(context.Context, *WorkOfIntThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenError struct {
	Argument int
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushIntThenError interface {
	Push(context.Context, *WorkOfIntThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenFloat32 struct {
	Argument int
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushIntThenFloat32 interface {
	Push(context.Context, *WorkOfIntThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenFloat64 struct {
	Argument int
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushIntThenFloat64 interface {
	Push(context.Context, *WorkOfIntThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenInt struct {
	Argument int
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushIntThenInt interface {
	Push(context.Context, *WorkOfIntThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenInt16 struct {
	Argument int
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushIntThenInt16 interface {
	Push(context.Context, *WorkOfIntThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenInt32 struct {
	Argument int
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushIntThenInt32 interface {
	Push(context.Context, *WorkOfIntThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenInt64 struct {
	Argument int
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushIntThenInt64 interface {
	Push(context.Context, *WorkOfIntThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenInt8 struct {
	Argument int
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushIntThenInt8 interface {
	Push(context.Context, *WorkOfIntThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenRune struct {
	Argument int
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushIntThenRune interface {
	Push(context.Context, *WorkOfIntThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenString struct {
	Argument int
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushIntThenString interface {
	Push(context.Context, *WorkOfIntThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenUint struct {
	Argument int
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushIntThenUint interface {
	Push(context.Context, *WorkOfIntThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenUint16 struct {
	Argument int
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushIntThenUint16 interface {
	Push(context.Context, *WorkOfIntThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenUint32 struct {
	Argument int
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushIntThenUint32 interface {
	Push(context.Context, *WorkOfIntThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenUint64 struct {
	Argument int
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushIntThenUint64 interface {
	Push(context.Context, *WorkOfIntThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenUint8 struct {
	Argument int
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushIntThenUint8 interface {
	Push(context.Context, *WorkOfIntThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenUintptr struct {
	Argument int
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushIntThenUintptr interface {
	Push(context.Context, *WorkOfIntThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenInterface struct {
	Argument int
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushIntThenInterface interface {
	Push(context.Context, *WorkOfIntThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfIntThenStruct struct {
	Argument int
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushIntThenStruct interface {
	Push(context.Context, *WorkOfIntThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenBool struct {
	Argument int16
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushInt16ThenBool interface {
	Push(context.Context, *WorkOfInt16ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenByte struct {
	Argument int16
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushInt16ThenByte interface {
	Push(context.Context, *WorkOfInt16ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenComplex128 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushInt16ThenComplex128 interface {
	Push(context.Context, *WorkOfInt16ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenComplex64 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushInt16ThenComplex64 interface {
	Push(context.Context, *WorkOfInt16ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenError struct {
	Argument int16
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushInt16ThenError interface {
	Push(context.Context, *WorkOfInt16ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenFloat32 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushInt16ThenFloat32 interface {
	Push(context.Context, *WorkOfInt16ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenFloat64 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushInt16ThenFloat64 interface {
	Push(context.Context, *WorkOfInt16ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenInt struct {
	Argument int16
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushInt16ThenInt interface {
	Push(context.Context, *WorkOfInt16ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenInt16 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushInt16ThenInt16 interface {
	Push(context.Context, *WorkOfInt16ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenInt32 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushInt16ThenInt32 interface {
	Push(context.Context, *WorkOfInt16ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenInt64 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushInt16ThenInt64 interface {
	Push(context.Context, *WorkOfInt16ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenInt8 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushInt16ThenInt8 interface {
	Push(context.Context, *WorkOfInt16ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenRune struct {
	Argument int16
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushInt16ThenRune interface {
	Push(context.Context, *WorkOfInt16ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenString struct {
	Argument int16
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushInt16ThenString interface {
	Push(context.Context, *WorkOfInt16ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenUint struct {
	Argument int16
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushInt16ThenUint interface {
	Push(context.Context, *WorkOfInt16ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenUint16 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushInt16ThenUint16 interface {
	Push(context.Context, *WorkOfInt16ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenUint32 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushInt16ThenUint32 interface {
	Push(context.Context, *WorkOfInt16ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenUint64 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushInt16ThenUint64 interface {
	Push(context.Context, *WorkOfInt16ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenUint8 struct {
	Argument int16
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushInt16ThenUint8 interface {
	Push(context.Context, *WorkOfInt16ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenUintptr struct {
	Argument int16
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushInt16ThenUintptr interface {
	Push(context.Context, *WorkOfInt16ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenInterface struct {
	Argument int16
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushInt16ThenInterface interface {
	Push(context.Context, *WorkOfInt16ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfInt16ThenStruct struct {
	Argument int16
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushInt16ThenStruct interface {
	Push(context.Context, *WorkOfInt16ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenBool struct {
	Argument int32
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushInt32ThenBool interface {
	Push(context.Context, *WorkOfInt32ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenByte struct {
	Argument int32
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushInt32ThenByte interface {
	Push(context.Context, *WorkOfInt32ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenComplex128 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushInt32ThenComplex128 interface {
	Push(context.Context, *WorkOfInt32ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenComplex64 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushInt32ThenComplex64 interface {
	Push(context.Context, *WorkOfInt32ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenError struct {
	Argument int32
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushInt32ThenError interface {
	Push(context.Context, *WorkOfInt32ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenFloat32 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushInt32ThenFloat32 interface {
	Push(context.Context, *WorkOfInt32ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenFloat64 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushInt32ThenFloat64 interface {
	Push(context.Context, *WorkOfInt32ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenInt struct {
	Argument int32
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushInt32ThenInt interface {
	Push(context.Context, *WorkOfInt32ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenInt16 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushInt32ThenInt16 interface {
	Push(context.Context, *WorkOfInt32ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenInt32 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushInt32ThenInt32 interface {
	Push(context.Context, *WorkOfInt32ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenInt64 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushInt32ThenInt64 interface {
	Push(context.Context, *WorkOfInt32ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenInt8 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushInt32ThenInt8 interface {
	Push(context.Context, *WorkOfInt32ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenRune struct {
	Argument int32
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushInt32ThenRune interface {
	Push(context.Context, *WorkOfInt32ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenString struct {
	Argument int32
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushInt32ThenString interface {
	Push(context.Context, *WorkOfInt32ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenUint struct {
	Argument int32
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushInt32ThenUint interface {
	Push(context.Context, *WorkOfInt32ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenUint16 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushInt32ThenUint16 interface {
	Push(context.Context, *WorkOfInt32ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenUint32 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushInt32ThenUint32 interface {
	Push(context.Context, *WorkOfInt32ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenUint64 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushInt32ThenUint64 interface {
	Push(context.Context, *WorkOfInt32ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenUint8 struct {
	Argument int32
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushInt32ThenUint8 interface {
	Push(context.Context, *WorkOfInt32ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenUintptr struct {
	Argument int32
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushInt32ThenUintptr interface {
	Push(context.Context, *WorkOfInt32ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenInterface struct {
	Argument int32
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushInt32ThenInterface interface {
	Push(context.Context, *WorkOfInt32ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfInt32ThenStruct struct {
	Argument int32
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushInt32ThenStruct interface {
	Push(context.Context, *WorkOfInt32ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenBool struct {
	Argument int64
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushInt64ThenBool interface {
	Push(context.Context, *WorkOfInt64ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenByte struct {
	Argument int64
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushInt64ThenByte interface {
	Push(context.Context, *WorkOfInt64ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenComplex128 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushInt64ThenComplex128 interface {
	Push(context.Context, *WorkOfInt64ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenComplex64 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushInt64ThenComplex64 interface {
	Push(context.Context, *WorkOfInt64ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenError struct {
	Argument int64
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushInt64ThenError interface {
	Push(context.Context, *WorkOfInt64ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenFloat32 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushInt64ThenFloat32 interface {
	Push(context.Context, *WorkOfInt64ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenFloat64 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushInt64ThenFloat64 interface {
	Push(context.Context, *WorkOfInt64ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenInt struct {
	Argument int64
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushInt64ThenInt interface {
	Push(context.Context, *WorkOfInt64ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenInt16 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushInt64ThenInt16 interface {
	Push(context.Context, *WorkOfInt64ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenInt32 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushInt64ThenInt32 interface {
	Push(context.Context, *WorkOfInt64ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenInt64 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushInt64ThenInt64 interface {
	Push(context.Context, *WorkOfInt64ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenInt8 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushInt64ThenInt8 interface {
	Push(context.Context, *WorkOfInt64ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenRune struct {
	Argument int64
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushInt64ThenRune interface {
	Push(context.Context, *WorkOfInt64ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenString struct {
	Argument int64
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushInt64ThenString interface {
	Push(context.Context, *WorkOfInt64ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenUint struct {
	Argument int64
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushInt64ThenUint interface {
	Push(context.Context, *WorkOfInt64ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenUint16 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushInt64ThenUint16 interface {
	Push(context.Context, *WorkOfInt64ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenUint32 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushInt64ThenUint32 interface {
	Push(context.Context, *WorkOfInt64ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenUint64 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushInt64ThenUint64 interface {
	Push(context.Context, *WorkOfInt64ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenUint8 struct {
	Argument int64
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushInt64ThenUint8 interface {
	Push(context.Context, *WorkOfInt64ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenUintptr struct {
	Argument int64
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushInt64ThenUintptr interface {
	Push(context.Context, *WorkOfInt64ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenInterface struct {
	Argument int64
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushInt64ThenInterface interface {
	Push(context.Context, *WorkOfInt64ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfInt64ThenStruct struct {
	Argument int64
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushInt64ThenStruct interface {
	Push(context.Context, *WorkOfInt64ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenBool struct {
	Argument int8
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushInt8ThenBool interface {
	Push(context.Context, *WorkOfInt8ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenByte struct {
	Argument int8
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushInt8ThenByte interface {
	Push(context.Context, *WorkOfInt8ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenComplex128 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushInt8ThenComplex128 interface {
	Push(context.Context, *WorkOfInt8ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenComplex64 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushInt8ThenComplex64 interface {
	Push(context.Context, *WorkOfInt8ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenError struct {
	Argument int8
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushInt8ThenError interface {
	Push(context.Context, *WorkOfInt8ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenFloat32 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushInt8ThenFloat32 interface {
	Push(context.Context, *WorkOfInt8ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenFloat64 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushInt8ThenFloat64 interface {
	Push(context.Context, *WorkOfInt8ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenInt struct {
	Argument int8
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushInt8ThenInt interface {
	Push(context.Context, *WorkOfInt8ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenInt16 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushInt8ThenInt16 interface {
	Push(context.Context, *WorkOfInt8ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenInt32 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushInt8ThenInt32 interface {
	Push(context.Context, *WorkOfInt8ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenInt64 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushInt8ThenInt64 interface {
	Push(context.Context, *WorkOfInt8ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenInt8 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushInt8ThenInt8 interface {
	Push(context.Context, *WorkOfInt8ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenRune struct {
	Argument int8
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushInt8ThenRune interface {
	Push(context.Context, *WorkOfInt8ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenString struct {
	Argument int8
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushInt8ThenString interface {
	Push(context.Context, *WorkOfInt8ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenUint struct {
	Argument int8
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushInt8ThenUint interface {
	Push(context.Context, *WorkOfInt8ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenUint16 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushInt8ThenUint16 interface {
	Push(context.Context, *WorkOfInt8ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenUint32 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushInt8ThenUint32 interface {
	Push(context.Context, *WorkOfInt8ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenUint64 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushInt8ThenUint64 interface {
	Push(context.Context, *WorkOfInt8ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenUint8 struct {
	Argument int8
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushInt8ThenUint8 interface {
	Push(context.Context, *WorkOfInt8ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenUintptr struct {
	Argument int8
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushInt8ThenUintptr interface {
	Push(context.Context, *WorkOfInt8ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenInterface struct {
	Argument int8
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushInt8ThenInterface interface {
	Push(context.Context, *WorkOfInt8ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfInt8ThenStruct struct {
	Argument int8
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushInt8ThenStruct interface {
	Push(context.Context, *WorkOfInt8ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenBool struct {
	Argument rune
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushRuneThenBool interface {
	Push(context.Context, *WorkOfRuneThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenByte struct {
	Argument rune
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushRuneThenByte interface {
	Push(context.Context, *WorkOfRuneThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenComplex128 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushRuneThenComplex128 interface {
	Push(context.Context, *WorkOfRuneThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenComplex64 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushRuneThenComplex64 interface {
	Push(context.Context, *WorkOfRuneThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenError struct {
	Argument rune
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushRuneThenError interface {
	Push(context.Context, *WorkOfRuneThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenFloat32 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushRuneThenFloat32 interface {
	Push(context.Context, *WorkOfRuneThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenFloat64 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushRuneThenFloat64 interface {
	Push(context.Context, *WorkOfRuneThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenInt struct {
	Argument rune
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushRuneThenInt interface {
	Push(context.Context, *WorkOfRuneThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenInt16 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushRuneThenInt16 interface {
	Push(context.Context, *WorkOfRuneThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenInt32 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushRuneThenInt32 interface {
	Push(context.Context, *WorkOfRuneThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenInt64 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushRuneThenInt64 interface {
	Push(context.Context, *WorkOfRuneThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenInt8 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushRuneThenInt8 interface {
	Push(context.Context, *WorkOfRuneThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenRune struct {
	Argument rune
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushRuneThenRune interface {
	Push(context.Context, *WorkOfRuneThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenString struct {
	Argument rune
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushRuneThenString interface {
	Push(context.Context, *WorkOfRuneThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenUint struct {
	Argument rune
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushRuneThenUint interface {
	Push(context.Context, *WorkOfRuneThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenUint16 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushRuneThenUint16 interface {
	Push(context.Context, *WorkOfRuneThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenUint32 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushRuneThenUint32 interface {
	Push(context.Context, *WorkOfRuneThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenUint64 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushRuneThenUint64 interface {
	Push(context.Context, *WorkOfRuneThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenUint8 struct {
	Argument rune
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushRuneThenUint8 interface {
	Push(context.Context, *WorkOfRuneThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenUintptr struct {
	Argument rune
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushRuneThenUintptr interface {
	Push(context.Context, *WorkOfRuneThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenInterface struct {
	Argument rune
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushRuneThenInterface interface {
	Push(context.Context, *WorkOfRuneThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfRuneThenStruct struct {
	Argument rune
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushRuneThenStruct interface {
	Push(context.Context, *WorkOfRuneThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenBool struct {
	Argument string
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushStringThenBool interface {
	Push(context.Context, *WorkOfStringThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenByte struct {
	Argument string
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushStringThenByte interface {
	Push(context.Context, *WorkOfStringThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenComplex128 struct {
	Argument string
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushStringThenComplex128 interface {
	Push(context.Context, *WorkOfStringThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenComplex64 struct {
	Argument string
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushStringThenComplex64 interface {
	Push(context.Context, *WorkOfStringThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenError struct {
	Argument string
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushStringThenError interface {
	Push(context.Context, *WorkOfStringThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenFloat32 struct {
	Argument string
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushStringThenFloat32 interface {
	Push(context.Context, *WorkOfStringThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenFloat64 struct {
	Argument string
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushStringThenFloat64 interface {
	Push(context.Context, *WorkOfStringThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInt struct {
	Argument string
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushStringThenInt interface {
	Push(context.Context, *WorkOfStringThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInt16 struct {
	Argument string
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushStringThenInt16 interface {
	Push(context.Context, *WorkOfStringThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInt32 struct {
	Argument string
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushStringThenInt32 interface {
	Push(context.Context, *WorkOfStringThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInt64 struct {
	Argument string
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushStringThenInt64 interface {
	Push(context.Context, *WorkOfStringThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInt8 struct {
	Argument string
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushStringThenInt8 interface {
	Push(context.Context, *WorkOfStringThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenRune struct {
	Argument string
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushStringThenRune interface {
	Push(context.Context, *WorkOfStringThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenString struct {
	Argument string
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushStringThenString interface {
	Push(context.Context, *WorkOfStringThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenUint struct {
	Argument string
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushStringThenUint interface {
	Push(context.Context, *WorkOfStringThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenUint16 struct {
	Argument string
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushStringThenUint16 interface {
	Push(context.Context, *WorkOfStringThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenUint32 struct {
	Argument string
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushStringThenUint32 interface {
	Push(context.Context, *WorkOfStringThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenUint64 struct {
	Argument string
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushStringThenUint64 interface {
	Push(context.Context, *WorkOfStringThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenUint8 struct {
	Argument string
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushStringThenUint8 interface {
	Push(context.Context, *WorkOfStringThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenUintptr struct {
	Argument string
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushStringThenUintptr interface {
	Push(context.Context, *WorkOfStringThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInterface struct {
	Argument string
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushStringThenInterface interface {
	Push(context.Context, *WorkOfStringThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenStruct struct {
	Argument string
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushStringThenStruct interface {
	Push(context.Context, *WorkOfStringThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenBool struct {
	Argument uint
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushUintThenBool interface {
	Push(context.Context, *WorkOfUintThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenByte struct {
	Argument uint
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushUintThenByte interface {
	Push(context.Context, *WorkOfUintThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenComplex128 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushUintThenComplex128 interface {
	Push(context.Context, *WorkOfUintThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenComplex64 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushUintThenComplex64 interface {
	Push(context.Context, *WorkOfUintThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenError struct {
	Argument uint
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushUintThenError interface {
	Push(context.Context, *WorkOfUintThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenFloat32 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushUintThenFloat32 interface {
	Push(context.Context, *WorkOfUintThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenFloat64 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushUintThenFloat64 interface {
	Push(context.Context, *WorkOfUintThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenInt struct {
	Argument uint
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushUintThenInt interface {
	Push(context.Context, *WorkOfUintThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenInt16 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushUintThenInt16 interface {
	Push(context.Context, *WorkOfUintThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenInt32 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushUintThenInt32 interface {
	Push(context.Context, *WorkOfUintThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenInt64 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushUintThenInt64 interface {
	Push(context.Context, *WorkOfUintThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenInt8 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushUintThenInt8 interface {
	Push(context.Context, *WorkOfUintThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenRune struct {
	Argument uint
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushUintThenRune interface {
	Push(context.Context, *WorkOfUintThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenString struct {
	Argument uint
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushUintThenString interface {
	Push(context.Context, *WorkOfUintThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenUint struct {
	Argument uint
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushUintThenUint interface {
	Push(context.Context, *WorkOfUintThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenUint16 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushUintThenUint16 interface {
	Push(context.Context, *WorkOfUintThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenUint32 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushUintThenUint32 interface {
	Push(context.Context, *WorkOfUintThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenUint64 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushUintThenUint64 interface {
	Push(context.Context, *WorkOfUintThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenUint8 struct {
	Argument uint
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushUintThenUint8 interface {
	Push(context.Context, *WorkOfUintThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenUintptr struct {
	Argument uint
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushUintThenUintptr interface {
	Push(context.Context, *WorkOfUintThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenInterface struct {
	Argument uint
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushUintThenInterface interface {
	Push(context.Context, *WorkOfUintThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfUintThenStruct struct {
	Argument uint
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushUintThenStruct interface {
	Push(context.Context, *WorkOfUintThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenBool struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushUint16ThenBool interface {
	Push(context.Context, *WorkOfUint16ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenByte struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushUint16ThenByte interface {
	Push(context.Context, *WorkOfUint16ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenComplex128 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushUint16ThenComplex128 interface {
	Push(context.Context, *WorkOfUint16ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenComplex64 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushUint16ThenComplex64 interface {
	Push(context.Context, *WorkOfUint16ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenError struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushUint16ThenError interface {
	Push(context.Context, *WorkOfUint16ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenFloat32 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushUint16ThenFloat32 interface {
	Push(context.Context, *WorkOfUint16ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenFloat64 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushUint16ThenFloat64 interface {
	Push(context.Context, *WorkOfUint16ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenInt struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushUint16ThenInt interface {
	Push(context.Context, *WorkOfUint16ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenInt16 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushUint16ThenInt16 interface {
	Push(context.Context, *WorkOfUint16ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenInt32 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushUint16ThenInt32 interface {
	Push(context.Context, *WorkOfUint16ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenInt64 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushUint16ThenInt64 interface {
	Push(context.Context, *WorkOfUint16ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenInt8 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushUint16ThenInt8 interface {
	Push(context.Context, *WorkOfUint16ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenRune struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushUint16ThenRune interface {
	Push(context.Context, *WorkOfUint16ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenString struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushUint16ThenString interface {
	Push(context.Context, *WorkOfUint16ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenUint struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushUint16ThenUint interface {
	Push(context.Context, *WorkOfUint16ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenUint16 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushUint16ThenUint16 interface {
	Push(context.Context, *WorkOfUint16ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenUint32 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushUint16ThenUint32 interface {
	Push(context.Context, *WorkOfUint16ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenUint64 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushUint16ThenUint64 interface {
	Push(context.Context, *WorkOfUint16ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenUint8 struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushUint16ThenUint8 interface {
	Push(context.Context, *WorkOfUint16ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenUintptr struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushUint16ThenUintptr interface {
	Push(context.Context, *WorkOfUint16ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenInterface struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushUint16ThenInterface interface {
	Push(context.Context, *WorkOfUint16ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfUint16ThenStruct struct {
	Argument uint16
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushUint16ThenStruct interface {
	Push(context.Context, *WorkOfUint16ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenBool struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushUint32ThenBool interface {
	Push(context.Context, *WorkOfUint32ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenByte struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushUint32ThenByte interface {
	Push(context.Context, *WorkOfUint32ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenComplex128 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushUint32ThenComplex128 interface {
	Push(context.Context, *WorkOfUint32ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenComplex64 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushUint32ThenComplex64 interface {
	Push(context.Context, *WorkOfUint32ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenError struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushUint32ThenError interface {
	Push(context.Context, *WorkOfUint32ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenFloat32 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushUint32ThenFloat32 interface {
	Push(context.Context, *WorkOfUint32ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenFloat64 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushUint32ThenFloat64 interface {
	Push(context.Context, *WorkOfUint32ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenInt struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushUint32ThenInt interface {
	Push(context.Context, *WorkOfUint32ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenInt16 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushUint32ThenInt16 interface {
	Push(context.Context, *WorkOfUint32ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenInt32 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushUint32ThenInt32 interface {
	Push(context.Context, *WorkOfUint32ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenInt64 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushUint32ThenInt64 interface {
	Push(context.Context, *WorkOfUint32ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenInt8 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushUint32ThenInt8 interface {
	Push(context.Context, *WorkOfUint32ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenRune struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushUint32ThenRune interface {
	Push(context.Context, *WorkOfUint32ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenString struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushUint32ThenString interface {
	Push(context.Context, *WorkOfUint32ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenUint struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushUint32ThenUint interface {
	Push(context.Context, *WorkOfUint32ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenUint16 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushUint32ThenUint16 interface {
	Push(context.Context, *WorkOfUint32ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenUint32 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushUint32ThenUint32 interface {
	Push(context.Context, *WorkOfUint32ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenUint64 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushUint32ThenUint64 interface {
	Push(context.Context, *WorkOfUint32ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenUint8 struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushUint32ThenUint8 interface {
	Push(context.Context, *WorkOfUint32ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenUintptr struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushUint32ThenUintptr interface {
	Push(context.Context, *WorkOfUint32ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenInterface struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushUint32ThenInterface interface {
	Push(context.Context, *WorkOfUint32ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfUint32ThenStruct struct {
	Argument uint32
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushUint32ThenStruct interface {
	Push(context.Context, *WorkOfUint32ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenBool struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushUint64ThenBool interface {
	Push(context.Context, *WorkOfUint64ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenByte struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushUint64ThenByte interface {
	Push(context.Context, *WorkOfUint64ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenComplex128 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushUint64ThenComplex128 interface {
	Push(context.Context, *WorkOfUint64ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenComplex64 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushUint64ThenComplex64 interface {
	Push(context.Context, *WorkOfUint64ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenError struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushUint64ThenError interface {
	Push(context.Context, *WorkOfUint64ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenFloat32 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushUint64ThenFloat32 interface {
	Push(context.Context, *WorkOfUint64ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenFloat64 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushUint64ThenFloat64 interface {
	Push(context.Context, *WorkOfUint64ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenInt struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushUint64ThenInt interface {
	Push(context.Context, *WorkOfUint64ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenInt16 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushUint64ThenInt16 interface {
	Push(context.Context, *WorkOfUint64ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenInt32 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushUint64ThenInt32 interface {
	Push(context.Context, *WorkOfUint64ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenInt64 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushUint64ThenInt64 interface {
	Push(context.Context, *WorkOfUint64ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenInt8 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushUint64ThenInt8 interface {
	Push(context.Context, *WorkOfUint64ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenRune struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushUint64ThenRune interface {
	Push(context.Context, *WorkOfUint64ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenString struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushUint64ThenString interface {
	Push(context.Context, *WorkOfUint64ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenUint struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushUint64ThenUint interface {
	Push(context.Context, *WorkOfUint64ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenUint16 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushUint64ThenUint16 interface {
	Push(context.Context, *WorkOfUint64ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenUint32 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushUint64ThenUint32 interface {
	Push(context.Context, *WorkOfUint64ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenUint64 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushUint64ThenUint64 interface {
	Push(context.Context, *WorkOfUint64ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenUint8 struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushUint64ThenUint8 interface {
	Push(context.Context, *WorkOfUint64ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenUintptr struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushUint64ThenUintptr interface {
	Push(context.Context, *WorkOfUint64ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenInterface struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushUint64ThenInterface interface {
	Push(context.Context, *WorkOfUint64ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfUint64ThenStruct struct {
	Argument uint64
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushUint64ThenStruct interface {
	Push(context.Context, *WorkOfUint64ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenBool struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushUint8ThenBool interface {
	Push(context.Context, *WorkOfUint8ThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenByte struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushUint8ThenByte interface {
	Push(context.Context, *WorkOfUint8ThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenComplex128 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushUint8ThenComplex128 interface {
	Push(context.Context, *WorkOfUint8ThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenComplex64 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushUint8ThenComplex64 interface {
	Push(context.Context, *WorkOfUint8ThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenError struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushUint8ThenError interface {
	Push(context.Context, *WorkOfUint8ThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenFloat32 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushUint8ThenFloat32 interface {
	Push(context.Context, *WorkOfUint8ThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenFloat64 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushUint8ThenFloat64 interface {
	Push(context.Context, *WorkOfUint8ThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenInt struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushUint8ThenInt interface {
	Push(context.Context, *WorkOfUint8ThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenInt16 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushUint8ThenInt16 interface {
	Push(context.Context, *WorkOfUint8ThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenInt32 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushUint8ThenInt32 interface {
	Push(context.Context, *WorkOfUint8ThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenInt64 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushUint8ThenInt64 interface {
	Push(context.Context, *WorkOfUint8ThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenInt8 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushUint8ThenInt8 interface {
	Push(context.Context, *WorkOfUint8ThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenRune struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushUint8ThenRune interface {
	Push(context.Context, *WorkOfUint8ThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenString struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushUint8ThenString interface {
	Push(context.Context, *WorkOfUint8ThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenUint struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushUint8ThenUint interface {
	Push(context.Context, *WorkOfUint8ThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenUint16 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushUint8ThenUint16 interface {
	Push(context.Context, *WorkOfUint8ThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenUint32 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushUint8ThenUint32 interface {
	Push(context.Context, *WorkOfUint8ThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenUint64 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushUint8ThenUint64 interface {
	Push(context.Context, *WorkOfUint8ThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenUint8 struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushUint8ThenUint8 interface {
	Push(context.Context, *WorkOfUint8ThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenUintptr struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushUint8ThenUintptr interface {
	Push(context.Context, *WorkOfUint8ThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenInterface struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushUint8ThenInterface interface {
	Push(context.Context, *WorkOfUint8ThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfUint8ThenStruct struct {
	Argument uint8
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushUint8ThenStruct interface {
	Push(context.Context, *WorkOfUint8ThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenBool struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushUintptrThenBool interface {
	Push(context.Context, *WorkOfUintptrThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenByte struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushUintptrThenByte interface {
	Push(context.Context, *WorkOfUintptrThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenComplex128 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushUintptrThenComplex128 interface {
	Push(context.Context, *WorkOfUintptrThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenComplex64 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushUintptrThenComplex64 interface {
	Push(context.Context, *WorkOfUintptrThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenError struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushUintptrThenError interface {
	Push(context.Context, *WorkOfUintptrThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenFloat32 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushUintptrThenFloat32 interface {
	Push(context.Context, *WorkOfUintptrThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenFloat64 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushUintptrThenFloat64 interface {
	Push(context.Context, *WorkOfUintptrThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenInt struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushUintptrThenInt interface {
	Push(context.Context, *WorkOfUintptrThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenInt16 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushUintptrThenInt16 interface {
	Push(context.Context, *WorkOfUintptrThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenInt32 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushUintptrThenInt32 interface {
	Push(context.Context, *WorkOfUintptrThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenInt64 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushUintptrThenInt64 interface {
	Push(context.Context, *WorkOfUintptrThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenInt8 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushUintptrThenInt8 interface {
	Push(context.Context, *WorkOfUintptrThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenRune struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushUintptrThenRune interface {
	Push(context.Context, *WorkOfUintptrThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenString struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushUintptrThenString interface {
	Push(context.Context, *WorkOfUintptrThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenUint struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushUintptrThenUint interface {
	Push(context.Context, *WorkOfUintptrThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenUint16 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushUintptrThenUint16 interface {
	Push(context.Context, *WorkOfUintptrThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenUint32 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushUintptrThenUint32 interface {
	Push(context.Context, *WorkOfUintptrThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenUint64 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushUintptrThenUint64 interface {
	Push(context.Context, *WorkOfUintptrThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenUint8 struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushUintptrThenUint8 interface {
	Push(context.Context, *WorkOfUintptrThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenUintptr struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushUintptrThenUintptr interface {
	Push(context.Context, *WorkOfUintptrThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenInterface struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushUintptrThenInterface interface {
	Push(context.Context, *WorkOfUintptrThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfUintptrThenStruct struct {
	Argument uintptr
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushUintptrThenStruct interface {
	Push(context.Context, *WorkOfUintptrThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenBool struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushInterfaceThenBool interface {
	Push(context.Context, *WorkOfInterfaceThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenByte struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushInterfaceThenByte interface {
	Push(context.Context, *WorkOfInterfaceThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenComplex128 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushInterfaceThenComplex128 interface {
	Push(context.Context, *WorkOfInterfaceThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenComplex64 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushInterfaceThenComplex64 interface {
	Push(context.Context, *WorkOfInterfaceThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenError struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushInterfaceThenError interface {
	Push(context.Context, *WorkOfInterfaceThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenFloat32 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushInterfaceThenFloat32 interface {
	Push(context.Context, *WorkOfInterfaceThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenFloat64 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushInterfaceThenFloat64 interface {
	Push(context.Context, *WorkOfInterfaceThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInt struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushInterfaceThenInt interface {
	Push(context.Context, *WorkOfInterfaceThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInt16 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushInterfaceThenInt16 interface {
	Push(context.Context, *WorkOfInterfaceThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInt32 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushInterfaceThenInt32 interface {
	Push(context.Context, *WorkOfInterfaceThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInt64 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushInterfaceThenInt64 interface {
	Push(context.Context, *WorkOfInterfaceThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInt8 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushInterfaceThenInt8 interface {
	Push(context.Context, *WorkOfInterfaceThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenRune struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushInterfaceThenRune interface {
	Push(context.Context, *WorkOfInterfaceThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenString struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushInterfaceThenString interface {
	Push(context.Context, *WorkOfInterfaceThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenUint struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushInterfaceThenUint interface {
	Push(context.Context, *WorkOfInterfaceThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenUint16 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushInterfaceThenUint16 interface {
	Push(context.Context, *WorkOfInterfaceThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenUint32 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushInterfaceThenUint32 interface {
	Push(context.Context, *WorkOfInterfaceThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenUint64 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushInterfaceThenUint64 interface {
	Push(context.Context, *WorkOfInterfaceThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenUint8 struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushInterfaceThenUint8 interface {
	Push(context.Context, *WorkOfInterfaceThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenUintptr struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushInterfaceThenUintptr interface {
	Push(context.Context, *WorkOfInterfaceThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInterface struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushInterfaceThenInterface interface {
	Push(context.Context, *WorkOfInterfaceThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenStruct struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushInterfaceThenStruct interface {
	Push(context.Context, *WorkOfInterfaceThenStruct)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenBool struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfBool
}

type WorkerOfPushStructThenBool interface {
	Push(context.Context, *WorkOfStructThenBool)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenByte struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfByte
}

type WorkerOfPushStructThenByte interface {
	Push(context.Context, *WorkOfStructThenByte)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenComplex128 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfComplex128
}

type WorkerOfPushStructThenComplex128 interface {
	Push(context.Context, *WorkOfStructThenComplex128)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenComplex64 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfComplex64
}

type WorkerOfPushStructThenComplex64 interface {
	Push(context.Context, *WorkOfStructThenComplex64)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenError struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfError
}

type WorkerOfPushStructThenError interface {
	Push(context.Context, *WorkOfStructThenError)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenFloat32 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfFloat32
}

type WorkerOfPushStructThenFloat32 interface {
	Push(context.Context, *WorkOfStructThenFloat32)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenFloat64 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfFloat64
}

type WorkerOfPushStructThenFloat64 interface {
	Push(context.Context, *WorkOfStructThenFloat64)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenInt struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfInt
}

type WorkerOfPushStructThenInt interface {
	Push(context.Context, *WorkOfStructThenInt)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenInt16 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfInt16
}

type WorkerOfPushStructThenInt16 interface {
	Push(context.Context, *WorkOfStructThenInt16)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenInt32 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfInt32
}

type WorkerOfPushStructThenInt32 interface {
	Push(context.Context, *WorkOfStructThenInt32)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenInt64 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfInt64
}

type WorkerOfPushStructThenInt64 interface {
	Push(context.Context, *WorkOfStructThenInt64)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenInt8 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfInt8
}

type WorkerOfPushStructThenInt8 interface {
	Push(context.Context, *WorkOfStructThenInt8)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenRune struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfRune
}

type WorkerOfPushStructThenRune interface {
	Push(context.Context, *WorkOfStructThenRune)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenString struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfString
}

type WorkerOfPushStructThenString interface {
	Push(context.Context, *WorkOfStructThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenUint struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfUint
}

type WorkerOfPushStructThenUint interface {
	Push(context.Context, *WorkOfStructThenUint)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenUint16 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfUint16
}

type WorkerOfPushStructThenUint16 interface {
	Push(context.Context, *WorkOfStructThenUint16)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenUint32 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfUint32
}

type WorkerOfPushStructThenUint32 interface {
	Push(context.Context, *WorkOfStructThenUint32)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenUint64 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfUint64
}

type WorkerOfPushStructThenUint64 interface {
	Push(context.Context, *WorkOfStructThenUint64)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenUint8 struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfUint8
}

type WorkerOfPushStructThenUint8 interface {
	Push(context.Context, *WorkOfStructThenUint8)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenUintptr struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfUintptr
}

type WorkerOfPushStructThenUintptr interface {
	Push(context.Context, *WorkOfStructThenUintptr)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenInterface struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfInterface
}

type WorkerOfPushStructThenInterface interface {
	Push(context.Context, *WorkOfStructThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfStructThenStruct struct {
	Argument struct{}
	ReturnCh chan<- *ReturnOfStruct
}

type WorkerOfPushStructThenStruct interface {
	Push(context.Context, *WorkOfStructThenStruct)
	DoneNotify() <-chan struct{}
}
