// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package async

import (
	"context"
	"sync"
)

type RequestOfBoolToBool struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToBool{}
		},
	}
)

func GetRequestOfBoolToBool() *RequestOfBoolToBool {
	return pool_of_RequestOfBoolToBool.Get().(*RequestOfBoolToBool)
}
func PutRequestOfBoolToBool(d *RequestOfBoolToBool) {
	pool_of_RequestOfBoolToBool.Put(d)
}

type RequestOfBoolToByte struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToByte{}
		},
	}
)

func GetRequestOfBoolToByte() *RequestOfBoolToByte {
	return pool_of_RequestOfBoolToByte.Get().(*RequestOfBoolToByte)
}
func PutRequestOfBoolToByte(d *RequestOfBoolToByte) {
	pool_of_RequestOfBoolToByte.Put(d)
}

type RequestOfBoolToComplex128 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToComplex128{}
		},
	}
)

func GetRequestOfBoolToComplex128() *RequestOfBoolToComplex128 {
	return pool_of_RequestOfBoolToComplex128.Get().(*RequestOfBoolToComplex128)
}
func PutRequestOfBoolToComplex128(d *RequestOfBoolToComplex128) {
	pool_of_RequestOfBoolToComplex128.Put(d)
}

type RequestOfBoolToComplex64 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToComplex64{}
		},
	}
)

func GetRequestOfBoolToComplex64() *RequestOfBoolToComplex64 {
	return pool_of_RequestOfBoolToComplex64.Get().(*RequestOfBoolToComplex64)
}
func PutRequestOfBoolToComplex64(d *RequestOfBoolToComplex64) {
	pool_of_RequestOfBoolToComplex64.Put(d)
}

type RequestOfBoolToError struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToError{}
		},
	}
)

func GetRequestOfBoolToError() *RequestOfBoolToError {
	return pool_of_RequestOfBoolToError.Get().(*RequestOfBoolToError)
}
func PutRequestOfBoolToError(d *RequestOfBoolToError) {
	pool_of_RequestOfBoolToError.Put(d)
}

type RequestOfBoolToFloat32 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToFloat32{}
		},
	}
)

func GetRequestOfBoolToFloat32() *RequestOfBoolToFloat32 {
	return pool_of_RequestOfBoolToFloat32.Get().(*RequestOfBoolToFloat32)
}
func PutRequestOfBoolToFloat32(d *RequestOfBoolToFloat32) {
	pool_of_RequestOfBoolToFloat32.Put(d)
}

type RequestOfBoolToFloat64 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToFloat64{}
		},
	}
)

func GetRequestOfBoolToFloat64() *RequestOfBoolToFloat64 {
	return pool_of_RequestOfBoolToFloat64.Get().(*RequestOfBoolToFloat64)
}
func PutRequestOfBoolToFloat64(d *RequestOfBoolToFloat64) {
	pool_of_RequestOfBoolToFloat64.Put(d)
}

type RequestOfBoolToInt struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToInt{}
		},
	}
)

func GetRequestOfBoolToInt() *RequestOfBoolToInt {
	return pool_of_RequestOfBoolToInt.Get().(*RequestOfBoolToInt)
}
func PutRequestOfBoolToInt(d *RequestOfBoolToInt) {
	pool_of_RequestOfBoolToInt.Put(d)
}

type RequestOfBoolToInt16 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToInt16{}
		},
	}
)

func GetRequestOfBoolToInt16() *RequestOfBoolToInt16 {
	return pool_of_RequestOfBoolToInt16.Get().(*RequestOfBoolToInt16)
}
func PutRequestOfBoolToInt16(d *RequestOfBoolToInt16) {
	pool_of_RequestOfBoolToInt16.Put(d)
}

type RequestOfBoolToInt32 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToInt32{}
		},
	}
)

func GetRequestOfBoolToInt32() *RequestOfBoolToInt32 {
	return pool_of_RequestOfBoolToInt32.Get().(*RequestOfBoolToInt32)
}
func PutRequestOfBoolToInt32(d *RequestOfBoolToInt32) {
	pool_of_RequestOfBoolToInt32.Put(d)
}

type RequestOfBoolToInt64 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToInt64{}
		},
	}
)

func GetRequestOfBoolToInt64() *RequestOfBoolToInt64 {
	return pool_of_RequestOfBoolToInt64.Get().(*RequestOfBoolToInt64)
}
func PutRequestOfBoolToInt64(d *RequestOfBoolToInt64) {
	pool_of_RequestOfBoolToInt64.Put(d)
}

type RequestOfBoolToInt8 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToInt8{}
		},
	}
)

func GetRequestOfBoolToInt8() *RequestOfBoolToInt8 {
	return pool_of_RequestOfBoolToInt8.Get().(*RequestOfBoolToInt8)
}
func PutRequestOfBoolToInt8(d *RequestOfBoolToInt8) {
	pool_of_RequestOfBoolToInt8.Put(d)
}

type RequestOfBoolToRune struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToRune{}
		},
	}
)

func GetRequestOfBoolToRune() *RequestOfBoolToRune {
	return pool_of_RequestOfBoolToRune.Get().(*RequestOfBoolToRune)
}
func PutRequestOfBoolToRune(d *RequestOfBoolToRune) {
	pool_of_RequestOfBoolToRune.Put(d)
}

type RequestOfBoolToString struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToString{}
		},
	}
)

func GetRequestOfBoolToString() *RequestOfBoolToString {
	return pool_of_RequestOfBoolToString.Get().(*RequestOfBoolToString)
}
func PutRequestOfBoolToString(d *RequestOfBoolToString) {
	pool_of_RequestOfBoolToString.Put(d)
}

type RequestOfBoolToUint struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToUint{}
		},
	}
)

func GetRequestOfBoolToUint() *RequestOfBoolToUint {
	return pool_of_RequestOfBoolToUint.Get().(*RequestOfBoolToUint)
}
func PutRequestOfBoolToUint(d *RequestOfBoolToUint) {
	pool_of_RequestOfBoolToUint.Put(d)
}

type RequestOfBoolToUint16 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToUint16{}
		},
	}
)

func GetRequestOfBoolToUint16() *RequestOfBoolToUint16 {
	return pool_of_RequestOfBoolToUint16.Get().(*RequestOfBoolToUint16)
}
func PutRequestOfBoolToUint16(d *RequestOfBoolToUint16) {
	pool_of_RequestOfBoolToUint16.Put(d)
}

type RequestOfBoolToUint32 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToUint32{}
		},
	}
)

func GetRequestOfBoolToUint32() *RequestOfBoolToUint32 {
	return pool_of_RequestOfBoolToUint32.Get().(*RequestOfBoolToUint32)
}
func PutRequestOfBoolToUint32(d *RequestOfBoolToUint32) {
	pool_of_RequestOfBoolToUint32.Put(d)
}

type RequestOfBoolToUint64 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToUint64{}
		},
	}
)

func GetRequestOfBoolToUint64() *RequestOfBoolToUint64 {
	return pool_of_RequestOfBoolToUint64.Get().(*RequestOfBoolToUint64)
}
func PutRequestOfBoolToUint64(d *RequestOfBoolToUint64) {
	pool_of_RequestOfBoolToUint64.Put(d)
}

type RequestOfBoolToUint8 struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToUint8{}
		},
	}
)

func GetRequestOfBoolToUint8() *RequestOfBoolToUint8 {
	return pool_of_RequestOfBoolToUint8.Get().(*RequestOfBoolToUint8)
}
func PutRequestOfBoolToUint8(d *RequestOfBoolToUint8) {
	pool_of_RequestOfBoolToUint8.Put(d)
}

type RequestOfBoolToUintptr struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToUintptr{}
		},
	}
)

func GetRequestOfBoolToUintptr() *RequestOfBoolToUintptr {
	return pool_of_RequestOfBoolToUintptr.Get().(*RequestOfBoolToUintptr)
}
func PutRequestOfBoolToUintptr(d *RequestOfBoolToUintptr) {
	pool_of_RequestOfBoolToUintptr.Put(d)
}

type RequestOfBoolToBytes struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToBytes{}
		},
	}
)

func GetRequestOfBoolToBytes() *RequestOfBoolToBytes {
	return pool_of_RequestOfBoolToBytes.Get().(*RequestOfBoolToBytes)
}
func PutRequestOfBoolToBytes(d *RequestOfBoolToBytes) {
	pool_of_RequestOfBoolToBytes.Put(d)
}

type RequestOfBoolToInterface struct {
	Context  context.Context
	Value    bool
	ReturnCh chan<- ReturnOfBool
}

var (
	pool_of_RequestOfBoolToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfBoolToInterface{}
		},
	}
)

func GetRequestOfBoolToInterface() *RequestOfBoolToInterface {
	return pool_of_RequestOfBoolToInterface.Get().(*RequestOfBoolToInterface)
}
func PutRequestOfBoolToInterface(d *RequestOfBoolToInterface) {
	pool_of_RequestOfBoolToInterface.Put(d)
}

type RequestOfByteToBool struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToBool{}
		},
	}
)

func GetRequestOfByteToBool() *RequestOfByteToBool {
	return pool_of_RequestOfByteToBool.Get().(*RequestOfByteToBool)
}
func PutRequestOfByteToBool(d *RequestOfByteToBool) {
	pool_of_RequestOfByteToBool.Put(d)
}

type RequestOfByteToByte struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToByte{}
		},
	}
)

func GetRequestOfByteToByte() *RequestOfByteToByte {
	return pool_of_RequestOfByteToByte.Get().(*RequestOfByteToByte)
}
func PutRequestOfByteToByte(d *RequestOfByteToByte) {
	pool_of_RequestOfByteToByte.Put(d)
}

type RequestOfByteToComplex128 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToComplex128{}
		},
	}
)

func GetRequestOfByteToComplex128() *RequestOfByteToComplex128 {
	return pool_of_RequestOfByteToComplex128.Get().(*RequestOfByteToComplex128)
}
func PutRequestOfByteToComplex128(d *RequestOfByteToComplex128) {
	pool_of_RequestOfByteToComplex128.Put(d)
}

type RequestOfByteToComplex64 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToComplex64{}
		},
	}
)

func GetRequestOfByteToComplex64() *RequestOfByteToComplex64 {
	return pool_of_RequestOfByteToComplex64.Get().(*RequestOfByteToComplex64)
}
func PutRequestOfByteToComplex64(d *RequestOfByteToComplex64) {
	pool_of_RequestOfByteToComplex64.Put(d)
}

type RequestOfByteToError struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToError{}
		},
	}
)

func GetRequestOfByteToError() *RequestOfByteToError {
	return pool_of_RequestOfByteToError.Get().(*RequestOfByteToError)
}
func PutRequestOfByteToError(d *RequestOfByteToError) {
	pool_of_RequestOfByteToError.Put(d)
}

type RequestOfByteToFloat32 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToFloat32{}
		},
	}
)

func GetRequestOfByteToFloat32() *RequestOfByteToFloat32 {
	return pool_of_RequestOfByteToFloat32.Get().(*RequestOfByteToFloat32)
}
func PutRequestOfByteToFloat32(d *RequestOfByteToFloat32) {
	pool_of_RequestOfByteToFloat32.Put(d)
}

type RequestOfByteToFloat64 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToFloat64{}
		},
	}
)

func GetRequestOfByteToFloat64() *RequestOfByteToFloat64 {
	return pool_of_RequestOfByteToFloat64.Get().(*RequestOfByteToFloat64)
}
func PutRequestOfByteToFloat64(d *RequestOfByteToFloat64) {
	pool_of_RequestOfByteToFloat64.Put(d)
}

type RequestOfByteToInt struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToInt{}
		},
	}
)

func GetRequestOfByteToInt() *RequestOfByteToInt {
	return pool_of_RequestOfByteToInt.Get().(*RequestOfByteToInt)
}
func PutRequestOfByteToInt(d *RequestOfByteToInt) {
	pool_of_RequestOfByteToInt.Put(d)
}

type RequestOfByteToInt16 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToInt16{}
		},
	}
)

func GetRequestOfByteToInt16() *RequestOfByteToInt16 {
	return pool_of_RequestOfByteToInt16.Get().(*RequestOfByteToInt16)
}
func PutRequestOfByteToInt16(d *RequestOfByteToInt16) {
	pool_of_RequestOfByteToInt16.Put(d)
}

type RequestOfByteToInt32 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToInt32{}
		},
	}
)

func GetRequestOfByteToInt32() *RequestOfByteToInt32 {
	return pool_of_RequestOfByteToInt32.Get().(*RequestOfByteToInt32)
}
func PutRequestOfByteToInt32(d *RequestOfByteToInt32) {
	pool_of_RequestOfByteToInt32.Put(d)
}

type RequestOfByteToInt64 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToInt64{}
		},
	}
)

func GetRequestOfByteToInt64() *RequestOfByteToInt64 {
	return pool_of_RequestOfByteToInt64.Get().(*RequestOfByteToInt64)
}
func PutRequestOfByteToInt64(d *RequestOfByteToInt64) {
	pool_of_RequestOfByteToInt64.Put(d)
}

type RequestOfByteToInt8 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToInt8{}
		},
	}
)

func GetRequestOfByteToInt8() *RequestOfByteToInt8 {
	return pool_of_RequestOfByteToInt8.Get().(*RequestOfByteToInt8)
}
func PutRequestOfByteToInt8(d *RequestOfByteToInt8) {
	pool_of_RequestOfByteToInt8.Put(d)
}

type RequestOfByteToRune struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToRune{}
		},
	}
)

func GetRequestOfByteToRune() *RequestOfByteToRune {
	return pool_of_RequestOfByteToRune.Get().(*RequestOfByteToRune)
}
func PutRequestOfByteToRune(d *RequestOfByteToRune) {
	pool_of_RequestOfByteToRune.Put(d)
}

type RequestOfByteToString struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToString{}
		},
	}
)

func GetRequestOfByteToString() *RequestOfByteToString {
	return pool_of_RequestOfByteToString.Get().(*RequestOfByteToString)
}
func PutRequestOfByteToString(d *RequestOfByteToString) {
	pool_of_RequestOfByteToString.Put(d)
}

type RequestOfByteToUint struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToUint{}
		},
	}
)

func GetRequestOfByteToUint() *RequestOfByteToUint {
	return pool_of_RequestOfByteToUint.Get().(*RequestOfByteToUint)
}
func PutRequestOfByteToUint(d *RequestOfByteToUint) {
	pool_of_RequestOfByteToUint.Put(d)
}

type RequestOfByteToUint16 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToUint16{}
		},
	}
)

func GetRequestOfByteToUint16() *RequestOfByteToUint16 {
	return pool_of_RequestOfByteToUint16.Get().(*RequestOfByteToUint16)
}
func PutRequestOfByteToUint16(d *RequestOfByteToUint16) {
	pool_of_RequestOfByteToUint16.Put(d)
}

type RequestOfByteToUint32 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToUint32{}
		},
	}
)

func GetRequestOfByteToUint32() *RequestOfByteToUint32 {
	return pool_of_RequestOfByteToUint32.Get().(*RequestOfByteToUint32)
}
func PutRequestOfByteToUint32(d *RequestOfByteToUint32) {
	pool_of_RequestOfByteToUint32.Put(d)
}

type RequestOfByteToUint64 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToUint64{}
		},
	}
)

func GetRequestOfByteToUint64() *RequestOfByteToUint64 {
	return pool_of_RequestOfByteToUint64.Get().(*RequestOfByteToUint64)
}
func PutRequestOfByteToUint64(d *RequestOfByteToUint64) {
	pool_of_RequestOfByteToUint64.Put(d)
}

type RequestOfByteToUint8 struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToUint8{}
		},
	}
)

func GetRequestOfByteToUint8() *RequestOfByteToUint8 {
	return pool_of_RequestOfByteToUint8.Get().(*RequestOfByteToUint8)
}
func PutRequestOfByteToUint8(d *RequestOfByteToUint8) {
	pool_of_RequestOfByteToUint8.Put(d)
}

type RequestOfByteToUintptr struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToUintptr{}
		},
	}
)

func GetRequestOfByteToUintptr() *RequestOfByteToUintptr {
	return pool_of_RequestOfByteToUintptr.Get().(*RequestOfByteToUintptr)
}
func PutRequestOfByteToUintptr(d *RequestOfByteToUintptr) {
	pool_of_RequestOfByteToUintptr.Put(d)
}

type RequestOfByteToBytes struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToBytes{}
		},
	}
)

func GetRequestOfByteToBytes() *RequestOfByteToBytes {
	return pool_of_RequestOfByteToBytes.Get().(*RequestOfByteToBytes)
}
func PutRequestOfByteToBytes(d *RequestOfByteToBytes) {
	pool_of_RequestOfByteToBytes.Put(d)
}

type RequestOfByteToInterface struct {
	Context  context.Context
	Value    byte
	ReturnCh chan<- ReturnOfByte
}

var (
	pool_of_RequestOfByteToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfByteToInterface{}
		},
	}
)

func GetRequestOfByteToInterface() *RequestOfByteToInterface {
	return pool_of_RequestOfByteToInterface.Get().(*RequestOfByteToInterface)
}
func PutRequestOfByteToInterface(d *RequestOfByteToInterface) {
	pool_of_RequestOfByteToInterface.Put(d)
}

type RequestOfComplex128ToBool struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToBool{}
		},
	}
)

func GetRequestOfComplex128ToBool() *RequestOfComplex128ToBool {
	return pool_of_RequestOfComplex128ToBool.Get().(*RequestOfComplex128ToBool)
}
func PutRequestOfComplex128ToBool(d *RequestOfComplex128ToBool) {
	pool_of_RequestOfComplex128ToBool.Put(d)
}

type RequestOfComplex128ToByte struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToByte{}
		},
	}
)

func GetRequestOfComplex128ToByte() *RequestOfComplex128ToByte {
	return pool_of_RequestOfComplex128ToByte.Get().(*RequestOfComplex128ToByte)
}
func PutRequestOfComplex128ToByte(d *RequestOfComplex128ToByte) {
	pool_of_RequestOfComplex128ToByte.Put(d)
}

type RequestOfComplex128ToComplex128 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToComplex128{}
		},
	}
)

func GetRequestOfComplex128ToComplex128() *RequestOfComplex128ToComplex128 {
	return pool_of_RequestOfComplex128ToComplex128.Get().(*RequestOfComplex128ToComplex128)
}
func PutRequestOfComplex128ToComplex128(d *RequestOfComplex128ToComplex128) {
	pool_of_RequestOfComplex128ToComplex128.Put(d)
}

type RequestOfComplex128ToComplex64 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToComplex64{}
		},
	}
)

func GetRequestOfComplex128ToComplex64() *RequestOfComplex128ToComplex64 {
	return pool_of_RequestOfComplex128ToComplex64.Get().(*RequestOfComplex128ToComplex64)
}
func PutRequestOfComplex128ToComplex64(d *RequestOfComplex128ToComplex64) {
	pool_of_RequestOfComplex128ToComplex64.Put(d)
}

type RequestOfComplex128ToError struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToError{}
		},
	}
)

func GetRequestOfComplex128ToError() *RequestOfComplex128ToError {
	return pool_of_RequestOfComplex128ToError.Get().(*RequestOfComplex128ToError)
}
func PutRequestOfComplex128ToError(d *RequestOfComplex128ToError) {
	pool_of_RequestOfComplex128ToError.Put(d)
}

type RequestOfComplex128ToFloat32 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToFloat32{}
		},
	}
)

func GetRequestOfComplex128ToFloat32() *RequestOfComplex128ToFloat32 {
	return pool_of_RequestOfComplex128ToFloat32.Get().(*RequestOfComplex128ToFloat32)
}
func PutRequestOfComplex128ToFloat32(d *RequestOfComplex128ToFloat32) {
	pool_of_RequestOfComplex128ToFloat32.Put(d)
}

type RequestOfComplex128ToFloat64 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToFloat64{}
		},
	}
)

func GetRequestOfComplex128ToFloat64() *RequestOfComplex128ToFloat64 {
	return pool_of_RequestOfComplex128ToFloat64.Get().(*RequestOfComplex128ToFloat64)
}
func PutRequestOfComplex128ToFloat64(d *RequestOfComplex128ToFloat64) {
	pool_of_RequestOfComplex128ToFloat64.Put(d)
}

type RequestOfComplex128ToInt struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToInt{}
		},
	}
)

func GetRequestOfComplex128ToInt() *RequestOfComplex128ToInt {
	return pool_of_RequestOfComplex128ToInt.Get().(*RequestOfComplex128ToInt)
}
func PutRequestOfComplex128ToInt(d *RequestOfComplex128ToInt) {
	pool_of_RequestOfComplex128ToInt.Put(d)
}

type RequestOfComplex128ToInt16 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToInt16{}
		},
	}
)

func GetRequestOfComplex128ToInt16() *RequestOfComplex128ToInt16 {
	return pool_of_RequestOfComplex128ToInt16.Get().(*RequestOfComplex128ToInt16)
}
func PutRequestOfComplex128ToInt16(d *RequestOfComplex128ToInt16) {
	pool_of_RequestOfComplex128ToInt16.Put(d)
}

type RequestOfComplex128ToInt32 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToInt32{}
		},
	}
)

func GetRequestOfComplex128ToInt32() *RequestOfComplex128ToInt32 {
	return pool_of_RequestOfComplex128ToInt32.Get().(*RequestOfComplex128ToInt32)
}
func PutRequestOfComplex128ToInt32(d *RequestOfComplex128ToInt32) {
	pool_of_RequestOfComplex128ToInt32.Put(d)
}

type RequestOfComplex128ToInt64 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToInt64{}
		},
	}
)

func GetRequestOfComplex128ToInt64() *RequestOfComplex128ToInt64 {
	return pool_of_RequestOfComplex128ToInt64.Get().(*RequestOfComplex128ToInt64)
}
func PutRequestOfComplex128ToInt64(d *RequestOfComplex128ToInt64) {
	pool_of_RequestOfComplex128ToInt64.Put(d)
}

type RequestOfComplex128ToInt8 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToInt8{}
		},
	}
)

func GetRequestOfComplex128ToInt8() *RequestOfComplex128ToInt8 {
	return pool_of_RequestOfComplex128ToInt8.Get().(*RequestOfComplex128ToInt8)
}
func PutRequestOfComplex128ToInt8(d *RequestOfComplex128ToInt8) {
	pool_of_RequestOfComplex128ToInt8.Put(d)
}

type RequestOfComplex128ToRune struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToRune{}
		},
	}
)

func GetRequestOfComplex128ToRune() *RequestOfComplex128ToRune {
	return pool_of_RequestOfComplex128ToRune.Get().(*RequestOfComplex128ToRune)
}
func PutRequestOfComplex128ToRune(d *RequestOfComplex128ToRune) {
	pool_of_RequestOfComplex128ToRune.Put(d)
}

type RequestOfComplex128ToString struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToString{}
		},
	}
)

func GetRequestOfComplex128ToString() *RequestOfComplex128ToString {
	return pool_of_RequestOfComplex128ToString.Get().(*RequestOfComplex128ToString)
}
func PutRequestOfComplex128ToString(d *RequestOfComplex128ToString) {
	pool_of_RequestOfComplex128ToString.Put(d)
}

type RequestOfComplex128ToUint struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToUint{}
		},
	}
)

func GetRequestOfComplex128ToUint() *RequestOfComplex128ToUint {
	return pool_of_RequestOfComplex128ToUint.Get().(*RequestOfComplex128ToUint)
}
func PutRequestOfComplex128ToUint(d *RequestOfComplex128ToUint) {
	pool_of_RequestOfComplex128ToUint.Put(d)
}

type RequestOfComplex128ToUint16 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToUint16{}
		},
	}
)

func GetRequestOfComplex128ToUint16() *RequestOfComplex128ToUint16 {
	return pool_of_RequestOfComplex128ToUint16.Get().(*RequestOfComplex128ToUint16)
}
func PutRequestOfComplex128ToUint16(d *RequestOfComplex128ToUint16) {
	pool_of_RequestOfComplex128ToUint16.Put(d)
}

type RequestOfComplex128ToUint32 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToUint32{}
		},
	}
)

func GetRequestOfComplex128ToUint32() *RequestOfComplex128ToUint32 {
	return pool_of_RequestOfComplex128ToUint32.Get().(*RequestOfComplex128ToUint32)
}
func PutRequestOfComplex128ToUint32(d *RequestOfComplex128ToUint32) {
	pool_of_RequestOfComplex128ToUint32.Put(d)
}

type RequestOfComplex128ToUint64 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToUint64{}
		},
	}
)

func GetRequestOfComplex128ToUint64() *RequestOfComplex128ToUint64 {
	return pool_of_RequestOfComplex128ToUint64.Get().(*RequestOfComplex128ToUint64)
}
func PutRequestOfComplex128ToUint64(d *RequestOfComplex128ToUint64) {
	pool_of_RequestOfComplex128ToUint64.Put(d)
}

type RequestOfComplex128ToUint8 struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToUint8{}
		},
	}
)

func GetRequestOfComplex128ToUint8() *RequestOfComplex128ToUint8 {
	return pool_of_RequestOfComplex128ToUint8.Get().(*RequestOfComplex128ToUint8)
}
func PutRequestOfComplex128ToUint8(d *RequestOfComplex128ToUint8) {
	pool_of_RequestOfComplex128ToUint8.Put(d)
}

type RequestOfComplex128ToUintptr struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToUintptr{}
		},
	}
)

func GetRequestOfComplex128ToUintptr() *RequestOfComplex128ToUintptr {
	return pool_of_RequestOfComplex128ToUintptr.Get().(*RequestOfComplex128ToUintptr)
}
func PutRequestOfComplex128ToUintptr(d *RequestOfComplex128ToUintptr) {
	pool_of_RequestOfComplex128ToUintptr.Put(d)
}

type RequestOfComplex128ToBytes struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToBytes{}
		},
	}
)

func GetRequestOfComplex128ToBytes() *RequestOfComplex128ToBytes {
	return pool_of_RequestOfComplex128ToBytes.Get().(*RequestOfComplex128ToBytes)
}
func PutRequestOfComplex128ToBytes(d *RequestOfComplex128ToBytes) {
	pool_of_RequestOfComplex128ToBytes.Put(d)
}

type RequestOfComplex128ToInterface struct {
	Context  context.Context
	Value    complex128
	ReturnCh chan<- ReturnOfComplex128
}

var (
	pool_of_RequestOfComplex128ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex128ToInterface{}
		},
	}
)

func GetRequestOfComplex128ToInterface() *RequestOfComplex128ToInterface {
	return pool_of_RequestOfComplex128ToInterface.Get().(*RequestOfComplex128ToInterface)
}
func PutRequestOfComplex128ToInterface(d *RequestOfComplex128ToInterface) {
	pool_of_RequestOfComplex128ToInterface.Put(d)
}

type RequestOfComplex64ToBool struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToBool{}
		},
	}
)

func GetRequestOfComplex64ToBool() *RequestOfComplex64ToBool {
	return pool_of_RequestOfComplex64ToBool.Get().(*RequestOfComplex64ToBool)
}
func PutRequestOfComplex64ToBool(d *RequestOfComplex64ToBool) {
	pool_of_RequestOfComplex64ToBool.Put(d)
}

type RequestOfComplex64ToByte struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToByte{}
		},
	}
)

func GetRequestOfComplex64ToByte() *RequestOfComplex64ToByte {
	return pool_of_RequestOfComplex64ToByte.Get().(*RequestOfComplex64ToByte)
}
func PutRequestOfComplex64ToByte(d *RequestOfComplex64ToByte) {
	pool_of_RequestOfComplex64ToByte.Put(d)
}

type RequestOfComplex64ToComplex128 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToComplex128{}
		},
	}
)

func GetRequestOfComplex64ToComplex128() *RequestOfComplex64ToComplex128 {
	return pool_of_RequestOfComplex64ToComplex128.Get().(*RequestOfComplex64ToComplex128)
}
func PutRequestOfComplex64ToComplex128(d *RequestOfComplex64ToComplex128) {
	pool_of_RequestOfComplex64ToComplex128.Put(d)
}

type RequestOfComplex64ToComplex64 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToComplex64{}
		},
	}
)

func GetRequestOfComplex64ToComplex64() *RequestOfComplex64ToComplex64 {
	return pool_of_RequestOfComplex64ToComplex64.Get().(*RequestOfComplex64ToComplex64)
}
func PutRequestOfComplex64ToComplex64(d *RequestOfComplex64ToComplex64) {
	pool_of_RequestOfComplex64ToComplex64.Put(d)
}

type RequestOfComplex64ToError struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToError{}
		},
	}
)

func GetRequestOfComplex64ToError() *RequestOfComplex64ToError {
	return pool_of_RequestOfComplex64ToError.Get().(*RequestOfComplex64ToError)
}
func PutRequestOfComplex64ToError(d *RequestOfComplex64ToError) {
	pool_of_RequestOfComplex64ToError.Put(d)
}

type RequestOfComplex64ToFloat32 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToFloat32{}
		},
	}
)

func GetRequestOfComplex64ToFloat32() *RequestOfComplex64ToFloat32 {
	return pool_of_RequestOfComplex64ToFloat32.Get().(*RequestOfComplex64ToFloat32)
}
func PutRequestOfComplex64ToFloat32(d *RequestOfComplex64ToFloat32) {
	pool_of_RequestOfComplex64ToFloat32.Put(d)
}

type RequestOfComplex64ToFloat64 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToFloat64{}
		},
	}
)

func GetRequestOfComplex64ToFloat64() *RequestOfComplex64ToFloat64 {
	return pool_of_RequestOfComplex64ToFloat64.Get().(*RequestOfComplex64ToFloat64)
}
func PutRequestOfComplex64ToFloat64(d *RequestOfComplex64ToFloat64) {
	pool_of_RequestOfComplex64ToFloat64.Put(d)
}

type RequestOfComplex64ToInt struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToInt{}
		},
	}
)

func GetRequestOfComplex64ToInt() *RequestOfComplex64ToInt {
	return pool_of_RequestOfComplex64ToInt.Get().(*RequestOfComplex64ToInt)
}
func PutRequestOfComplex64ToInt(d *RequestOfComplex64ToInt) {
	pool_of_RequestOfComplex64ToInt.Put(d)
}

type RequestOfComplex64ToInt16 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToInt16{}
		},
	}
)

func GetRequestOfComplex64ToInt16() *RequestOfComplex64ToInt16 {
	return pool_of_RequestOfComplex64ToInt16.Get().(*RequestOfComplex64ToInt16)
}
func PutRequestOfComplex64ToInt16(d *RequestOfComplex64ToInt16) {
	pool_of_RequestOfComplex64ToInt16.Put(d)
}

type RequestOfComplex64ToInt32 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToInt32{}
		},
	}
)

func GetRequestOfComplex64ToInt32() *RequestOfComplex64ToInt32 {
	return pool_of_RequestOfComplex64ToInt32.Get().(*RequestOfComplex64ToInt32)
}
func PutRequestOfComplex64ToInt32(d *RequestOfComplex64ToInt32) {
	pool_of_RequestOfComplex64ToInt32.Put(d)
}

type RequestOfComplex64ToInt64 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToInt64{}
		},
	}
)

func GetRequestOfComplex64ToInt64() *RequestOfComplex64ToInt64 {
	return pool_of_RequestOfComplex64ToInt64.Get().(*RequestOfComplex64ToInt64)
}
func PutRequestOfComplex64ToInt64(d *RequestOfComplex64ToInt64) {
	pool_of_RequestOfComplex64ToInt64.Put(d)
}

type RequestOfComplex64ToInt8 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToInt8{}
		},
	}
)

func GetRequestOfComplex64ToInt8() *RequestOfComplex64ToInt8 {
	return pool_of_RequestOfComplex64ToInt8.Get().(*RequestOfComplex64ToInt8)
}
func PutRequestOfComplex64ToInt8(d *RequestOfComplex64ToInt8) {
	pool_of_RequestOfComplex64ToInt8.Put(d)
}

type RequestOfComplex64ToRune struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToRune{}
		},
	}
)

func GetRequestOfComplex64ToRune() *RequestOfComplex64ToRune {
	return pool_of_RequestOfComplex64ToRune.Get().(*RequestOfComplex64ToRune)
}
func PutRequestOfComplex64ToRune(d *RequestOfComplex64ToRune) {
	pool_of_RequestOfComplex64ToRune.Put(d)
}

type RequestOfComplex64ToString struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToString{}
		},
	}
)

func GetRequestOfComplex64ToString() *RequestOfComplex64ToString {
	return pool_of_RequestOfComplex64ToString.Get().(*RequestOfComplex64ToString)
}
func PutRequestOfComplex64ToString(d *RequestOfComplex64ToString) {
	pool_of_RequestOfComplex64ToString.Put(d)
}

type RequestOfComplex64ToUint struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToUint{}
		},
	}
)

func GetRequestOfComplex64ToUint() *RequestOfComplex64ToUint {
	return pool_of_RequestOfComplex64ToUint.Get().(*RequestOfComplex64ToUint)
}
func PutRequestOfComplex64ToUint(d *RequestOfComplex64ToUint) {
	pool_of_RequestOfComplex64ToUint.Put(d)
}

type RequestOfComplex64ToUint16 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToUint16{}
		},
	}
)

func GetRequestOfComplex64ToUint16() *RequestOfComplex64ToUint16 {
	return pool_of_RequestOfComplex64ToUint16.Get().(*RequestOfComplex64ToUint16)
}
func PutRequestOfComplex64ToUint16(d *RequestOfComplex64ToUint16) {
	pool_of_RequestOfComplex64ToUint16.Put(d)
}

type RequestOfComplex64ToUint32 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToUint32{}
		},
	}
)

func GetRequestOfComplex64ToUint32() *RequestOfComplex64ToUint32 {
	return pool_of_RequestOfComplex64ToUint32.Get().(*RequestOfComplex64ToUint32)
}
func PutRequestOfComplex64ToUint32(d *RequestOfComplex64ToUint32) {
	pool_of_RequestOfComplex64ToUint32.Put(d)
}

type RequestOfComplex64ToUint64 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToUint64{}
		},
	}
)

func GetRequestOfComplex64ToUint64() *RequestOfComplex64ToUint64 {
	return pool_of_RequestOfComplex64ToUint64.Get().(*RequestOfComplex64ToUint64)
}
func PutRequestOfComplex64ToUint64(d *RequestOfComplex64ToUint64) {
	pool_of_RequestOfComplex64ToUint64.Put(d)
}

type RequestOfComplex64ToUint8 struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToUint8{}
		},
	}
)

func GetRequestOfComplex64ToUint8() *RequestOfComplex64ToUint8 {
	return pool_of_RequestOfComplex64ToUint8.Get().(*RequestOfComplex64ToUint8)
}
func PutRequestOfComplex64ToUint8(d *RequestOfComplex64ToUint8) {
	pool_of_RequestOfComplex64ToUint8.Put(d)
}

type RequestOfComplex64ToUintptr struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToUintptr{}
		},
	}
)

func GetRequestOfComplex64ToUintptr() *RequestOfComplex64ToUintptr {
	return pool_of_RequestOfComplex64ToUintptr.Get().(*RequestOfComplex64ToUintptr)
}
func PutRequestOfComplex64ToUintptr(d *RequestOfComplex64ToUintptr) {
	pool_of_RequestOfComplex64ToUintptr.Put(d)
}

type RequestOfComplex64ToBytes struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToBytes{}
		},
	}
)

func GetRequestOfComplex64ToBytes() *RequestOfComplex64ToBytes {
	return pool_of_RequestOfComplex64ToBytes.Get().(*RequestOfComplex64ToBytes)
}
func PutRequestOfComplex64ToBytes(d *RequestOfComplex64ToBytes) {
	pool_of_RequestOfComplex64ToBytes.Put(d)
}

type RequestOfComplex64ToInterface struct {
	Context  context.Context
	Value    complex64
	ReturnCh chan<- ReturnOfComplex64
}

var (
	pool_of_RequestOfComplex64ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfComplex64ToInterface{}
		},
	}
)

func GetRequestOfComplex64ToInterface() *RequestOfComplex64ToInterface {
	return pool_of_RequestOfComplex64ToInterface.Get().(*RequestOfComplex64ToInterface)
}
func PutRequestOfComplex64ToInterface(d *RequestOfComplex64ToInterface) {
	pool_of_RequestOfComplex64ToInterface.Put(d)
}

type RequestOfErrorToBool struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToBool{}
		},
	}
)

func GetRequestOfErrorToBool() *RequestOfErrorToBool {
	return pool_of_RequestOfErrorToBool.Get().(*RequestOfErrorToBool)
}
func PutRequestOfErrorToBool(d *RequestOfErrorToBool) {
	pool_of_RequestOfErrorToBool.Put(d)
}

type RequestOfErrorToByte struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToByte{}
		},
	}
)

func GetRequestOfErrorToByte() *RequestOfErrorToByte {
	return pool_of_RequestOfErrorToByte.Get().(*RequestOfErrorToByte)
}
func PutRequestOfErrorToByte(d *RequestOfErrorToByte) {
	pool_of_RequestOfErrorToByte.Put(d)
}

type RequestOfErrorToComplex128 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToComplex128{}
		},
	}
)

func GetRequestOfErrorToComplex128() *RequestOfErrorToComplex128 {
	return pool_of_RequestOfErrorToComplex128.Get().(*RequestOfErrorToComplex128)
}
func PutRequestOfErrorToComplex128(d *RequestOfErrorToComplex128) {
	pool_of_RequestOfErrorToComplex128.Put(d)
}

type RequestOfErrorToComplex64 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToComplex64{}
		},
	}
)

func GetRequestOfErrorToComplex64() *RequestOfErrorToComplex64 {
	return pool_of_RequestOfErrorToComplex64.Get().(*RequestOfErrorToComplex64)
}
func PutRequestOfErrorToComplex64(d *RequestOfErrorToComplex64) {
	pool_of_RequestOfErrorToComplex64.Put(d)
}

type RequestOfErrorToError struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToError{}
		},
	}
)

func GetRequestOfErrorToError() *RequestOfErrorToError {
	return pool_of_RequestOfErrorToError.Get().(*RequestOfErrorToError)
}
func PutRequestOfErrorToError(d *RequestOfErrorToError) {
	pool_of_RequestOfErrorToError.Put(d)
}

type RequestOfErrorToFloat32 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToFloat32{}
		},
	}
)

func GetRequestOfErrorToFloat32() *RequestOfErrorToFloat32 {
	return pool_of_RequestOfErrorToFloat32.Get().(*RequestOfErrorToFloat32)
}
func PutRequestOfErrorToFloat32(d *RequestOfErrorToFloat32) {
	pool_of_RequestOfErrorToFloat32.Put(d)
}

type RequestOfErrorToFloat64 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToFloat64{}
		},
	}
)

func GetRequestOfErrorToFloat64() *RequestOfErrorToFloat64 {
	return pool_of_RequestOfErrorToFloat64.Get().(*RequestOfErrorToFloat64)
}
func PutRequestOfErrorToFloat64(d *RequestOfErrorToFloat64) {
	pool_of_RequestOfErrorToFloat64.Put(d)
}

type RequestOfErrorToInt struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToInt{}
		},
	}
)

func GetRequestOfErrorToInt() *RequestOfErrorToInt {
	return pool_of_RequestOfErrorToInt.Get().(*RequestOfErrorToInt)
}
func PutRequestOfErrorToInt(d *RequestOfErrorToInt) {
	pool_of_RequestOfErrorToInt.Put(d)
}

type RequestOfErrorToInt16 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToInt16{}
		},
	}
)

func GetRequestOfErrorToInt16() *RequestOfErrorToInt16 {
	return pool_of_RequestOfErrorToInt16.Get().(*RequestOfErrorToInt16)
}
func PutRequestOfErrorToInt16(d *RequestOfErrorToInt16) {
	pool_of_RequestOfErrorToInt16.Put(d)
}

type RequestOfErrorToInt32 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToInt32{}
		},
	}
)

func GetRequestOfErrorToInt32() *RequestOfErrorToInt32 {
	return pool_of_RequestOfErrorToInt32.Get().(*RequestOfErrorToInt32)
}
func PutRequestOfErrorToInt32(d *RequestOfErrorToInt32) {
	pool_of_RequestOfErrorToInt32.Put(d)
}

type RequestOfErrorToInt64 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToInt64{}
		},
	}
)

func GetRequestOfErrorToInt64() *RequestOfErrorToInt64 {
	return pool_of_RequestOfErrorToInt64.Get().(*RequestOfErrorToInt64)
}
func PutRequestOfErrorToInt64(d *RequestOfErrorToInt64) {
	pool_of_RequestOfErrorToInt64.Put(d)
}

type RequestOfErrorToInt8 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToInt8{}
		},
	}
)

func GetRequestOfErrorToInt8() *RequestOfErrorToInt8 {
	return pool_of_RequestOfErrorToInt8.Get().(*RequestOfErrorToInt8)
}
func PutRequestOfErrorToInt8(d *RequestOfErrorToInt8) {
	pool_of_RequestOfErrorToInt8.Put(d)
}

type RequestOfErrorToRune struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToRune{}
		},
	}
)

func GetRequestOfErrorToRune() *RequestOfErrorToRune {
	return pool_of_RequestOfErrorToRune.Get().(*RequestOfErrorToRune)
}
func PutRequestOfErrorToRune(d *RequestOfErrorToRune) {
	pool_of_RequestOfErrorToRune.Put(d)
}

type RequestOfErrorToString struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToString{}
		},
	}
)

func GetRequestOfErrorToString() *RequestOfErrorToString {
	return pool_of_RequestOfErrorToString.Get().(*RequestOfErrorToString)
}
func PutRequestOfErrorToString(d *RequestOfErrorToString) {
	pool_of_RequestOfErrorToString.Put(d)
}

type RequestOfErrorToUint struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToUint{}
		},
	}
)

func GetRequestOfErrorToUint() *RequestOfErrorToUint {
	return pool_of_RequestOfErrorToUint.Get().(*RequestOfErrorToUint)
}
func PutRequestOfErrorToUint(d *RequestOfErrorToUint) {
	pool_of_RequestOfErrorToUint.Put(d)
}

type RequestOfErrorToUint16 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToUint16{}
		},
	}
)

func GetRequestOfErrorToUint16() *RequestOfErrorToUint16 {
	return pool_of_RequestOfErrorToUint16.Get().(*RequestOfErrorToUint16)
}
func PutRequestOfErrorToUint16(d *RequestOfErrorToUint16) {
	pool_of_RequestOfErrorToUint16.Put(d)
}

type RequestOfErrorToUint32 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToUint32{}
		},
	}
)

func GetRequestOfErrorToUint32() *RequestOfErrorToUint32 {
	return pool_of_RequestOfErrorToUint32.Get().(*RequestOfErrorToUint32)
}
func PutRequestOfErrorToUint32(d *RequestOfErrorToUint32) {
	pool_of_RequestOfErrorToUint32.Put(d)
}

type RequestOfErrorToUint64 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToUint64{}
		},
	}
)

func GetRequestOfErrorToUint64() *RequestOfErrorToUint64 {
	return pool_of_RequestOfErrorToUint64.Get().(*RequestOfErrorToUint64)
}
func PutRequestOfErrorToUint64(d *RequestOfErrorToUint64) {
	pool_of_RequestOfErrorToUint64.Put(d)
}

type RequestOfErrorToUint8 struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToUint8{}
		},
	}
)

func GetRequestOfErrorToUint8() *RequestOfErrorToUint8 {
	return pool_of_RequestOfErrorToUint8.Get().(*RequestOfErrorToUint8)
}
func PutRequestOfErrorToUint8(d *RequestOfErrorToUint8) {
	pool_of_RequestOfErrorToUint8.Put(d)
}

type RequestOfErrorToUintptr struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToUintptr{}
		},
	}
)

func GetRequestOfErrorToUintptr() *RequestOfErrorToUintptr {
	return pool_of_RequestOfErrorToUintptr.Get().(*RequestOfErrorToUintptr)
}
func PutRequestOfErrorToUintptr(d *RequestOfErrorToUintptr) {
	pool_of_RequestOfErrorToUintptr.Put(d)
}

type RequestOfErrorToBytes struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToBytes{}
		},
	}
)

func GetRequestOfErrorToBytes() *RequestOfErrorToBytes {
	return pool_of_RequestOfErrorToBytes.Get().(*RequestOfErrorToBytes)
}
func PutRequestOfErrorToBytes(d *RequestOfErrorToBytes) {
	pool_of_RequestOfErrorToBytes.Put(d)
}

type RequestOfErrorToInterface struct {
	Context  context.Context
	Value    error
	ReturnCh chan<- ReturnOfError
}

var (
	pool_of_RequestOfErrorToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfErrorToInterface{}
		},
	}
)

func GetRequestOfErrorToInterface() *RequestOfErrorToInterface {
	return pool_of_RequestOfErrorToInterface.Get().(*RequestOfErrorToInterface)
}
func PutRequestOfErrorToInterface(d *RequestOfErrorToInterface) {
	pool_of_RequestOfErrorToInterface.Put(d)
}

type RequestOfFloat32ToBool struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToBool{}
		},
	}
)

func GetRequestOfFloat32ToBool() *RequestOfFloat32ToBool {
	return pool_of_RequestOfFloat32ToBool.Get().(*RequestOfFloat32ToBool)
}
func PutRequestOfFloat32ToBool(d *RequestOfFloat32ToBool) {
	pool_of_RequestOfFloat32ToBool.Put(d)
}

type RequestOfFloat32ToByte struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToByte{}
		},
	}
)

func GetRequestOfFloat32ToByte() *RequestOfFloat32ToByte {
	return pool_of_RequestOfFloat32ToByte.Get().(*RequestOfFloat32ToByte)
}
func PutRequestOfFloat32ToByte(d *RequestOfFloat32ToByte) {
	pool_of_RequestOfFloat32ToByte.Put(d)
}

type RequestOfFloat32ToComplex128 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToComplex128{}
		},
	}
)

func GetRequestOfFloat32ToComplex128() *RequestOfFloat32ToComplex128 {
	return pool_of_RequestOfFloat32ToComplex128.Get().(*RequestOfFloat32ToComplex128)
}
func PutRequestOfFloat32ToComplex128(d *RequestOfFloat32ToComplex128) {
	pool_of_RequestOfFloat32ToComplex128.Put(d)
}

type RequestOfFloat32ToComplex64 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToComplex64{}
		},
	}
)

func GetRequestOfFloat32ToComplex64() *RequestOfFloat32ToComplex64 {
	return pool_of_RequestOfFloat32ToComplex64.Get().(*RequestOfFloat32ToComplex64)
}
func PutRequestOfFloat32ToComplex64(d *RequestOfFloat32ToComplex64) {
	pool_of_RequestOfFloat32ToComplex64.Put(d)
}

type RequestOfFloat32ToError struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToError{}
		},
	}
)

func GetRequestOfFloat32ToError() *RequestOfFloat32ToError {
	return pool_of_RequestOfFloat32ToError.Get().(*RequestOfFloat32ToError)
}
func PutRequestOfFloat32ToError(d *RequestOfFloat32ToError) {
	pool_of_RequestOfFloat32ToError.Put(d)
}

type RequestOfFloat32ToFloat32 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToFloat32{}
		},
	}
)

func GetRequestOfFloat32ToFloat32() *RequestOfFloat32ToFloat32 {
	return pool_of_RequestOfFloat32ToFloat32.Get().(*RequestOfFloat32ToFloat32)
}
func PutRequestOfFloat32ToFloat32(d *RequestOfFloat32ToFloat32) {
	pool_of_RequestOfFloat32ToFloat32.Put(d)
}

type RequestOfFloat32ToFloat64 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToFloat64{}
		},
	}
)

func GetRequestOfFloat32ToFloat64() *RequestOfFloat32ToFloat64 {
	return pool_of_RequestOfFloat32ToFloat64.Get().(*RequestOfFloat32ToFloat64)
}
func PutRequestOfFloat32ToFloat64(d *RequestOfFloat32ToFloat64) {
	pool_of_RequestOfFloat32ToFloat64.Put(d)
}

type RequestOfFloat32ToInt struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToInt{}
		},
	}
)

func GetRequestOfFloat32ToInt() *RequestOfFloat32ToInt {
	return pool_of_RequestOfFloat32ToInt.Get().(*RequestOfFloat32ToInt)
}
func PutRequestOfFloat32ToInt(d *RequestOfFloat32ToInt) {
	pool_of_RequestOfFloat32ToInt.Put(d)
}

type RequestOfFloat32ToInt16 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToInt16{}
		},
	}
)

func GetRequestOfFloat32ToInt16() *RequestOfFloat32ToInt16 {
	return pool_of_RequestOfFloat32ToInt16.Get().(*RequestOfFloat32ToInt16)
}
func PutRequestOfFloat32ToInt16(d *RequestOfFloat32ToInt16) {
	pool_of_RequestOfFloat32ToInt16.Put(d)
}

type RequestOfFloat32ToInt32 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToInt32{}
		},
	}
)

func GetRequestOfFloat32ToInt32() *RequestOfFloat32ToInt32 {
	return pool_of_RequestOfFloat32ToInt32.Get().(*RequestOfFloat32ToInt32)
}
func PutRequestOfFloat32ToInt32(d *RequestOfFloat32ToInt32) {
	pool_of_RequestOfFloat32ToInt32.Put(d)
}

type RequestOfFloat32ToInt64 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToInt64{}
		},
	}
)

func GetRequestOfFloat32ToInt64() *RequestOfFloat32ToInt64 {
	return pool_of_RequestOfFloat32ToInt64.Get().(*RequestOfFloat32ToInt64)
}
func PutRequestOfFloat32ToInt64(d *RequestOfFloat32ToInt64) {
	pool_of_RequestOfFloat32ToInt64.Put(d)
}

type RequestOfFloat32ToInt8 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToInt8{}
		},
	}
)

func GetRequestOfFloat32ToInt8() *RequestOfFloat32ToInt8 {
	return pool_of_RequestOfFloat32ToInt8.Get().(*RequestOfFloat32ToInt8)
}
func PutRequestOfFloat32ToInt8(d *RequestOfFloat32ToInt8) {
	pool_of_RequestOfFloat32ToInt8.Put(d)
}

type RequestOfFloat32ToRune struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToRune{}
		},
	}
)

func GetRequestOfFloat32ToRune() *RequestOfFloat32ToRune {
	return pool_of_RequestOfFloat32ToRune.Get().(*RequestOfFloat32ToRune)
}
func PutRequestOfFloat32ToRune(d *RequestOfFloat32ToRune) {
	pool_of_RequestOfFloat32ToRune.Put(d)
}

type RequestOfFloat32ToString struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToString{}
		},
	}
)

func GetRequestOfFloat32ToString() *RequestOfFloat32ToString {
	return pool_of_RequestOfFloat32ToString.Get().(*RequestOfFloat32ToString)
}
func PutRequestOfFloat32ToString(d *RequestOfFloat32ToString) {
	pool_of_RequestOfFloat32ToString.Put(d)
}

type RequestOfFloat32ToUint struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToUint{}
		},
	}
)

func GetRequestOfFloat32ToUint() *RequestOfFloat32ToUint {
	return pool_of_RequestOfFloat32ToUint.Get().(*RequestOfFloat32ToUint)
}
func PutRequestOfFloat32ToUint(d *RequestOfFloat32ToUint) {
	pool_of_RequestOfFloat32ToUint.Put(d)
}

type RequestOfFloat32ToUint16 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToUint16{}
		},
	}
)

func GetRequestOfFloat32ToUint16() *RequestOfFloat32ToUint16 {
	return pool_of_RequestOfFloat32ToUint16.Get().(*RequestOfFloat32ToUint16)
}
func PutRequestOfFloat32ToUint16(d *RequestOfFloat32ToUint16) {
	pool_of_RequestOfFloat32ToUint16.Put(d)
}

type RequestOfFloat32ToUint32 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToUint32{}
		},
	}
)

func GetRequestOfFloat32ToUint32() *RequestOfFloat32ToUint32 {
	return pool_of_RequestOfFloat32ToUint32.Get().(*RequestOfFloat32ToUint32)
}
func PutRequestOfFloat32ToUint32(d *RequestOfFloat32ToUint32) {
	pool_of_RequestOfFloat32ToUint32.Put(d)
}

type RequestOfFloat32ToUint64 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToUint64{}
		},
	}
)

func GetRequestOfFloat32ToUint64() *RequestOfFloat32ToUint64 {
	return pool_of_RequestOfFloat32ToUint64.Get().(*RequestOfFloat32ToUint64)
}
func PutRequestOfFloat32ToUint64(d *RequestOfFloat32ToUint64) {
	pool_of_RequestOfFloat32ToUint64.Put(d)
}

type RequestOfFloat32ToUint8 struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToUint8{}
		},
	}
)

func GetRequestOfFloat32ToUint8() *RequestOfFloat32ToUint8 {
	return pool_of_RequestOfFloat32ToUint8.Get().(*RequestOfFloat32ToUint8)
}
func PutRequestOfFloat32ToUint8(d *RequestOfFloat32ToUint8) {
	pool_of_RequestOfFloat32ToUint8.Put(d)
}

type RequestOfFloat32ToUintptr struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToUintptr{}
		},
	}
)

func GetRequestOfFloat32ToUintptr() *RequestOfFloat32ToUintptr {
	return pool_of_RequestOfFloat32ToUintptr.Get().(*RequestOfFloat32ToUintptr)
}
func PutRequestOfFloat32ToUintptr(d *RequestOfFloat32ToUintptr) {
	pool_of_RequestOfFloat32ToUintptr.Put(d)
}

type RequestOfFloat32ToBytes struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToBytes{}
		},
	}
)

func GetRequestOfFloat32ToBytes() *RequestOfFloat32ToBytes {
	return pool_of_RequestOfFloat32ToBytes.Get().(*RequestOfFloat32ToBytes)
}
func PutRequestOfFloat32ToBytes(d *RequestOfFloat32ToBytes) {
	pool_of_RequestOfFloat32ToBytes.Put(d)
}

type RequestOfFloat32ToInterface struct {
	Context  context.Context
	Value    float32
	ReturnCh chan<- ReturnOfFloat32
}

var (
	pool_of_RequestOfFloat32ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat32ToInterface{}
		},
	}
)

func GetRequestOfFloat32ToInterface() *RequestOfFloat32ToInterface {
	return pool_of_RequestOfFloat32ToInterface.Get().(*RequestOfFloat32ToInterface)
}
func PutRequestOfFloat32ToInterface(d *RequestOfFloat32ToInterface) {
	pool_of_RequestOfFloat32ToInterface.Put(d)
}

type RequestOfFloat64ToBool struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToBool{}
		},
	}
)

func GetRequestOfFloat64ToBool() *RequestOfFloat64ToBool {
	return pool_of_RequestOfFloat64ToBool.Get().(*RequestOfFloat64ToBool)
}
func PutRequestOfFloat64ToBool(d *RequestOfFloat64ToBool) {
	pool_of_RequestOfFloat64ToBool.Put(d)
}

type RequestOfFloat64ToByte struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToByte{}
		},
	}
)

func GetRequestOfFloat64ToByte() *RequestOfFloat64ToByte {
	return pool_of_RequestOfFloat64ToByte.Get().(*RequestOfFloat64ToByte)
}
func PutRequestOfFloat64ToByte(d *RequestOfFloat64ToByte) {
	pool_of_RequestOfFloat64ToByte.Put(d)
}

type RequestOfFloat64ToComplex128 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToComplex128{}
		},
	}
)

func GetRequestOfFloat64ToComplex128() *RequestOfFloat64ToComplex128 {
	return pool_of_RequestOfFloat64ToComplex128.Get().(*RequestOfFloat64ToComplex128)
}
func PutRequestOfFloat64ToComplex128(d *RequestOfFloat64ToComplex128) {
	pool_of_RequestOfFloat64ToComplex128.Put(d)
}

type RequestOfFloat64ToComplex64 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToComplex64{}
		},
	}
)

func GetRequestOfFloat64ToComplex64() *RequestOfFloat64ToComplex64 {
	return pool_of_RequestOfFloat64ToComplex64.Get().(*RequestOfFloat64ToComplex64)
}
func PutRequestOfFloat64ToComplex64(d *RequestOfFloat64ToComplex64) {
	pool_of_RequestOfFloat64ToComplex64.Put(d)
}

type RequestOfFloat64ToError struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToError{}
		},
	}
)

func GetRequestOfFloat64ToError() *RequestOfFloat64ToError {
	return pool_of_RequestOfFloat64ToError.Get().(*RequestOfFloat64ToError)
}
func PutRequestOfFloat64ToError(d *RequestOfFloat64ToError) {
	pool_of_RequestOfFloat64ToError.Put(d)
}

type RequestOfFloat64ToFloat32 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToFloat32{}
		},
	}
)

func GetRequestOfFloat64ToFloat32() *RequestOfFloat64ToFloat32 {
	return pool_of_RequestOfFloat64ToFloat32.Get().(*RequestOfFloat64ToFloat32)
}
func PutRequestOfFloat64ToFloat32(d *RequestOfFloat64ToFloat32) {
	pool_of_RequestOfFloat64ToFloat32.Put(d)
}

type RequestOfFloat64ToFloat64 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToFloat64{}
		},
	}
)

func GetRequestOfFloat64ToFloat64() *RequestOfFloat64ToFloat64 {
	return pool_of_RequestOfFloat64ToFloat64.Get().(*RequestOfFloat64ToFloat64)
}
func PutRequestOfFloat64ToFloat64(d *RequestOfFloat64ToFloat64) {
	pool_of_RequestOfFloat64ToFloat64.Put(d)
}

type RequestOfFloat64ToInt struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToInt{}
		},
	}
)

func GetRequestOfFloat64ToInt() *RequestOfFloat64ToInt {
	return pool_of_RequestOfFloat64ToInt.Get().(*RequestOfFloat64ToInt)
}
func PutRequestOfFloat64ToInt(d *RequestOfFloat64ToInt) {
	pool_of_RequestOfFloat64ToInt.Put(d)
}

type RequestOfFloat64ToInt16 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToInt16{}
		},
	}
)

func GetRequestOfFloat64ToInt16() *RequestOfFloat64ToInt16 {
	return pool_of_RequestOfFloat64ToInt16.Get().(*RequestOfFloat64ToInt16)
}
func PutRequestOfFloat64ToInt16(d *RequestOfFloat64ToInt16) {
	pool_of_RequestOfFloat64ToInt16.Put(d)
}

type RequestOfFloat64ToInt32 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToInt32{}
		},
	}
)

func GetRequestOfFloat64ToInt32() *RequestOfFloat64ToInt32 {
	return pool_of_RequestOfFloat64ToInt32.Get().(*RequestOfFloat64ToInt32)
}
func PutRequestOfFloat64ToInt32(d *RequestOfFloat64ToInt32) {
	pool_of_RequestOfFloat64ToInt32.Put(d)
}

type RequestOfFloat64ToInt64 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToInt64{}
		},
	}
)

func GetRequestOfFloat64ToInt64() *RequestOfFloat64ToInt64 {
	return pool_of_RequestOfFloat64ToInt64.Get().(*RequestOfFloat64ToInt64)
}
func PutRequestOfFloat64ToInt64(d *RequestOfFloat64ToInt64) {
	pool_of_RequestOfFloat64ToInt64.Put(d)
}

type RequestOfFloat64ToInt8 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToInt8{}
		},
	}
)

func GetRequestOfFloat64ToInt8() *RequestOfFloat64ToInt8 {
	return pool_of_RequestOfFloat64ToInt8.Get().(*RequestOfFloat64ToInt8)
}
func PutRequestOfFloat64ToInt8(d *RequestOfFloat64ToInt8) {
	pool_of_RequestOfFloat64ToInt8.Put(d)
}

type RequestOfFloat64ToRune struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToRune{}
		},
	}
)

func GetRequestOfFloat64ToRune() *RequestOfFloat64ToRune {
	return pool_of_RequestOfFloat64ToRune.Get().(*RequestOfFloat64ToRune)
}
func PutRequestOfFloat64ToRune(d *RequestOfFloat64ToRune) {
	pool_of_RequestOfFloat64ToRune.Put(d)
}

type RequestOfFloat64ToString struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToString{}
		},
	}
)

func GetRequestOfFloat64ToString() *RequestOfFloat64ToString {
	return pool_of_RequestOfFloat64ToString.Get().(*RequestOfFloat64ToString)
}
func PutRequestOfFloat64ToString(d *RequestOfFloat64ToString) {
	pool_of_RequestOfFloat64ToString.Put(d)
}

type RequestOfFloat64ToUint struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToUint{}
		},
	}
)

func GetRequestOfFloat64ToUint() *RequestOfFloat64ToUint {
	return pool_of_RequestOfFloat64ToUint.Get().(*RequestOfFloat64ToUint)
}
func PutRequestOfFloat64ToUint(d *RequestOfFloat64ToUint) {
	pool_of_RequestOfFloat64ToUint.Put(d)
}

type RequestOfFloat64ToUint16 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToUint16{}
		},
	}
)

func GetRequestOfFloat64ToUint16() *RequestOfFloat64ToUint16 {
	return pool_of_RequestOfFloat64ToUint16.Get().(*RequestOfFloat64ToUint16)
}
func PutRequestOfFloat64ToUint16(d *RequestOfFloat64ToUint16) {
	pool_of_RequestOfFloat64ToUint16.Put(d)
}

type RequestOfFloat64ToUint32 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToUint32{}
		},
	}
)

func GetRequestOfFloat64ToUint32() *RequestOfFloat64ToUint32 {
	return pool_of_RequestOfFloat64ToUint32.Get().(*RequestOfFloat64ToUint32)
}
func PutRequestOfFloat64ToUint32(d *RequestOfFloat64ToUint32) {
	pool_of_RequestOfFloat64ToUint32.Put(d)
}

type RequestOfFloat64ToUint64 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToUint64{}
		},
	}
)

func GetRequestOfFloat64ToUint64() *RequestOfFloat64ToUint64 {
	return pool_of_RequestOfFloat64ToUint64.Get().(*RequestOfFloat64ToUint64)
}
func PutRequestOfFloat64ToUint64(d *RequestOfFloat64ToUint64) {
	pool_of_RequestOfFloat64ToUint64.Put(d)
}

type RequestOfFloat64ToUint8 struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToUint8{}
		},
	}
)

func GetRequestOfFloat64ToUint8() *RequestOfFloat64ToUint8 {
	return pool_of_RequestOfFloat64ToUint8.Get().(*RequestOfFloat64ToUint8)
}
func PutRequestOfFloat64ToUint8(d *RequestOfFloat64ToUint8) {
	pool_of_RequestOfFloat64ToUint8.Put(d)
}

type RequestOfFloat64ToUintptr struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToUintptr{}
		},
	}
)

func GetRequestOfFloat64ToUintptr() *RequestOfFloat64ToUintptr {
	return pool_of_RequestOfFloat64ToUintptr.Get().(*RequestOfFloat64ToUintptr)
}
func PutRequestOfFloat64ToUintptr(d *RequestOfFloat64ToUintptr) {
	pool_of_RequestOfFloat64ToUintptr.Put(d)
}

type RequestOfFloat64ToBytes struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToBytes{}
		},
	}
)

func GetRequestOfFloat64ToBytes() *RequestOfFloat64ToBytes {
	return pool_of_RequestOfFloat64ToBytes.Get().(*RequestOfFloat64ToBytes)
}
func PutRequestOfFloat64ToBytes(d *RequestOfFloat64ToBytes) {
	pool_of_RequestOfFloat64ToBytes.Put(d)
}

type RequestOfFloat64ToInterface struct {
	Context  context.Context
	Value    float64
	ReturnCh chan<- ReturnOfFloat64
}

var (
	pool_of_RequestOfFloat64ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfFloat64ToInterface{}
		},
	}
)

func GetRequestOfFloat64ToInterface() *RequestOfFloat64ToInterface {
	return pool_of_RequestOfFloat64ToInterface.Get().(*RequestOfFloat64ToInterface)
}
func PutRequestOfFloat64ToInterface(d *RequestOfFloat64ToInterface) {
	pool_of_RequestOfFloat64ToInterface.Put(d)
}

type RequestOfIntToBool struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToBool{}
		},
	}
)

func GetRequestOfIntToBool() *RequestOfIntToBool {
	return pool_of_RequestOfIntToBool.Get().(*RequestOfIntToBool)
}
func PutRequestOfIntToBool(d *RequestOfIntToBool) {
	pool_of_RequestOfIntToBool.Put(d)
}

type RequestOfIntToByte struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToByte{}
		},
	}
)

func GetRequestOfIntToByte() *RequestOfIntToByte {
	return pool_of_RequestOfIntToByte.Get().(*RequestOfIntToByte)
}
func PutRequestOfIntToByte(d *RequestOfIntToByte) {
	pool_of_RequestOfIntToByte.Put(d)
}

type RequestOfIntToComplex128 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToComplex128{}
		},
	}
)

func GetRequestOfIntToComplex128() *RequestOfIntToComplex128 {
	return pool_of_RequestOfIntToComplex128.Get().(*RequestOfIntToComplex128)
}
func PutRequestOfIntToComplex128(d *RequestOfIntToComplex128) {
	pool_of_RequestOfIntToComplex128.Put(d)
}

type RequestOfIntToComplex64 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToComplex64{}
		},
	}
)

func GetRequestOfIntToComplex64() *RequestOfIntToComplex64 {
	return pool_of_RequestOfIntToComplex64.Get().(*RequestOfIntToComplex64)
}
func PutRequestOfIntToComplex64(d *RequestOfIntToComplex64) {
	pool_of_RequestOfIntToComplex64.Put(d)
}

type RequestOfIntToError struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToError{}
		},
	}
)

func GetRequestOfIntToError() *RequestOfIntToError {
	return pool_of_RequestOfIntToError.Get().(*RequestOfIntToError)
}
func PutRequestOfIntToError(d *RequestOfIntToError) {
	pool_of_RequestOfIntToError.Put(d)
}

type RequestOfIntToFloat32 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToFloat32{}
		},
	}
)

func GetRequestOfIntToFloat32() *RequestOfIntToFloat32 {
	return pool_of_RequestOfIntToFloat32.Get().(*RequestOfIntToFloat32)
}
func PutRequestOfIntToFloat32(d *RequestOfIntToFloat32) {
	pool_of_RequestOfIntToFloat32.Put(d)
}

type RequestOfIntToFloat64 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToFloat64{}
		},
	}
)

func GetRequestOfIntToFloat64() *RequestOfIntToFloat64 {
	return pool_of_RequestOfIntToFloat64.Get().(*RequestOfIntToFloat64)
}
func PutRequestOfIntToFloat64(d *RequestOfIntToFloat64) {
	pool_of_RequestOfIntToFloat64.Put(d)
}

type RequestOfIntToInt struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToInt{}
		},
	}
)

func GetRequestOfIntToInt() *RequestOfIntToInt {
	return pool_of_RequestOfIntToInt.Get().(*RequestOfIntToInt)
}
func PutRequestOfIntToInt(d *RequestOfIntToInt) {
	pool_of_RequestOfIntToInt.Put(d)
}

type RequestOfIntToInt16 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToInt16{}
		},
	}
)

func GetRequestOfIntToInt16() *RequestOfIntToInt16 {
	return pool_of_RequestOfIntToInt16.Get().(*RequestOfIntToInt16)
}
func PutRequestOfIntToInt16(d *RequestOfIntToInt16) {
	pool_of_RequestOfIntToInt16.Put(d)
}

type RequestOfIntToInt32 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToInt32{}
		},
	}
)

func GetRequestOfIntToInt32() *RequestOfIntToInt32 {
	return pool_of_RequestOfIntToInt32.Get().(*RequestOfIntToInt32)
}
func PutRequestOfIntToInt32(d *RequestOfIntToInt32) {
	pool_of_RequestOfIntToInt32.Put(d)
}

type RequestOfIntToInt64 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToInt64{}
		},
	}
)

func GetRequestOfIntToInt64() *RequestOfIntToInt64 {
	return pool_of_RequestOfIntToInt64.Get().(*RequestOfIntToInt64)
}
func PutRequestOfIntToInt64(d *RequestOfIntToInt64) {
	pool_of_RequestOfIntToInt64.Put(d)
}

type RequestOfIntToInt8 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToInt8{}
		},
	}
)

func GetRequestOfIntToInt8() *RequestOfIntToInt8 {
	return pool_of_RequestOfIntToInt8.Get().(*RequestOfIntToInt8)
}
func PutRequestOfIntToInt8(d *RequestOfIntToInt8) {
	pool_of_RequestOfIntToInt8.Put(d)
}

type RequestOfIntToRune struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToRune{}
		},
	}
)

func GetRequestOfIntToRune() *RequestOfIntToRune {
	return pool_of_RequestOfIntToRune.Get().(*RequestOfIntToRune)
}
func PutRequestOfIntToRune(d *RequestOfIntToRune) {
	pool_of_RequestOfIntToRune.Put(d)
}

type RequestOfIntToString struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToString{}
		},
	}
)

func GetRequestOfIntToString() *RequestOfIntToString {
	return pool_of_RequestOfIntToString.Get().(*RequestOfIntToString)
}
func PutRequestOfIntToString(d *RequestOfIntToString) {
	pool_of_RequestOfIntToString.Put(d)
}

type RequestOfIntToUint struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToUint{}
		},
	}
)

func GetRequestOfIntToUint() *RequestOfIntToUint {
	return pool_of_RequestOfIntToUint.Get().(*RequestOfIntToUint)
}
func PutRequestOfIntToUint(d *RequestOfIntToUint) {
	pool_of_RequestOfIntToUint.Put(d)
}

type RequestOfIntToUint16 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToUint16{}
		},
	}
)

func GetRequestOfIntToUint16() *RequestOfIntToUint16 {
	return pool_of_RequestOfIntToUint16.Get().(*RequestOfIntToUint16)
}
func PutRequestOfIntToUint16(d *RequestOfIntToUint16) {
	pool_of_RequestOfIntToUint16.Put(d)
}

type RequestOfIntToUint32 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToUint32{}
		},
	}
)

func GetRequestOfIntToUint32() *RequestOfIntToUint32 {
	return pool_of_RequestOfIntToUint32.Get().(*RequestOfIntToUint32)
}
func PutRequestOfIntToUint32(d *RequestOfIntToUint32) {
	pool_of_RequestOfIntToUint32.Put(d)
}

type RequestOfIntToUint64 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToUint64{}
		},
	}
)

func GetRequestOfIntToUint64() *RequestOfIntToUint64 {
	return pool_of_RequestOfIntToUint64.Get().(*RequestOfIntToUint64)
}
func PutRequestOfIntToUint64(d *RequestOfIntToUint64) {
	pool_of_RequestOfIntToUint64.Put(d)
}

type RequestOfIntToUint8 struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToUint8{}
		},
	}
)

func GetRequestOfIntToUint8() *RequestOfIntToUint8 {
	return pool_of_RequestOfIntToUint8.Get().(*RequestOfIntToUint8)
}
func PutRequestOfIntToUint8(d *RequestOfIntToUint8) {
	pool_of_RequestOfIntToUint8.Put(d)
}

type RequestOfIntToUintptr struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToUintptr{}
		},
	}
)

func GetRequestOfIntToUintptr() *RequestOfIntToUintptr {
	return pool_of_RequestOfIntToUintptr.Get().(*RequestOfIntToUintptr)
}
func PutRequestOfIntToUintptr(d *RequestOfIntToUintptr) {
	pool_of_RequestOfIntToUintptr.Put(d)
}

type RequestOfIntToBytes struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToBytes{}
		},
	}
)

func GetRequestOfIntToBytes() *RequestOfIntToBytes {
	return pool_of_RequestOfIntToBytes.Get().(*RequestOfIntToBytes)
}
func PutRequestOfIntToBytes(d *RequestOfIntToBytes) {
	pool_of_RequestOfIntToBytes.Put(d)
}

type RequestOfIntToInterface struct {
	Context  context.Context
	Value    int
	ReturnCh chan<- ReturnOfInt
}

var (
	pool_of_RequestOfIntToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfIntToInterface{}
		},
	}
)

func GetRequestOfIntToInterface() *RequestOfIntToInterface {
	return pool_of_RequestOfIntToInterface.Get().(*RequestOfIntToInterface)
}
func PutRequestOfIntToInterface(d *RequestOfIntToInterface) {
	pool_of_RequestOfIntToInterface.Put(d)
}

type RequestOfInt16ToBool struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToBool{}
		},
	}
)

func GetRequestOfInt16ToBool() *RequestOfInt16ToBool {
	return pool_of_RequestOfInt16ToBool.Get().(*RequestOfInt16ToBool)
}
func PutRequestOfInt16ToBool(d *RequestOfInt16ToBool) {
	pool_of_RequestOfInt16ToBool.Put(d)
}

type RequestOfInt16ToByte struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToByte{}
		},
	}
)

func GetRequestOfInt16ToByte() *RequestOfInt16ToByte {
	return pool_of_RequestOfInt16ToByte.Get().(*RequestOfInt16ToByte)
}
func PutRequestOfInt16ToByte(d *RequestOfInt16ToByte) {
	pool_of_RequestOfInt16ToByte.Put(d)
}

type RequestOfInt16ToComplex128 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToComplex128{}
		},
	}
)

func GetRequestOfInt16ToComplex128() *RequestOfInt16ToComplex128 {
	return pool_of_RequestOfInt16ToComplex128.Get().(*RequestOfInt16ToComplex128)
}
func PutRequestOfInt16ToComplex128(d *RequestOfInt16ToComplex128) {
	pool_of_RequestOfInt16ToComplex128.Put(d)
}

type RequestOfInt16ToComplex64 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToComplex64{}
		},
	}
)

func GetRequestOfInt16ToComplex64() *RequestOfInt16ToComplex64 {
	return pool_of_RequestOfInt16ToComplex64.Get().(*RequestOfInt16ToComplex64)
}
func PutRequestOfInt16ToComplex64(d *RequestOfInt16ToComplex64) {
	pool_of_RequestOfInt16ToComplex64.Put(d)
}

type RequestOfInt16ToError struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToError{}
		},
	}
)

func GetRequestOfInt16ToError() *RequestOfInt16ToError {
	return pool_of_RequestOfInt16ToError.Get().(*RequestOfInt16ToError)
}
func PutRequestOfInt16ToError(d *RequestOfInt16ToError) {
	pool_of_RequestOfInt16ToError.Put(d)
}

type RequestOfInt16ToFloat32 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToFloat32{}
		},
	}
)

func GetRequestOfInt16ToFloat32() *RequestOfInt16ToFloat32 {
	return pool_of_RequestOfInt16ToFloat32.Get().(*RequestOfInt16ToFloat32)
}
func PutRequestOfInt16ToFloat32(d *RequestOfInt16ToFloat32) {
	pool_of_RequestOfInt16ToFloat32.Put(d)
}

type RequestOfInt16ToFloat64 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToFloat64{}
		},
	}
)

func GetRequestOfInt16ToFloat64() *RequestOfInt16ToFloat64 {
	return pool_of_RequestOfInt16ToFloat64.Get().(*RequestOfInt16ToFloat64)
}
func PutRequestOfInt16ToFloat64(d *RequestOfInt16ToFloat64) {
	pool_of_RequestOfInt16ToFloat64.Put(d)
}

type RequestOfInt16ToInt struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToInt{}
		},
	}
)

func GetRequestOfInt16ToInt() *RequestOfInt16ToInt {
	return pool_of_RequestOfInt16ToInt.Get().(*RequestOfInt16ToInt)
}
func PutRequestOfInt16ToInt(d *RequestOfInt16ToInt) {
	pool_of_RequestOfInt16ToInt.Put(d)
}

type RequestOfInt16ToInt16 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToInt16{}
		},
	}
)

func GetRequestOfInt16ToInt16() *RequestOfInt16ToInt16 {
	return pool_of_RequestOfInt16ToInt16.Get().(*RequestOfInt16ToInt16)
}
func PutRequestOfInt16ToInt16(d *RequestOfInt16ToInt16) {
	pool_of_RequestOfInt16ToInt16.Put(d)
}

type RequestOfInt16ToInt32 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToInt32{}
		},
	}
)

func GetRequestOfInt16ToInt32() *RequestOfInt16ToInt32 {
	return pool_of_RequestOfInt16ToInt32.Get().(*RequestOfInt16ToInt32)
}
func PutRequestOfInt16ToInt32(d *RequestOfInt16ToInt32) {
	pool_of_RequestOfInt16ToInt32.Put(d)
}

type RequestOfInt16ToInt64 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToInt64{}
		},
	}
)

func GetRequestOfInt16ToInt64() *RequestOfInt16ToInt64 {
	return pool_of_RequestOfInt16ToInt64.Get().(*RequestOfInt16ToInt64)
}
func PutRequestOfInt16ToInt64(d *RequestOfInt16ToInt64) {
	pool_of_RequestOfInt16ToInt64.Put(d)
}

type RequestOfInt16ToInt8 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToInt8{}
		},
	}
)

func GetRequestOfInt16ToInt8() *RequestOfInt16ToInt8 {
	return pool_of_RequestOfInt16ToInt8.Get().(*RequestOfInt16ToInt8)
}
func PutRequestOfInt16ToInt8(d *RequestOfInt16ToInt8) {
	pool_of_RequestOfInt16ToInt8.Put(d)
}

type RequestOfInt16ToRune struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToRune{}
		},
	}
)

func GetRequestOfInt16ToRune() *RequestOfInt16ToRune {
	return pool_of_RequestOfInt16ToRune.Get().(*RequestOfInt16ToRune)
}
func PutRequestOfInt16ToRune(d *RequestOfInt16ToRune) {
	pool_of_RequestOfInt16ToRune.Put(d)
}

type RequestOfInt16ToString struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToString{}
		},
	}
)

func GetRequestOfInt16ToString() *RequestOfInt16ToString {
	return pool_of_RequestOfInt16ToString.Get().(*RequestOfInt16ToString)
}
func PutRequestOfInt16ToString(d *RequestOfInt16ToString) {
	pool_of_RequestOfInt16ToString.Put(d)
}

type RequestOfInt16ToUint struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToUint{}
		},
	}
)

func GetRequestOfInt16ToUint() *RequestOfInt16ToUint {
	return pool_of_RequestOfInt16ToUint.Get().(*RequestOfInt16ToUint)
}
func PutRequestOfInt16ToUint(d *RequestOfInt16ToUint) {
	pool_of_RequestOfInt16ToUint.Put(d)
}

type RequestOfInt16ToUint16 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToUint16{}
		},
	}
)

func GetRequestOfInt16ToUint16() *RequestOfInt16ToUint16 {
	return pool_of_RequestOfInt16ToUint16.Get().(*RequestOfInt16ToUint16)
}
func PutRequestOfInt16ToUint16(d *RequestOfInt16ToUint16) {
	pool_of_RequestOfInt16ToUint16.Put(d)
}

type RequestOfInt16ToUint32 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToUint32{}
		},
	}
)

func GetRequestOfInt16ToUint32() *RequestOfInt16ToUint32 {
	return pool_of_RequestOfInt16ToUint32.Get().(*RequestOfInt16ToUint32)
}
func PutRequestOfInt16ToUint32(d *RequestOfInt16ToUint32) {
	pool_of_RequestOfInt16ToUint32.Put(d)
}

type RequestOfInt16ToUint64 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToUint64{}
		},
	}
)

func GetRequestOfInt16ToUint64() *RequestOfInt16ToUint64 {
	return pool_of_RequestOfInt16ToUint64.Get().(*RequestOfInt16ToUint64)
}
func PutRequestOfInt16ToUint64(d *RequestOfInt16ToUint64) {
	pool_of_RequestOfInt16ToUint64.Put(d)
}

type RequestOfInt16ToUint8 struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToUint8{}
		},
	}
)

func GetRequestOfInt16ToUint8() *RequestOfInt16ToUint8 {
	return pool_of_RequestOfInt16ToUint8.Get().(*RequestOfInt16ToUint8)
}
func PutRequestOfInt16ToUint8(d *RequestOfInt16ToUint8) {
	pool_of_RequestOfInt16ToUint8.Put(d)
}

type RequestOfInt16ToUintptr struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToUintptr{}
		},
	}
)

func GetRequestOfInt16ToUintptr() *RequestOfInt16ToUintptr {
	return pool_of_RequestOfInt16ToUintptr.Get().(*RequestOfInt16ToUintptr)
}
func PutRequestOfInt16ToUintptr(d *RequestOfInt16ToUintptr) {
	pool_of_RequestOfInt16ToUintptr.Put(d)
}

type RequestOfInt16ToBytes struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToBytes{}
		},
	}
)

func GetRequestOfInt16ToBytes() *RequestOfInt16ToBytes {
	return pool_of_RequestOfInt16ToBytes.Get().(*RequestOfInt16ToBytes)
}
func PutRequestOfInt16ToBytes(d *RequestOfInt16ToBytes) {
	pool_of_RequestOfInt16ToBytes.Put(d)
}

type RequestOfInt16ToInterface struct {
	Context  context.Context
	Value    int16
	ReturnCh chan<- ReturnOfInt16
}

var (
	pool_of_RequestOfInt16ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt16ToInterface{}
		},
	}
)

func GetRequestOfInt16ToInterface() *RequestOfInt16ToInterface {
	return pool_of_RequestOfInt16ToInterface.Get().(*RequestOfInt16ToInterface)
}
func PutRequestOfInt16ToInterface(d *RequestOfInt16ToInterface) {
	pool_of_RequestOfInt16ToInterface.Put(d)
}

type RequestOfInt32ToBool struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToBool{}
		},
	}
)

func GetRequestOfInt32ToBool() *RequestOfInt32ToBool {
	return pool_of_RequestOfInt32ToBool.Get().(*RequestOfInt32ToBool)
}
func PutRequestOfInt32ToBool(d *RequestOfInt32ToBool) {
	pool_of_RequestOfInt32ToBool.Put(d)
}

type RequestOfInt32ToByte struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToByte{}
		},
	}
)

func GetRequestOfInt32ToByte() *RequestOfInt32ToByte {
	return pool_of_RequestOfInt32ToByte.Get().(*RequestOfInt32ToByte)
}
func PutRequestOfInt32ToByte(d *RequestOfInt32ToByte) {
	pool_of_RequestOfInt32ToByte.Put(d)
}

type RequestOfInt32ToComplex128 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToComplex128{}
		},
	}
)

func GetRequestOfInt32ToComplex128() *RequestOfInt32ToComplex128 {
	return pool_of_RequestOfInt32ToComplex128.Get().(*RequestOfInt32ToComplex128)
}
func PutRequestOfInt32ToComplex128(d *RequestOfInt32ToComplex128) {
	pool_of_RequestOfInt32ToComplex128.Put(d)
}

type RequestOfInt32ToComplex64 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToComplex64{}
		},
	}
)

func GetRequestOfInt32ToComplex64() *RequestOfInt32ToComplex64 {
	return pool_of_RequestOfInt32ToComplex64.Get().(*RequestOfInt32ToComplex64)
}
func PutRequestOfInt32ToComplex64(d *RequestOfInt32ToComplex64) {
	pool_of_RequestOfInt32ToComplex64.Put(d)
}

type RequestOfInt32ToError struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToError{}
		},
	}
)

func GetRequestOfInt32ToError() *RequestOfInt32ToError {
	return pool_of_RequestOfInt32ToError.Get().(*RequestOfInt32ToError)
}
func PutRequestOfInt32ToError(d *RequestOfInt32ToError) {
	pool_of_RequestOfInt32ToError.Put(d)
}

type RequestOfInt32ToFloat32 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToFloat32{}
		},
	}
)

func GetRequestOfInt32ToFloat32() *RequestOfInt32ToFloat32 {
	return pool_of_RequestOfInt32ToFloat32.Get().(*RequestOfInt32ToFloat32)
}
func PutRequestOfInt32ToFloat32(d *RequestOfInt32ToFloat32) {
	pool_of_RequestOfInt32ToFloat32.Put(d)
}

type RequestOfInt32ToFloat64 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToFloat64{}
		},
	}
)

func GetRequestOfInt32ToFloat64() *RequestOfInt32ToFloat64 {
	return pool_of_RequestOfInt32ToFloat64.Get().(*RequestOfInt32ToFloat64)
}
func PutRequestOfInt32ToFloat64(d *RequestOfInt32ToFloat64) {
	pool_of_RequestOfInt32ToFloat64.Put(d)
}

type RequestOfInt32ToInt struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToInt{}
		},
	}
)

func GetRequestOfInt32ToInt() *RequestOfInt32ToInt {
	return pool_of_RequestOfInt32ToInt.Get().(*RequestOfInt32ToInt)
}
func PutRequestOfInt32ToInt(d *RequestOfInt32ToInt) {
	pool_of_RequestOfInt32ToInt.Put(d)
}

type RequestOfInt32ToInt16 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToInt16{}
		},
	}
)

func GetRequestOfInt32ToInt16() *RequestOfInt32ToInt16 {
	return pool_of_RequestOfInt32ToInt16.Get().(*RequestOfInt32ToInt16)
}
func PutRequestOfInt32ToInt16(d *RequestOfInt32ToInt16) {
	pool_of_RequestOfInt32ToInt16.Put(d)
}

type RequestOfInt32ToInt32 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToInt32{}
		},
	}
)

func GetRequestOfInt32ToInt32() *RequestOfInt32ToInt32 {
	return pool_of_RequestOfInt32ToInt32.Get().(*RequestOfInt32ToInt32)
}
func PutRequestOfInt32ToInt32(d *RequestOfInt32ToInt32) {
	pool_of_RequestOfInt32ToInt32.Put(d)
}

type RequestOfInt32ToInt64 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToInt64{}
		},
	}
)

func GetRequestOfInt32ToInt64() *RequestOfInt32ToInt64 {
	return pool_of_RequestOfInt32ToInt64.Get().(*RequestOfInt32ToInt64)
}
func PutRequestOfInt32ToInt64(d *RequestOfInt32ToInt64) {
	pool_of_RequestOfInt32ToInt64.Put(d)
}

type RequestOfInt32ToInt8 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToInt8{}
		},
	}
)

func GetRequestOfInt32ToInt8() *RequestOfInt32ToInt8 {
	return pool_of_RequestOfInt32ToInt8.Get().(*RequestOfInt32ToInt8)
}
func PutRequestOfInt32ToInt8(d *RequestOfInt32ToInt8) {
	pool_of_RequestOfInt32ToInt8.Put(d)
}

type RequestOfInt32ToRune struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToRune{}
		},
	}
)

func GetRequestOfInt32ToRune() *RequestOfInt32ToRune {
	return pool_of_RequestOfInt32ToRune.Get().(*RequestOfInt32ToRune)
}
func PutRequestOfInt32ToRune(d *RequestOfInt32ToRune) {
	pool_of_RequestOfInt32ToRune.Put(d)
}

type RequestOfInt32ToString struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToString{}
		},
	}
)

func GetRequestOfInt32ToString() *RequestOfInt32ToString {
	return pool_of_RequestOfInt32ToString.Get().(*RequestOfInt32ToString)
}
func PutRequestOfInt32ToString(d *RequestOfInt32ToString) {
	pool_of_RequestOfInt32ToString.Put(d)
}

type RequestOfInt32ToUint struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToUint{}
		},
	}
)

func GetRequestOfInt32ToUint() *RequestOfInt32ToUint {
	return pool_of_RequestOfInt32ToUint.Get().(*RequestOfInt32ToUint)
}
func PutRequestOfInt32ToUint(d *RequestOfInt32ToUint) {
	pool_of_RequestOfInt32ToUint.Put(d)
}

type RequestOfInt32ToUint16 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToUint16{}
		},
	}
)

func GetRequestOfInt32ToUint16() *RequestOfInt32ToUint16 {
	return pool_of_RequestOfInt32ToUint16.Get().(*RequestOfInt32ToUint16)
}
func PutRequestOfInt32ToUint16(d *RequestOfInt32ToUint16) {
	pool_of_RequestOfInt32ToUint16.Put(d)
}

type RequestOfInt32ToUint32 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToUint32{}
		},
	}
)

func GetRequestOfInt32ToUint32() *RequestOfInt32ToUint32 {
	return pool_of_RequestOfInt32ToUint32.Get().(*RequestOfInt32ToUint32)
}
func PutRequestOfInt32ToUint32(d *RequestOfInt32ToUint32) {
	pool_of_RequestOfInt32ToUint32.Put(d)
}

type RequestOfInt32ToUint64 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToUint64{}
		},
	}
)

func GetRequestOfInt32ToUint64() *RequestOfInt32ToUint64 {
	return pool_of_RequestOfInt32ToUint64.Get().(*RequestOfInt32ToUint64)
}
func PutRequestOfInt32ToUint64(d *RequestOfInt32ToUint64) {
	pool_of_RequestOfInt32ToUint64.Put(d)
}

type RequestOfInt32ToUint8 struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToUint8{}
		},
	}
)

func GetRequestOfInt32ToUint8() *RequestOfInt32ToUint8 {
	return pool_of_RequestOfInt32ToUint8.Get().(*RequestOfInt32ToUint8)
}
func PutRequestOfInt32ToUint8(d *RequestOfInt32ToUint8) {
	pool_of_RequestOfInt32ToUint8.Put(d)
}

type RequestOfInt32ToUintptr struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToUintptr{}
		},
	}
)

func GetRequestOfInt32ToUintptr() *RequestOfInt32ToUintptr {
	return pool_of_RequestOfInt32ToUintptr.Get().(*RequestOfInt32ToUintptr)
}
func PutRequestOfInt32ToUintptr(d *RequestOfInt32ToUintptr) {
	pool_of_RequestOfInt32ToUintptr.Put(d)
}

type RequestOfInt32ToBytes struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToBytes{}
		},
	}
)

func GetRequestOfInt32ToBytes() *RequestOfInt32ToBytes {
	return pool_of_RequestOfInt32ToBytes.Get().(*RequestOfInt32ToBytes)
}
func PutRequestOfInt32ToBytes(d *RequestOfInt32ToBytes) {
	pool_of_RequestOfInt32ToBytes.Put(d)
}

type RequestOfInt32ToInterface struct {
	Context  context.Context
	Value    int32
	ReturnCh chan<- ReturnOfInt32
}

var (
	pool_of_RequestOfInt32ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt32ToInterface{}
		},
	}
)

func GetRequestOfInt32ToInterface() *RequestOfInt32ToInterface {
	return pool_of_RequestOfInt32ToInterface.Get().(*RequestOfInt32ToInterface)
}
func PutRequestOfInt32ToInterface(d *RequestOfInt32ToInterface) {
	pool_of_RequestOfInt32ToInterface.Put(d)
}

type RequestOfInt64ToBool struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToBool{}
		},
	}
)

func GetRequestOfInt64ToBool() *RequestOfInt64ToBool {
	return pool_of_RequestOfInt64ToBool.Get().(*RequestOfInt64ToBool)
}
func PutRequestOfInt64ToBool(d *RequestOfInt64ToBool) {
	pool_of_RequestOfInt64ToBool.Put(d)
}

type RequestOfInt64ToByte struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToByte{}
		},
	}
)

func GetRequestOfInt64ToByte() *RequestOfInt64ToByte {
	return pool_of_RequestOfInt64ToByte.Get().(*RequestOfInt64ToByte)
}
func PutRequestOfInt64ToByte(d *RequestOfInt64ToByte) {
	pool_of_RequestOfInt64ToByte.Put(d)
}

type RequestOfInt64ToComplex128 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToComplex128{}
		},
	}
)

func GetRequestOfInt64ToComplex128() *RequestOfInt64ToComplex128 {
	return pool_of_RequestOfInt64ToComplex128.Get().(*RequestOfInt64ToComplex128)
}
func PutRequestOfInt64ToComplex128(d *RequestOfInt64ToComplex128) {
	pool_of_RequestOfInt64ToComplex128.Put(d)
}

type RequestOfInt64ToComplex64 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToComplex64{}
		},
	}
)

func GetRequestOfInt64ToComplex64() *RequestOfInt64ToComplex64 {
	return pool_of_RequestOfInt64ToComplex64.Get().(*RequestOfInt64ToComplex64)
}
func PutRequestOfInt64ToComplex64(d *RequestOfInt64ToComplex64) {
	pool_of_RequestOfInt64ToComplex64.Put(d)
}

type RequestOfInt64ToError struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToError{}
		},
	}
)

func GetRequestOfInt64ToError() *RequestOfInt64ToError {
	return pool_of_RequestOfInt64ToError.Get().(*RequestOfInt64ToError)
}
func PutRequestOfInt64ToError(d *RequestOfInt64ToError) {
	pool_of_RequestOfInt64ToError.Put(d)
}

type RequestOfInt64ToFloat32 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToFloat32{}
		},
	}
)

func GetRequestOfInt64ToFloat32() *RequestOfInt64ToFloat32 {
	return pool_of_RequestOfInt64ToFloat32.Get().(*RequestOfInt64ToFloat32)
}
func PutRequestOfInt64ToFloat32(d *RequestOfInt64ToFloat32) {
	pool_of_RequestOfInt64ToFloat32.Put(d)
}

type RequestOfInt64ToFloat64 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToFloat64{}
		},
	}
)

func GetRequestOfInt64ToFloat64() *RequestOfInt64ToFloat64 {
	return pool_of_RequestOfInt64ToFloat64.Get().(*RequestOfInt64ToFloat64)
}
func PutRequestOfInt64ToFloat64(d *RequestOfInt64ToFloat64) {
	pool_of_RequestOfInt64ToFloat64.Put(d)
}

type RequestOfInt64ToInt struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToInt{}
		},
	}
)

func GetRequestOfInt64ToInt() *RequestOfInt64ToInt {
	return pool_of_RequestOfInt64ToInt.Get().(*RequestOfInt64ToInt)
}
func PutRequestOfInt64ToInt(d *RequestOfInt64ToInt) {
	pool_of_RequestOfInt64ToInt.Put(d)
}

type RequestOfInt64ToInt16 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToInt16{}
		},
	}
)

func GetRequestOfInt64ToInt16() *RequestOfInt64ToInt16 {
	return pool_of_RequestOfInt64ToInt16.Get().(*RequestOfInt64ToInt16)
}
func PutRequestOfInt64ToInt16(d *RequestOfInt64ToInt16) {
	pool_of_RequestOfInt64ToInt16.Put(d)
}

type RequestOfInt64ToInt32 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToInt32{}
		},
	}
)

func GetRequestOfInt64ToInt32() *RequestOfInt64ToInt32 {
	return pool_of_RequestOfInt64ToInt32.Get().(*RequestOfInt64ToInt32)
}
func PutRequestOfInt64ToInt32(d *RequestOfInt64ToInt32) {
	pool_of_RequestOfInt64ToInt32.Put(d)
}

type RequestOfInt64ToInt64 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToInt64{}
		},
	}
)

func GetRequestOfInt64ToInt64() *RequestOfInt64ToInt64 {
	return pool_of_RequestOfInt64ToInt64.Get().(*RequestOfInt64ToInt64)
}
func PutRequestOfInt64ToInt64(d *RequestOfInt64ToInt64) {
	pool_of_RequestOfInt64ToInt64.Put(d)
}

type RequestOfInt64ToInt8 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToInt8{}
		},
	}
)

func GetRequestOfInt64ToInt8() *RequestOfInt64ToInt8 {
	return pool_of_RequestOfInt64ToInt8.Get().(*RequestOfInt64ToInt8)
}
func PutRequestOfInt64ToInt8(d *RequestOfInt64ToInt8) {
	pool_of_RequestOfInt64ToInt8.Put(d)
}

type RequestOfInt64ToRune struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToRune{}
		},
	}
)

func GetRequestOfInt64ToRune() *RequestOfInt64ToRune {
	return pool_of_RequestOfInt64ToRune.Get().(*RequestOfInt64ToRune)
}
func PutRequestOfInt64ToRune(d *RequestOfInt64ToRune) {
	pool_of_RequestOfInt64ToRune.Put(d)
}

type RequestOfInt64ToString struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToString{}
		},
	}
)

func GetRequestOfInt64ToString() *RequestOfInt64ToString {
	return pool_of_RequestOfInt64ToString.Get().(*RequestOfInt64ToString)
}
func PutRequestOfInt64ToString(d *RequestOfInt64ToString) {
	pool_of_RequestOfInt64ToString.Put(d)
}

type RequestOfInt64ToUint struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToUint{}
		},
	}
)

func GetRequestOfInt64ToUint() *RequestOfInt64ToUint {
	return pool_of_RequestOfInt64ToUint.Get().(*RequestOfInt64ToUint)
}
func PutRequestOfInt64ToUint(d *RequestOfInt64ToUint) {
	pool_of_RequestOfInt64ToUint.Put(d)
}

type RequestOfInt64ToUint16 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToUint16{}
		},
	}
)

func GetRequestOfInt64ToUint16() *RequestOfInt64ToUint16 {
	return pool_of_RequestOfInt64ToUint16.Get().(*RequestOfInt64ToUint16)
}
func PutRequestOfInt64ToUint16(d *RequestOfInt64ToUint16) {
	pool_of_RequestOfInt64ToUint16.Put(d)
}

type RequestOfInt64ToUint32 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToUint32{}
		},
	}
)

func GetRequestOfInt64ToUint32() *RequestOfInt64ToUint32 {
	return pool_of_RequestOfInt64ToUint32.Get().(*RequestOfInt64ToUint32)
}
func PutRequestOfInt64ToUint32(d *RequestOfInt64ToUint32) {
	pool_of_RequestOfInt64ToUint32.Put(d)
}

type RequestOfInt64ToUint64 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToUint64{}
		},
	}
)

func GetRequestOfInt64ToUint64() *RequestOfInt64ToUint64 {
	return pool_of_RequestOfInt64ToUint64.Get().(*RequestOfInt64ToUint64)
}
func PutRequestOfInt64ToUint64(d *RequestOfInt64ToUint64) {
	pool_of_RequestOfInt64ToUint64.Put(d)
}

type RequestOfInt64ToUint8 struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToUint8{}
		},
	}
)

func GetRequestOfInt64ToUint8() *RequestOfInt64ToUint8 {
	return pool_of_RequestOfInt64ToUint8.Get().(*RequestOfInt64ToUint8)
}
func PutRequestOfInt64ToUint8(d *RequestOfInt64ToUint8) {
	pool_of_RequestOfInt64ToUint8.Put(d)
}

type RequestOfInt64ToUintptr struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToUintptr{}
		},
	}
)

func GetRequestOfInt64ToUintptr() *RequestOfInt64ToUintptr {
	return pool_of_RequestOfInt64ToUintptr.Get().(*RequestOfInt64ToUintptr)
}
func PutRequestOfInt64ToUintptr(d *RequestOfInt64ToUintptr) {
	pool_of_RequestOfInt64ToUintptr.Put(d)
}

type RequestOfInt64ToBytes struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToBytes{}
		},
	}
)

func GetRequestOfInt64ToBytes() *RequestOfInt64ToBytes {
	return pool_of_RequestOfInt64ToBytes.Get().(*RequestOfInt64ToBytes)
}
func PutRequestOfInt64ToBytes(d *RequestOfInt64ToBytes) {
	pool_of_RequestOfInt64ToBytes.Put(d)
}

type RequestOfInt64ToInterface struct {
	Context  context.Context
	Value    int64
	ReturnCh chan<- ReturnOfInt64
}

var (
	pool_of_RequestOfInt64ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt64ToInterface{}
		},
	}
)

func GetRequestOfInt64ToInterface() *RequestOfInt64ToInterface {
	return pool_of_RequestOfInt64ToInterface.Get().(*RequestOfInt64ToInterface)
}
func PutRequestOfInt64ToInterface(d *RequestOfInt64ToInterface) {
	pool_of_RequestOfInt64ToInterface.Put(d)
}

type RequestOfInt8ToBool struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToBool{}
		},
	}
)

func GetRequestOfInt8ToBool() *RequestOfInt8ToBool {
	return pool_of_RequestOfInt8ToBool.Get().(*RequestOfInt8ToBool)
}
func PutRequestOfInt8ToBool(d *RequestOfInt8ToBool) {
	pool_of_RequestOfInt8ToBool.Put(d)
}

type RequestOfInt8ToByte struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToByte{}
		},
	}
)

func GetRequestOfInt8ToByte() *RequestOfInt8ToByte {
	return pool_of_RequestOfInt8ToByte.Get().(*RequestOfInt8ToByte)
}
func PutRequestOfInt8ToByte(d *RequestOfInt8ToByte) {
	pool_of_RequestOfInt8ToByte.Put(d)
}

type RequestOfInt8ToComplex128 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToComplex128{}
		},
	}
)

func GetRequestOfInt8ToComplex128() *RequestOfInt8ToComplex128 {
	return pool_of_RequestOfInt8ToComplex128.Get().(*RequestOfInt8ToComplex128)
}
func PutRequestOfInt8ToComplex128(d *RequestOfInt8ToComplex128) {
	pool_of_RequestOfInt8ToComplex128.Put(d)
}

type RequestOfInt8ToComplex64 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToComplex64{}
		},
	}
)

func GetRequestOfInt8ToComplex64() *RequestOfInt8ToComplex64 {
	return pool_of_RequestOfInt8ToComplex64.Get().(*RequestOfInt8ToComplex64)
}
func PutRequestOfInt8ToComplex64(d *RequestOfInt8ToComplex64) {
	pool_of_RequestOfInt8ToComplex64.Put(d)
}

type RequestOfInt8ToError struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToError{}
		},
	}
)

func GetRequestOfInt8ToError() *RequestOfInt8ToError {
	return pool_of_RequestOfInt8ToError.Get().(*RequestOfInt8ToError)
}
func PutRequestOfInt8ToError(d *RequestOfInt8ToError) {
	pool_of_RequestOfInt8ToError.Put(d)
}

type RequestOfInt8ToFloat32 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToFloat32{}
		},
	}
)

func GetRequestOfInt8ToFloat32() *RequestOfInt8ToFloat32 {
	return pool_of_RequestOfInt8ToFloat32.Get().(*RequestOfInt8ToFloat32)
}
func PutRequestOfInt8ToFloat32(d *RequestOfInt8ToFloat32) {
	pool_of_RequestOfInt8ToFloat32.Put(d)
}

type RequestOfInt8ToFloat64 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToFloat64{}
		},
	}
)

func GetRequestOfInt8ToFloat64() *RequestOfInt8ToFloat64 {
	return pool_of_RequestOfInt8ToFloat64.Get().(*RequestOfInt8ToFloat64)
}
func PutRequestOfInt8ToFloat64(d *RequestOfInt8ToFloat64) {
	pool_of_RequestOfInt8ToFloat64.Put(d)
}

type RequestOfInt8ToInt struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToInt{}
		},
	}
)

func GetRequestOfInt8ToInt() *RequestOfInt8ToInt {
	return pool_of_RequestOfInt8ToInt.Get().(*RequestOfInt8ToInt)
}
func PutRequestOfInt8ToInt(d *RequestOfInt8ToInt) {
	pool_of_RequestOfInt8ToInt.Put(d)
}

type RequestOfInt8ToInt16 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToInt16{}
		},
	}
)

func GetRequestOfInt8ToInt16() *RequestOfInt8ToInt16 {
	return pool_of_RequestOfInt8ToInt16.Get().(*RequestOfInt8ToInt16)
}
func PutRequestOfInt8ToInt16(d *RequestOfInt8ToInt16) {
	pool_of_RequestOfInt8ToInt16.Put(d)
}

type RequestOfInt8ToInt32 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToInt32{}
		},
	}
)

func GetRequestOfInt8ToInt32() *RequestOfInt8ToInt32 {
	return pool_of_RequestOfInt8ToInt32.Get().(*RequestOfInt8ToInt32)
}
func PutRequestOfInt8ToInt32(d *RequestOfInt8ToInt32) {
	pool_of_RequestOfInt8ToInt32.Put(d)
}

type RequestOfInt8ToInt64 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToInt64{}
		},
	}
)

func GetRequestOfInt8ToInt64() *RequestOfInt8ToInt64 {
	return pool_of_RequestOfInt8ToInt64.Get().(*RequestOfInt8ToInt64)
}
func PutRequestOfInt8ToInt64(d *RequestOfInt8ToInt64) {
	pool_of_RequestOfInt8ToInt64.Put(d)
}

type RequestOfInt8ToInt8 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToInt8{}
		},
	}
)

func GetRequestOfInt8ToInt8() *RequestOfInt8ToInt8 {
	return pool_of_RequestOfInt8ToInt8.Get().(*RequestOfInt8ToInt8)
}
func PutRequestOfInt8ToInt8(d *RequestOfInt8ToInt8) {
	pool_of_RequestOfInt8ToInt8.Put(d)
}

type RequestOfInt8ToRune struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToRune{}
		},
	}
)

func GetRequestOfInt8ToRune() *RequestOfInt8ToRune {
	return pool_of_RequestOfInt8ToRune.Get().(*RequestOfInt8ToRune)
}
func PutRequestOfInt8ToRune(d *RequestOfInt8ToRune) {
	pool_of_RequestOfInt8ToRune.Put(d)
}

type RequestOfInt8ToString struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToString{}
		},
	}
)

func GetRequestOfInt8ToString() *RequestOfInt8ToString {
	return pool_of_RequestOfInt8ToString.Get().(*RequestOfInt8ToString)
}
func PutRequestOfInt8ToString(d *RequestOfInt8ToString) {
	pool_of_RequestOfInt8ToString.Put(d)
}

type RequestOfInt8ToUint struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToUint{}
		},
	}
)

func GetRequestOfInt8ToUint() *RequestOfInt8ToUint {
	return pool_of_RequestOfInt8ToUint.Get().(*RequestOfInt8ToUint)
}
func PutRequestOfInt8ToUint(d *RequestOfInt8ToUint) {
	pool_of_RequestOfInt8ToUint.Put(d)
}

type RequestOfInt8ToUint16 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToUint16{}
		},
	}
)

func GetRequestOfInt8ToUint16() *RequestOfInt8ToUint16 {
	return pool_of_RequestOfInt8ToUint16.Get().(*RequestOfInt8ToUint16)
}
func PutRequestOfInt8ToUint16(d *RequestOfInt8ToUint16) {
	pool_of_RequestOfInt8ToUint16.Put(d)
}

type RequestOfInt8ToUint32 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToUint32{}
		},
	}
)

func GetRequestOfInt8ToUint32() *RequestOfInt8ToUint32 {
	return pool_of_RequestOfInt8ToUint32.Get().(*RequestOfInt8ToUint32)
}
func PutRequestOfInt8ToUint32(d *RequestOfInt8ToUint32) {
	pool_of_RequestOfInt8ToUint32.Put(d)
}

type RequestOfInt8ToUint64 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToUint64{}
		},
	}
)

func GetRequestOfInt8ToUint64() *RequestOfInt8ToUint64 {
	return pool_of_RequestOfInt8ToUint64.Get().(*RequestOfInt8ToUint64)
}
func PutRequestOfInt8ToUint64(d *RequestOfInt8ToUint64) {
	pool_of_RequestOfInt8ToUint64.Put(d)
}

type RequestOfInt8ToUint8 struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToUint8{}
		},
	}
)

func GetRequestOfInt8ToUint8() *RequestOfInt8ToUint8 {
	return pool_of_RequestOfInt8ToUint8.Get().(*RequestOfInt8ToUint8)
}
func PutRequestOfInt8ToUint8(d *RequestOfInt8ToUint8) {
	pool_of_RequestOfInt8ToUint8.Put(d)
}

type RequestOfInt8ToUintptr struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToUintptr{}
		},
	}
)

func GetRequestOfInt8ToUintptr() *RequestOfInt8ToUintptr {
	return pool_of_RequestOfInt8ToUintptr.Get().(*RequestOfInt8ToUintptr)
}
func PutRequestOfInt8ToUintptr(d *RequestOfInt8ToUintptr) {
	pool_of_RequestOfInt8ToUintptr.Put(d)
}

type RequestOfInt8ToBytes struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToBytes{}
		},
	}
)

func GetRequestOfInt8ToBytes() *RequestOfInt8ToBytes {
	return pool_of_RequestOfInt8ToBytes.Get().(*RequestOfInt8ToBytes)
}
func PutRequestOfInt8ToBytes(d *RequestOfInt8ToBytes) {
	pool_of_RequestOfInt8ToBytes.Put(d)
}

type RequestOfInt8ToInterface struct {
	Context  context.Context
	Value    int8
	ReturnCh chan<- ReturnOfInt8
}

var (
	pool_of_RequestOfInt8ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfInt8ToInterface{}
		},
	}
)

func GetRequestOfInt8ToInterface() *RequestOfInt8ToInterface {
	return pool_of_RequestOfInt8ToInterface.Get().(*RequestOfInt8ToInterface)
}
func PutRequestOfInt8ToInterface(d *RequestOfInt8ToInterface) {
	pool_of_RequestOfInt8ToInterface.Put(d)
}

type RequestOfRuneToBool struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToBool{}
		},
	}
)

func GetRequestOfRuneToBool() *RequestOfRuneToBool {
	return pool_of_RequestOfRuneToBool.Get().(*RequestOfRuneToBool)
}
func PutRequestOfRuneToBool(d *RequestOfRuneToBool) {
	pool_of_RequestOfRuneToBool.Put(d)
}

type RequestOfRuneToByte struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToByte{}
		},
	}
)

func GetRequestOfRuneToByte() *RequestOfRuneToByte {
	return pool_of_RequestOfRuneToByte.Get().(*RequestOfRuneToByte)
}
func PutRequestOfRuneToByte(d *RequestOfRuneToByte) {
	pool_of_RequestOfRuneToByte.Put(d)
}

type RequestOfRuneToComplex128 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToComplex128{}
		},
	}
)

func GetRequestOfRuneToComplex128() *RequestOfRuneToComplex128 {
	return pool_of_RequestOfRuneToComplex128.Get().(*RequestOfRuneToComplex128)
}
func PutRequestOfRuneToComplex128(d *RequestOfRuneToComplex128) {
	pool_of_RequestOfRuneToComplex128.Put(d)
}

type RequestOfRuneToComplex64 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToComplex64{}
		},
	}
)

func GetRequestOfRuneToComplex64() *RequestOfRuneToComplex64 {
	return pool_of_RequestOfRuneToComplex64.Get().(*RequestOfRuneToComplex64)
}
func PutRequestOfRuneToComplex64(d *RequestOfRuneToComplex64) {
	pool_of_RequestOfRuneToComplex64.Put(d)
}

type RequestOfRuneToError struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToError{}
		},
	}
)

func GetRequestOfRuneToError() *RequestOfRuneToError {
	return pool_of_RequestOfRuneToError.Get().(*RequestOfRuneToError)
}
func PutRequestOfRuneToError(d *RequestOfRuneToError) {
	pool_of_RequestOfRuneToError.Put(d)
}

type RequestOfRuneToFloat32 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToFloat32{}
		},
	}
)

func GetRequestOfRuneToFloat32() *RequestOfRuneToFloat32 {
	return pool_of_RequestOfRuneToFloat32.Get().(*RequestOfRuneToFloat32)
}
func PutRequestOfRuneToFloat32(d *RequestOfRuneToFloat32) {
	pool_of_RequestOfRuneToFloat32.Put(d)
}

type RequestOfRuneToFloat64 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToFloat64{}
		},
	}
)

func GetRequestOfRuneToFloat64() *RequestOfRuneToFloat64 {
	return pool_of_RequestOfRuneToFloat64.Get().(*RequestOfRuneToFloat64)
}
func PutRequestOfRuneToFloat64(d *RequestOfRuneToFloat64) {
	pool_of_RequestOfRuneToFloat64.Put(d)
}

type RequestOfRuneToInt struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToInt{}
		},
	}
)

func GetRequestOfRuneToInt() *RequestOfRuneToInt {
	return pool_of_RequestOfRuneToInt.Get().(*RequestOfRuneToInt)
}
func PutRequestOfRuneToInt(d *RequestOfRuneToInt) {
	pool_of_RequestOfRuneToInt.Put(d)
}

type RequestOfRuneToInt16 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToInt16{}
		},
	}
)

func GetRequestOfRuneToInt16() *RequestOfRuneToInt16 {
	return pool_of_RequestOfRuneToInt16.Get().(*RequestOfRuneToInt16)
}
func PutRequestOfRuneToInt16(d *RequestOfRuneToInt16) {
	pool_of_RequestOfRuneToInt16.Put(d)
}

type RequestOfRuneToInt32 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToInt32{}
		},
	}
)

func GetRequestOfRuneToInt32() *RequestOfRuneToInt32 {
	return pool_of_RequestOfRuneToInt32.Get().(*RequestOfRuneToInt32)
}
func PutRequestOfRuneToInt32(d *RequestOfRuneToInt32) {
	pool_of_RequestOfRuneToInt32.Put(d)
}

type RequestOfRuneToInt64 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToInt64{}
		},
	}
)

func GetRequestOfRuneToInt64() *RequestOfRuneToInt64 {
	return pool_of_RequestOfRuneToInt64.Get().(*RequestOfRuneToInt64)
}
func PutRequestOfRuneToInt64(d *RequestOfRuneToInt64) {
	pool_of_RequestOfRuneToInt64.Put(d)
}

type RequestOfRuneToInt8 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToInt8{}
		},
	}
)

func GetRequestOfRuneToInt8() *RequestOfRuneToInt8 {
	return pool_of_RequestOfRuneToInt8.Get().(*RequestOfRuneToInt8)
}
func PutRequestOfRuneToInt8(d *RequestOfRuneToInt8) {
	pool_of_RequestOfRuneToInt8.Put(d)
}

type RequestOfRuneToRune struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToRune{}
		},
	}
)

func GetRequestOfRuneToRune() *RequestOfRuneToRune {
	return pool_of_RequestOfRuneToRune.Get().(*RequestOfRuneToRune)
}
func PutRequestOfRuneToRune(d *RequestOfRuneToRune) {
	pool_of_RequestOfRuneToRune.Put(d)
}

type RequestOfRuneToString struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToString{}
		},
	}
)

func GetRequestOfRuneToString() *RequestOfRuneToString {
	return pool_of_RequestOfRuneToString.Get().(*RequestOfRuneToString)
}
func PutRequestOfRuneToString(d *RequestOfRuneToString) {
	pool_of_RequestOfRuneToString.Put(d)
}

type RequestOfRuneToUint struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToUint{}
		},
	}
)

func GetRequestOfRuneToUint() *RequestOfRuneToUint {
	return pool_of_RequestOfRuneToUint.Get().(*RequestOfRuneToUint)
}
func PutRequestOfRuneToUint(d *RequestOfRuneToUint) {
	pool_of_RequestOfRuneToUint.Put(d)
}

type RequestOfRuneToUint16 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToUint16{}
		},
	}
)

func GetRequestOfRuneToUint16() *RequestOfRuneToUint16 {
	return pool_of_RequestOfRuneToUint16.Get().(*RequestOfRuneToUint16)
}
func PutRequestOfRuneToUint16(d *RequestOfRuneToUint16) {
	pool_of_RequestOfRuneToUint16.Put(d)
}

type RequestOfRuneToUint32 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToUint32{}
		},
	}
)

func GetRequestOfRuneToUint32() *RequestOfRuneToUint32 {
	return pool_of_RequestOfRuneToUint32.Get().(*RequestOfRuneToUint32)
}
func PutRequestOfRuneToUint32(d *RequestOfRuneToUint32) {
	pool_of_RequestOfRuneToUint32.Put(d)
}

type RequestOfRuneToUint64 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToUint64{}
		},
	}
)

func GetRequestOfRuneToUint64() *RequestOfRuneToUint64 {
	return pool_of_RequestOfRuneToUint64.Get().(*RequestOfRuneToUint64)
}
func PutRequestOfRuneToUint64(d *RequestOfRuneToUint64) {
	pool_of_RequestOfRuneToUint64.Put(d)
}

type RequestOfRuneToUint8 struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToUint8{}
		},
	}
)

func GetRequestOfRuneToUint8() *RequestOfRuneToUint8 {
	return pool_of_RequestOfRuneToUint8.Get().(*RequestOfRuneToUint8)
}
func PutRequestOfRuneToUint8(d *RequestOfRuneToUint8) {
	pool_of_RequestOfRuneToUint8.Put(d)
}

type RequestOfRuneToUintptr struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToUintptr{}
		},
	}
)

func GetRequestOfRuneToUintptr() *RequestOfRuneToUintptr {
	return pool_of_RequestOfRuneToUintptr.Get().(*RequestOfRuneToUintptr)
}
func PutRequestOfRuneToUintptr(d *RequestOfRuneToUintptr) {
	pool_of_RequestOfRuneToUintptr.Put(d)
}

type RequestOfRuneToBytes struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToBytes{}
		},
	}
)

func GetRequestOfRuneToBytes() *RequestOfRuneToBytes {
	return pool_of_RequestOfRuneToBytes.Get().(*RequestOfRuneToBytes)
}
func PutRequestOfRuneToBytes(d *RequestOfRuneToBytes) {
	pool_of_RequestOfRuneToBytes.Put(d)
}

type RequestOfRuneToInterface struct {
	Context  context.Context
	Value    rune
	ReturnCh chan<- ReturnOfRune
}

var (
	pool_of_RequestOfRuneToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfRuneToInterface{}
		},
	}
)

func GetRequestOfRuneToInterface() *RequestOfRuneToInterface {
	return pool_of_RequestOfRuneToInterface.Get().(*RequestOfRuneToInterface)
}
func PutRequestOfRuneToInterface(d *RequestOfRuneToInterface) {
	pool_of_RequestOfRuneToInterface.Put(d)
}

type RequestOfStringToBool struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToBool{}
		},
	}
)

func GetRequestOfStringToBool() *RequestOfStringToBool {
	return pool_of_RequestOfStringToBool.Get().(*RequestOfStringToBool)
}
func PutRequestOfStringToBool(d *RequestOfStringToBool) {
	pool_of_RequestOfStringToBool.Put(d)
}

type RequestOfStringToByte struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToByte{}
		},
	}
)

func GetRequestOfStringToByte() *RequestOfStringToByte {
	return pool_of_RequestOfStringToByte.Get().(*RequestOfStringToByte)
}
func PutRequestOfStringToByte(d *RequestOfStringToByte) {
	pool_of_RequestOfStringToByte.Put(d)
}

type RequestOfStringToComplex128 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToComplex128{}
		},
	}
)

func GetRequestOfStringToComplex128() *RequestOfStringToComplex128 {
	return pool_of_RequestOfStringToComplex128.Get().(*RequestOfStringToComplex128)
}
func PutRequestOfStringToComplex128(d *RequestOfStringToComplex128) {
	pool_of_RequestOfStringToComplex128.Put(d)
}

type RequestOfStringToComplex64 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToComplex64{}
		},
	}
)

func GetRequestOfStringToComplex64() *RequestOfStringToComplex64 {
	return pool_of_RequestOfStringToComplex64.Get().(*RequestOfStringToComplex64)
}
func PutRequestOfStringToComplex64(d *RequestOfStringToComplex64) {
	pool_of_RequestOfStringToComplex64.Put(d)
}

type RequestOfStringToError struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToError{}
		},
	}
)

func GetRequestOfStringToError() *RequestOfStringToError {
	return pool_of_RequestOfStringToError.Get().(*RequestOfStringToError)
}
func PutRequestOfStringToError(d *RequestOfStringToError) {
	pool_of_RequestOfStringToError.Put(d)
}

type RequestOfStringToFloat32 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToFloat32{}
		},
	}
)

func GetRequestOfStringToFloat32() *RequestOfStringToFloat32 {
	return pool_of_RequestOfStringToFloat32.Get().(*RequestOfStringToFloat32)
}
func PutRequestOfStringToFloat32(d *RequestOfStringToFloat32) {
	pool_of_RequestOfStringToFloat32.Put(d)
}

type RequestOfStringToFloat64 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToFloat64{}
		},
	}
)

func GetRequestOfStringToFloat64() *RequestOfStringToFloat64 {
	return pool_of_RequestOfStringToFloat64.Get().(*RequestOfStringToFloat64)
}
func PutRequestOfStringToFloat64(d *RequestOfStringToFloat64) {
	pool_of_RequestOfStringToFloat64.Put(d)
}

type RequestOfStringToInt struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToInt{}
		},
	}
)

func GetRequestOfStringToInt() *RequestOfStringToInt {
	return pool_of_RequestOfStringToInt.Get().(*RequestOfStringToInt)
}
func PutRequestOfStringToInt(d *RequestOfStringToInt) {
	pool_of_RequestOfStringToInt.Put(d)
}

type RequestOfStringToInt16 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToInt16{}
		},
	}
)

func GetRequestOfStringToInt16() *RequestOfStringToInt16 {
	return pool_of_RequestOfStringToInt16.Get().(*RequestOfStringToInt16)
}
func PutRequestOfStringToInt16(d *RequestOfStringToInt16) {
	pool_of_RequestOfStringToInt16.Put(d)
}

type RequestOfStringToInt32 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToInt32{}
		},
	}
)

func GetRequestOfStringToInt32() *RequestOfStringToInt32 {
	return pool_of_RequestOfStringToInt32.Get().(*RequestOfStringToInt32)
}
func PutRequestOfStringToInt32(d *RequestOfStringToInt32) {
	pool_of_RequestOfStringToInt32.Put(d)
}

type RequestOfStringToInt64 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToInt64{}
		},
	}
)

func GetRequestOfStringToInt64() *RequestOfStringToInt64 {
	return pool_of_RequestOfStringToInt64.Get().(*RequestOfStringToInt64)
}
func PutRequestOfStringToInt64(d *RequestOfStringToInt64) {
	pool_of_RequestOfStringToInt64.Put(d)
}

type RequestOfStringToInt8 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToInt8{}
		},
	}
)

func GetRequestOfStringToInt8() *RequestOfStringToInt8 {
	return pool_of_RequestOfStringToInt8.Get().(*RequestOfStringToInt8)
}
func PutRequestOfStringToInt8(d *RequestOfStringToInt8) {
	pool_of_RequestOfStringToInt8.Put(d)
}

type RequestOfStringToRune struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToRune{}
		},
	}
)

func GetRequestOfStringToRune() *RequestOfStringToRune {
	return pool_of_RequestOfStringToRune.Get().(*RequestOfStringToRune)
}
func PutRequestOfStringToRune(d *RequestOfStringToRune) {
	pool_of_RequestOfStringToRune.Put(d)
}

type RequestOfStringToString struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToString{}
		},
	}
)

func GetRequestOfStringToString() *RequestOfStringToString {
	return pool_of_RequestOfStringToString.Get().(*RequestOfStringToString)
}
func PutRequestOfStringToString(d *RequestOfStringToString) {
	pool_of_RequestOfStringToString.Put(d)
}

type RequestOfStringToUint struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToUint{}
		},
	}
)

func GetRequestOfStringToUint() *RequestOfStringToUint {
	return pool_of_RequestOfStringToUint.Get().(*RequestOfStringToUint)
}
func PutRequestOfStringToUint(d *RequestOfStringToUint) {
	pool_of_RequestOfStringToUint.Put(d)
}

type RequestOfStringToUint16 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToUint16{}
		},
	}
)

func GetRequestOfStringToUint16() *RequestOfStringToUint16 {
	return pool_of_RequestOfStringToUint16.Get().(*RequestOfStringToUint16)
}
func PutRequestOfStringToUint16(d *RequestOfStringToUint16) {
	pool_of_RequestOfStringToUint16.Put(d)
}

type RequestOfStringToUint32 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToUint32{}
		},
	}
)

func GetRequestOfStringToUint32() *RequestOfStringToUint32 {
	return pool_of_RequestOfStringToUint32.Get().(*RequestOfStringToUint32)
}
func PutRequestOfStringToUint32(d *RequestOfStringToUint32) {
	pool_of_RequestOfStringToUint32.Put(d)
}

type RequestOfStringToUint64 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToUint64{}
		},
	}
)

func GetRequestOfStringToUint64() *RequestOfStringToUint64 {
	return pool_of_RequestOfStringToUint64.Get().(*RequestOfStringToUint64)
}
func PutRequestOfStringToUint64(d *RequestOfStringToUint64) {
	pool_of_RequestOfStringToUint64.Put(d)
}

type RequestOfStringToUint8 struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToUint8{}
		},
	}
)

func GetRequestOfStringToUint8() *RequestOfStringToUint8 {
	return pool_of_RequestOfStringToUint8.Get().(*RequestOfStringToUint8)
}
func PutRequestOfStringToUint8(d *RequestOfStringToUint8) {
	pool_of_RequestOfStringToUint8.Put(d)
}

type RequestOfStringToUintptr struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToUintptr{}
		},
	}
)

func GetRequestOfStringToUintptr() *RequestOfStringToUintptr {
	return pool_of_RequestOfStringToUintptr.Get().(*RequestOfStringToUintptr)
}
func PutRequestOfStringToUintptr(d *RequestOfStringToUintptr) {
	pool_of_RequestOfStringToUintptr.Put(d)
}

type RequestOfStringToBytes struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToBytes{}
		},
	}
)

func GetRequestOfStringToBytes() *RequestOfStringToBytes {
	return pool_of_RequestOfStringToBytes.Get().(*RequestOfStringToBytes)
}
func PutRequestOfStringToBytes(d *RequestOfStringToBytes) {
	pool_of_RequestOfStringToBytes.Put(d)
}

type RequestOfStringToInterface struct {
	Context  context.Context
	Value    string
	ReturnCh chan<- ReturnOfString
}

var (
	pool_of_RequestOfStringToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfStringToInterface{}
		},
	}
)

func GetRequestOfStringToInterface() *RequestOfStringToInterface {
	return pool_of_RequestOfStringToInterface.Get().(*RequestOfStringToInterface)
}
func PutRequestOfStringToInterface(d *RequestOfStringToInterface) {
	pool_of_RequestOfStringToInterface.Put(d)
}

type RequestOfUintToBool struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToBool{}
		},
	}
)

func GetRequestOfUintToBool() *RequestOfUintToBool {
	return pool_of_RequestOfUintToBool.Get().(*RequestOfUintToBool)
}
func PutRequestOfUintToBool(d *RequestOfUintToBool) {
	pool_of_RequestOfUintToBool.Put(d)
}

type RequestOfUintToByte struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToByte{}
		},
	}
)

func GetRequestOfUintToByte() *RequestOfUintToByte {
	return pool_of_RequestOfUintToByte.Get().(*RequestOfUintToByte)
}
func PutRequestOfUintToByte(d *RequestOfUintToByte) {
	pool_of_RequestOfUintToByte.Put(d)
}

type RequestOfUintToComplex128 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToComplex128{}
		},
	}
)

func GetRequestOfUintToComplex128() *RequestOfUintToComplex128 {
	return pool_of_RequestOfUintToComplex128.Get().(*RequestOfUintToComplex128)
}
func PutRequestOfUintToComplex128(d *RequestOfUintToComplex128) {
	pool_of_RequestOfUintToComplex128.Put(d)
}

type RequestOfUintToComplex64 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToComplex64{}
		},
	}
)

func GetRequestOfUintToComplex64() *RequestOfUintToComplex64 {
	return pool_of_RequestOfUintToComplex64.Get().(*RequestOfUintToComplex64)
}
func PutRequestOfUintToComplex64(d *RequestOfUintToComplex64) {
	pool_of_RequestOfUintToComplex64.Put(d)
}

type RequestOfUintToError struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToError{}
		},
	}
)

func GetRequestOfUintToError() *RequestOfUintToError {
	return pool_of_RequestOfUintToError.Get().(*RequestOfUintToError)
}
func PutRequestOfUintToError(d *RequestOfUintToError) {
	pool_of_RequestOfUintToError.Put(d)
}

type RequestOfUintToFloat32 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToFloat32{}
		},
	}
)

func GetRequestOfUintToFloat32() *RequestOfUintToFloat32 {
	return pool_of_RequestOfUintToFloat32.Get().(*RequestOfUintToFloat32)
}
func PutRequestOfUintToFloat32(d *RequestOfUintToFloat32) {
	pool_of_RequestOfUintToFloat32.Put(d)
}

type RequestOfUintToFloat64 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToFloat64{}
		},
	}
)

func GetRequestOfUintToFloat64() *RequestOfUintToFloat64 {
	return pool_of_RequestOfUintToFloat64.Get().(*RequestOfUintToFloat64)
}
func PutRequestOfUintToFloat64(d *RequestOfUintToFloat64) {
	pool_of_RequestOfUintToFloat64.Put(d)
}

type RequestOfUintToInt struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToInt{}
		},
	}
)

func GetRequestOfUintToInt() *RequestOfUintToInt {
	return pool_of_RequestOfUintToInt.Get().(*RequestOfUintToInt)
}
func PutRequestOfUintToInt(d *RequestOfUintToInt) {
	pool_of_RequestOfUintToInt.Put(d)
}

type RequestOfUintToInt16 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToInt16{}
		},
	}
)

func GetRequestOfUintToInt16() *RequestOfUintToInt16 {
	return pool_of_RequestOfUintToInt16.Get().(*RequestOfUintToInt16)
}
func PutRequestOfUintToInt16(d *RequestOfUintToInt16) {
	pool_of_RequestOfUintToInt16.Put(d)
}

type RequestOfUintToInt32 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToInt32{}
		},
	}
)

func GetRequestOfUintToInt32() *RequestOfUintToInt32 {
	return pool_of_RequestOfUintToInt32.Get().(*RequestOfUintToInt32)
}
func PutRequestOfUintToInt32(d *RequestOfUintToInt32) {
	pool_of_RequestOfUintToInt32.Put(d)
}

type RequestOfUintToInt64 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToInt64{}
		},
	}
)

func GetRequestOfUintToInt64() *RequestOfUintToInt64 {
	return pool_of_RequestOfUintToInt64.Get().(*RequestOfUintToInt64)
}
func PutRequestOfUintToInt64(d *RequestOfUintToInt64) {
	pool_of_RequestOfUintToInt64.Put(d)
}

type RequestOfUintToInt8 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToInt8{}
		},
	}
)

func GetRequestOfUintToInt8() *RequestOfUintToInt8 {
	return pool_of_RequestOfUintToInt8.Get().(*RequestOfUintToInt8)
}
func PutRequestOfUintToInt8(d *RequestOfUintToInt8) {
	pool_of_RequestOfUintToInt8.Put(d)
}

type RequestOfUintToRune struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToRune{}
		},
	}
)

func GetRequestOfUintToRune() *RequestOfUintToRune {
	return pool_of_RequestOfUintToRune.Get().(*RequestOfUintToRune)
}
func PutRequestOfUintToRune(d *RequestOfUintToRune) {
	pool_of_RequestOfUintToRune.Put(d)
}

type RequestOfUintToString struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToString{}
		},
	}
)

func GetRequestOfUintToString() *RequestOfUintToString {
	return pool_of_RequestOfUintToString.Get().(*RequestOfUintToString)
}
func PutRequestOfUintToString(d *RequestOfUintToString) {
	pool_of_RequestOfUintToString.Put(d)
}

type RequestOfUintToUint struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToUint{}
		},
	}
)

func GetRequestOfUintToUint() *RequestOfUintToUint {
	return pool_of_RequestOfUintToUint.Get().(*RequestOfUintToUint)
}
func PutRequestOfUintToUint(d *RequestOfUintToUint) {
	pool_of_RequestOfUintToUint.Put(d)
}

type RequestOfUintToUint16 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToUint16{}
		},
	}
)

func GetRequestOfUintToUint16() *RequestOfUintToUint16 {
	return pool_of_RequestOfUintToUint16.Get().(*RequestOfUintToUint16)
}
func PutRequestOfUintToUint16(d *RequestOfUintToUint16) {
	pool_of_RequestOfUintToUint16.Put(d)
}

type RequestOfUintToUint32 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToUint32{}
		},
	}
)

func GetRequestOfUintToUint32() *RequestOfUintToUint32 {
	return pool_of_RequestOfUintToUint32.Get().(*RequestOfUintToUint32)
}
func PutRequestOfUintToUint32(d *RequestOfUintToUint32) {
	pool_of_RequestOfUintToUint32.Put(d)
}

type RequestOfUintToUint64 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToUint64{}
		},
	}
)

func GetRequestOfUintToUint64() *RequestOfUintToUint64 {
	return pool_of_RequestOfUintToUint64.Get().(*RequestOfUintToUint64)
}
func PutRequestOfUintToUint64(d *RequestOfUintToUint64) {
	pool_of_RequestOfUintToUint64.Put(d)
}

type RequestOfUintToUint8 struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToUint8{}
		},
	}
)

func GetRequestOfUintToUint8() *RequestOfUintToUint8 {
	return pool_of_RequestOfUintToUint8.Get().(*RequestOfUintToUint8)
}
func PutRequestOfUintToUint8(d *RequestOfUintToUint8) {
	pool_of_RequestOfUintToUint8.Put(d)
}

type RequestOfUintToUintptr struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToUintptr{}
		},
	}
)

func GetRequestOfUintToUintptr() *RequestOfUintToUintptr {
	return pool_of_RequestOfUintToUintptr.Get().(*RequestOfUintToUintptr)
}
func PutRequestOfUintToUintptr(d *RequestOfUintToUintptr) {
	pool_of_RequestOfUintToUintptr.Put(d)
}

type RequestOfUintToBytes struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToBytes{}
		},
	}
)

func GetRequestOfUintToBytes() *RequestOfUintToBytes {
	return pool_of_RequestOfUintToBytes.Get().(*RequestOfUintToBytes)
}
func PutRequestOfUintToBytes(d *RequestOfUintToBytes) {
	pool_of_RequestOfUintToBytes.Put(d)
}

type RequestOfUintToInterface struct {
	Context  context.Context
	Value    uint
	ReturnCh chan<- ReturnOfUint
}

var (
	pool_of_RequestOfUintToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintToInterface{}
		},
	}
)

func GetRequestOfUintToInterface() *RequestOfUintToInterface {
	return pool_of_RequestOfUintToInterface.Get().(*RequestOfUintToInterface)
}
func PutRequestOfUintToInterface(d *RequestOfUintToInterface) {
	pool_of_RequestOfUintToInterface.Put(d)
}

type RequestOfUint16ToBool struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToBool{}
		},
	}
)

func GetRequestOfUint16ToBool() *RequestOfUint16ToBool {
	return pool_of_RequestOfUint16ToBool.Get().(*RequestOfUint16ToBool)
}
func PutRequestOfUint16ToBool(d *RequestOfUint16ToBool) {
	pool_of_RequestOfUint16ToBool.Put(d)
}

type RequestOfUint16ToByte struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToByte{}
		},
	}
)

func GetRequestOfUint16ToByte() *RequestOfUint16ToByte {
	return pool_of_RequestOfUint16ToByte.Get().(*RequestOfUint16ToByte)
}
func PutRequestOfUint16ToByte(d *RequestOfUint16ToByte) {
	pool_of_RequestOfUint16ToByte.Put(d)
}

type RequestOfUint16ToComplex128 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToComplex128{}
		},
	}
)

func GetRequestOfUint16ToComplex128() *RequestOfUint16ToComplex128 {
	return pool_of_RequestOfUint16ToComplex128.Get().(*RequestOfUint16ToComplex128)
}
func PutRequestOfUint16ToComplex128(d *RequestOfUint16ToComplex128) {
	pool_of_RequestOfUint16ToComplex128.Put(d)
}

type RequestOfUint16ToComplex64 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToComplex64{}
		},
	}
)

func GetRequestOfUint16ToComplex64() *RequestOfUint16ToComplex64 {
	return pool_of_RequestOfUint16ToComplex64.Get().(*RequestOfUint16ToComplex64)
}
func PutRequestOfUint16ToComplex64(d *RequestOfUint16ToComplex64) {
	pool_of_RequestOfUint16ToComplex64.Put(d)
}

type RequestOfUint16ToError struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToError{}
		},
	}
)

func GetRequestOfUint16ToError() *RequestOfUint16ToError {
	return pool_of_RequestOfUint16ToError.Get().(*RequestOfUint16ToError)
}
func PutRequestOfUint16ToError(d *RequestOfUint16ToError) {
	pool_of_RequestOfUint16ToError.Put(d)
}

type RequestOfUint16ToFloat32 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToFloat32{}
		},
	}
)

func GetRequestOfUint16ToFloat32() *RequestOfUint16ToFloat32 {
	return pool_of_RequestOfUint16ToFloat32.Get().(*RequestOfUint16ToFloat32)
}
func PutRequestOfUint16ToFloat32(d *RequestOfUint16ToFloat32) {
	pool_of_RequestOfUint16ToFloat32.Put(d)
}

type RequestOfUint16ToFloat64 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToFloat64{}
		},
	}
)

func GetRequestOfUint16ToFloat64() *RequestOfUint16ToFloat64 {
	return pool_of_RequestOfUint16ToFloat64.Get().(*RequestOfUint16ToFloat64)
}
func PutRequestOfUint16ToFloat64(d *RequestOfUint16ToFloat64) {
	pool_of_RequestOfUint16ToFloat64.Put(d)
}

type RequestOfUint16ToInt struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToInt{}
		},
	}
)

func GetRequestOfUint16ToInt() *RequestOfUint16ToInt {
	return pool_of_RequestOfUint16ToInt.Get().(*RequestOfUint16ToInt)
}
func PutRequestOfUint16ToInt(d *RequestOfUint16ToInt) {
	pool_of_RequestOfUint16ToInt.Put(d)
}

type RequestOfUint16ToInt16 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToInt16{}
		},
	}
)

func GetRequestOfUint16ToInt16() *RequestOfUint16ToInt16 {
	return pool_of_RequestOfUint16ToInt16.Get().(*RequestOfUint16ToInt16)
}
func PutRequestOfUint16ToInt16(d *RequestOfUint16ToInt16) {
	pool_of_RequestOfUint16ToInt16.Put(d)
}

type RequestOfUint16ToInt32 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToInt32{}
		},
	}
)

func GetRequestOfUint16ToInt32() *RequestOfUint16ToInt32 {
	return pool_of_RequestOfUint16ToInt32.Get().(*RequestOfUint16ToInt32)
}
func PutRequestOfUint16ToInt32(d *RequestOfUint16ToInt32) {
	pool_of_RequestOfUint16ToInt32.Put(d)
}

type RequestOfUint16ToInt64 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToInt64{}
		},
	}
)

func GetRequestOfUint16ToInt64() *RequestOfUint16ToInt64 {
	return pool_of_RequestOfUint16ToInt64.Get().(*RequestOfUint16ToInt64)
}
func PutRequestOfUint16ToInt64(d *RequestOfUint16ToInt64) {
	pool_of_RequestOfUint16ToInt64.Put(d)
}

type RequestOfUint16ToInt8 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToInt8{}
		},
	}
)

func GetRequestOfUint16ToInt8() *RequestOfUint16ToInt8 {
	return pool_of_RequestOfUint16ToInt8.Get().(*RequestOfUint16ToInt8)
}
func PutRequestOfUint16ToInt8(d *RequestOfUint16ToInt8) {
	pool_of_RequestOfUint16ToInt8.Put(d)
}

type RequestOfUint16ToRune struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToRune{}
		},
	}
)

func GetRequestOfUint16ToRune() *RequestOfUint16ToRune {
	return pool_of_RequestOfUint16ToRune.Get().(*RequestOfUint16ToRune)
}
func PutRequestOfUint16ToRune(d *RequestOfUint16ToRune) {
	pool_of_RequestOfUint16ToRune.Put(d)
}

type RequestOfUint16ToString struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToString{}
		},
	}
)

func GetRequestOfUint16ToString() *RequestOfUint16ToString {
	return pool_of_RequestOfUint16ToString.Get().(*RequestOfUint16ToString)
}
func PutRequestOfUint16ToString(d *RequestOfUint16ToString) {
	pool_of_RequestOfUint16ToString.Put(d)
}

type RequestOfUint16ToUint struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToUint{}
		},
	}
)

func GetRequestOfUint16ToUint() *RequestOfUint16ToUint {
	return pool_of_RequestOfUint16ToUint.Get().(*RequestOfUint16ToUint)
}
func PutRequestOfUint16ToUint(d *RequestOfUint16ToUint) {
	pool_of_RequestOfUint16ToUint.Put(d)
}

type RequestOfUint16ToUint16 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToUint16{}
		},
	}
)

func GetRequestOfUint16ToUint16() *RequestOfUint16ToUint16 {
	return pool_of_RequestOfUint16ToUint16.Get().(*RequestOfUint16ToUint16)
}
func PutRequestOfUint16ToUint16(d *RequestOfUint16ToUint16) {
	pool_of_RequestOfUint16ToUint16.Put(d)
}

type RequestOfUint16ToUint32 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToUint32{}
		},
	}
)

func GetRequestOfUint16ToUint32() *RequestOfUint16ToUint32 {
	return pool_of_RequestOfUint16ToUint32.Get().(*RequestOfUint16ToUint32)
}
func PutRequestOfUint16ToUint32(d *RequestOfUint16ToUint32) {
	pool_of_RequestOfUint16ToUint32.Put(d)
}

type RequestOfUint16ToUint64 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToUint64{}
		},
	}
)

func GetRequestOfUint16ToUint64() *RequestOfUint16ToUint64 {
	return pool_of_RequestOfUint16ToUint64.Get().(*RequestOfUint16ToUint64)
}
func PutRequestOfUint16ToUint64(d *RequestOfUint16ToUint64) {
	pool_of_RequestOfUint16ToUint64.Put(d)
}

type RequestOfUint16ToUint8 struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToUint8{}
		},
	}
)

func GetRequestOfUint16ToUint8() *RequestOfUint16ToUint8 {
	return pool_of_RequestOfUint16ToUint8.Get().(*RequestOfUint16ToUint8)
}
func PutRequestOfUint16ToUint8(d *RequestOfUint16ToUint8) {
	pool_of_RequestOfUint16ToUint8.Put(d)
}

type RequestOfUint16ToUintptr struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToUintptr{}
		},
	}
)

func GetRequestOfUint16ToUintptr() *RequestOfUint16ToUintptr {
	return pool_of_RequestOfUint16ToUintptr.Get().(*RequestOfUint16ToUintptr)
}
func PutRequestOfUint16ToUintptr(d *RequestOfUint16ToUintptr) {
	pool_of_RequestOfUint16ToUintptr.Put(d)
}

type RequestOfUint16ToBytes struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToBytes{}
		},
	}
)

func GetRequestOfUint16ToBytes() *RequestOfUint16ToBytes {
	return pool_of_RequestOfUint16ToBytes.Get().(*RequestOfUint16ToBytes)
}
func PutRequestOfUint16ToBytes(d *RequestOfUint16ToBytes) {
	pool_of_RequestOfUint16ToBytes.Put(d)
}

type RequestOfUint16ToInterface struct {
	Context  context.Context
	Value    uint16
	ReturnCh chan<- ReturnOfUint16
}

var (
	pool_of_RequestOfUint16ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint16ToInterface{}
		},
	}
)

func GetRequestOfUint16ToInterface() *RequestOfUint16ToInterface {
	return pool_of_RequestOfUint16ToInterface.Get().(*RequestOfUint16ToInterface)
}
func PutRequestOfUint16ToInterface(d *RequestOfUint16ToInterface) {
	pool_of_RequestOfUint16ToInterface.Put(d)
}

type RequestOfUint32ToBool struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToBool{}
		},
	}
)

func GetRequestOfUint32ToBool() *RequestOfUint32ToBool {
	return pool_of_RequestOfUint32ToBool.Get().(*RequestOfUint32ToBool)
}
func PutRequestOfUint32ToBool(d *RequestOfUint32ToBool) {
	pool_of_RequestOfUint32ToBool.Put(d)
}

type RequestOfUint32ToByte struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToByte{}
		},
	}
)

func GetRequestOfUint32ToByte() *RequestOfUint32ToByte {
	return pool_of_RequestOfUint32ToByte.Get().(*RequestOfUint32ToByte)
}
func PutRequestOfUint32ToByte(d *RequestOfUint32ToByte) {
	pool_of_RequestOfUint32ToByte.Put(d)
}

type RequestOfUint32ToComplex128 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToComplex128{}
		},
	}
)

func GetRequestOfUint32ToComplex128() *RequestOfUint32ToComplex128 {
	return pool_of_RequestOfUint32ToComplex128.Get().(*RequestOfUint32ToComplex128)
}
func PutRequestOfUint32ToComplex128(d *RequestOfUint32ToComplex128) {
	pool_of_RequestOfUint32ToComplex128.Put(d)
}

type RequestOfUint32ToComplex64 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToComplex64{}
		},
	}
)

func GetRequestOfUint32ToComplex64() *RequestOfUint32ToComplex64 {
	return pool_of_RequestOfUint32ToComplex64.Get().(*RequestOfUint32ToComplex64)
}
func PutRequestOfUint32ToComplex64(d *RequestOfUint32ToComplex64) {
	pool_of_RequestOfUint32ToComplex64.Put(d)
}

type RequestOfUint32ToError struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToError{}
		},
	}
)

func GetRequestOfUint32ToError() *RequestOfUint32ToError {
	return pool_of_RequestOfUint32ToError.Get().(*RequestOfUint32ToError)
}
func PutRequestOfUint32ToError(d *RequestOfUint32ToError) {
	pool_of_RequestOfUint32ToError.Put(d)
}

type RequestOfUint32ToFloat32 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToFloat32{}
		},
	}
)

func GetRequestOfUint32ToFloat32() *RequestOfUint32ToFloat32 {
	return pool_of_RequestOfUint32ToFloat32.Get().(*RequestOfUint32ToFloat32)
}
func PutRequestOfUint32ToFloat32(d *RequestOfUint32ToFloat32) {
	pool_of_RequestOfUint32ToFloat32.Put(d)
}

type RequestOfUint32ToFloat64 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToFloat64{}
		},
	}
)

func GetRequestOfUint32ToFloat64() *RequestOfUint32ToFloat64 {
	return pool_of_RequestOfUint32ToFloat64.Get().(*RequestOfUint32ToFloat64)
}
func PutRequestOfUint32ToFloat64(d *RequestOfUint32ToFloat64) {
	pool_of_RequestOfUint32ToFloat64.Put(d)
}

type RequestOfUint32ToInt struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToInt{}
		},
	}
)

func GetRequestOfUint32ToInt() *RequestOfUint32ToInt {
	return pool_of_RequestOfUint32ToInt.Get().(*RequestOfUint32ToInt)
}
func PutRequestOfUint32ToInt(d *RequestOfUint32ToInt) {
	pool_of_RequestOfUint32ToInt.Put(d)
}

type RequestOfUint32ToInt16 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToInt16{}
		},
	}
)

func GetRequestOfUint32ToInt16() *RequestOfUint32ToInt16 {
	return pool_of_RequestOfUint32ToInt16.Get().(*RequestOfUint32ToInt16)
}
func PutRequestOfUint32ToInt16(d *RequestOfUint32ToInt16) {
	pool_of_RequestOfUint32ToInt16.Put(d)
}

type RequestOfUint32ToInt32 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToInt32{}
		},
	}
)

func GetRequestOfUint32ToInt32() *RequestOfUint32ToInt32 {
	return pool_of_RequestOfUint32ToInt32.Get().(*RequestOfUint32ToInt32)
}
func PutRequestOfUint32ToInt32(d *RequestOfUint32ToInt32) {
	pool_of_RequestOfUint32ToInt32.Put(d)
}

type RequestOfUint32ToInt64 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToInt64{}
		},
	}
)

func GetRequestOfUint32ToInt64() *RequestOfUint32ToInt64 {
	return pool_of_RequestOfUint32ToInt64.Get().(*RequestOfUint32ToInt64)
}
func PutRequestOfUint32ToInt64(d *RequestOfUint32ToInt64) {
	pool_of_RequestOfUint32ToInt64.Put(d)
}

type RequestOfUint32ToInt8 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToInt8{}
		},
	}
)

func GetRequestOfUint32ToInt8() *RequestOfUint32ToInt8 {
	return pool_of_RequestOfUint32ToInt8.Get().(*RequestOfUint32ToInt8)
}
func PutRequestOfUint32ToInt8(d *RequestOfUint32ToInt8) {
	pool_of_RequestOfUint32ToInt8.Put(d)
}

type RequestOfUint32ToRune struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToRune{}
		},
	}
)

func GetRequestOfUint32ToRune() *RequestOfUint32ToRune {
	return pool_of_RequestOfUint32ToRune.Get().(*RequestOfUint32ToRune)
}
func PutRequestOfUint32ToRune(d *RequestOfUint32ToRune) {
	pool_of_RequestOfUint32ToRune.Put(d)
}

type RequestOfUint32ToString struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToString{}
		},
	}
)

func GetRequestOfUint32ToString() *RequestOfUint32ToString {
	return pool_of_RequestOfUint32ToString.Get().(*RequestOfUint32ToString)
}
func PutRequestOfUint32ToString(d *RequestOfUint32ToString) {
	pool_of_RequestOfUint32ToString.Put(d)
}

type RequestOfUint32ToUint struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToUint{}
		},
	}
)

func GetRequestOfUint32ToUint() *RequestOfUint32ToUint {
	return pool_of_RequestOfUint32ToUint.Get().(*RequestOfUint32ToUint)
}
func PutRequestOfUint32ToUint(d *RequestOfUint32ToUint) {
	pool_of_RequestOfUint32ToUint.Put(d)
}

type RequestOfUint32ToUint16 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToUint16{}
		},
	}
)

func GetRequestOfUint32ToUint16() *RequestOfUint32ToUint16 {
	return pool_of_RequestOfUint32ToUint16.Get().(*RequestOfUint32ToUint16)
}
func PutRequestOfUint32ToUint16(d *RequestOfUint32ToUint16) {
	pool_of_RequestOfUint32ToUint16.Put(d)
}

type RequestOfUint32ToUint32 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToUint32{}
		},
	}
)

func GetRequestOfUint32ToUint32() *RequestOfUint32ToUint32 {
	return pool_of_RequestOfUint32ToUint32.Get().(*RequestOfUint32ToUint32)
}
func PutRequestOfUint32ToUint32(d *RequestOfUint32ToUint32) {
	pool_of_RequestOfUint32ToUint32.Put(d)
}

type RequestOfUint32ToUint64 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToUint64{}
		},
	}
)

func GetRequestOfUint32ToUint64() *RequestOfUint32ToUint64 {
	return pool_of_RequestOfUint32ToUint64.Get().(*RequestOfUint32ToUint64)
}
func PutRequestOfUint32ToUint64(d *RequestOfUint32ToUint64) {
	pool_of_RequestOfUint32ToUint64.Put(d)
}

type RequestOfUint32ToUint8 struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToUint8{}
		},
	}
)

func GetRequestOfUint32ToUint8() *RequestOfUint32ToUint8 {
	return pool_of_RequestOfUint32ToUint8.Get().(*RequestOfUint32ToUint8)
}
func PutRequestOfUint32ToUint8(d *RequestOfUint32ToUint8) {
	pool_of_RequestOfUint32ToUint8.Put(d)
}

type RequestOfUint32ToUintptr struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToUintptr{}
		},
	}
)

func GetRequestOfUint32ToUintptr() *RequestOfUint32ToUintptr {
	return pool_of_RequestOfUint32ToUintptr.Get().(*RequestOfUint32ToUintptr)
}
func PutRequestOfUint32ToUintptr(d *RequestOfUint32ToUintptr) {
	pool_of_RequestOfUint32ToUintptr.Put(d)
}

type RequestOfUint32ToBytes struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToBytes{}
		},
	}
)

func GetRequestOfUint32ToBytes() *RequestOfUint32ToBytes {
	return pool_of_RequestOfUint32ToBytes.Get().(*RequestOfUint32ToBytes)
}
func PutRequestOfUint32ToBytes(d *RequestOfUint32ToBytes) {
	pool_of_RequestOfUint32ToBytes.Put(d)
}

type RequestOfUint32ToInterface struct {
	Context  context.Context
	Value    uint32
	ReturnCh chan<- ReturnOfUint32
}

var (
	pool_of_RequestOfUint32ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint32ToInterface{}
		},
	}
)

func GetRequestOfUint32ToInterface() *RequestOfUint32ToInterface {
	return pool_of_RequestOfUint32ToInterface.Get().(*RequestOfUint32ToInterface)
}
func PutRequestOfUint32ToInterface(d *RequestOfUint32ToInterface) {
	pool_of_RequestOfUint32ToInterface.Put(d)
}

type RequestOfUint64ToBool struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToBool{}
		},
	}
)

func GetRequestOfUint64ToBool() *RequestOfUint64ToBool {
	return pool_of_RequestOfUint64ToBool.Get().(*RequestOfUint64ToBool)
}
func PutRequestOfUint64ToBool(d *RequestOfUint64ToBool) {
	pool_of_RequestOfUint64ToBool.Put(d)
}

type RequestOfUint64ToByte struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToByte{}
		},
	}
)

func GetRequestOfUint64ToByte() *RequestOfUint64ToByte {
	return pool_of_RequestOfUint64ToByte.Get().(*RequestOfUint64ToByte)
}
func PutRequestOfUint64ToByte(d *RequestOfUint64ToByte) {
	pool_of_RequestOfUint64ToByte.Put(d)
}

type RequestOfUint64ToComplex128 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToComplex128{}
		},
	}
)

func GetRequestOfUint64ToComplex128() *RequestOfUint64ToComplex128 {
	return pool_of_RequestOfUint64ToComplex128.Get().(*RequestOfUint64ToComplex128)
}
func PutRequestOfUint64ToComplex128(d *RequestOfUint64ToComplex128) {
	pool_of_RequestOfUint64ToComplex128.Put(d)
}

type RequestOfUint64ToComplex64 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToComplex64{}
		},
	}
)

func GetRequestOfUint64ToComplex64() *RequestOfUint64ToComplex64 {
	return pool_of_RequestOfUint64ToComplex64.Get().(*RequestOfUint64ToComplex64)
}
func PutRequestOfUint64ToComplex64(d *RequestOfUint64ToComplex64) {
	pool_of_RequestOfUint64ToComplex64.Put(d)
}

type RequestOfUint64ToError struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToError{}
		},
	}
)

func GetRequestOfUint64ToError() *RequestOfUint64ToError {
	return pool_of_RequestOfUint64ToError.Get().(*RequestOfUint64ToError)
}
func PutRequestOfUint64ToError(d *RequestOfUint64ToError) {
	pool_of_RequestOfUint64ToError.Put(d)
}

type RequestOfUint64ToFloat32 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToFloat32{}
		},
	}
)

func GetRequestOfUint64ToFloat32() *RequestOfUint64ToFloat32 {
	return pool_of_RequestOfUint64ToFloat32.Get().(*RequestOfUint64ToFloat32)
}
func PutRequestOfUint64ToFloat32(d *RequestOfUint64ToFloat32) {
	pool_of_RequestOfUint64ToFloat32.Put(d)
}

type RequestOfUint64ToFloat64 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToFloat64{}
		},
	}
)

func GetRequestOfUint64ToFloat64() *RequestOfUint64ToFloat64 {
	return pool_of_RequestOfUint64ToFloat64.Get().(*RequestOfUint64ToFloat64)
}
func PutRequestOfUint64ToFloat64(d *RequestOfUint64ToFloat64) {
	pool_of_RequestOfUint64ToFloat64.Put(d)
}

type RequestOfUint64ToInt struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToInt{}
		},
	}
)

func GetRequestOfUint64ToInt() *RequestOfUint64ToInt {
	return pool_of_RequestOfUint64ToInt.Get().(*RequestOfUint64ToInt)
}
func PutRequestOfUint64ToInt(d *RequestOfUint64ToInt) {
	pool_of_RequestOfUint64ToInt.Put(d)
}

type RequestOfUint64ToInt16 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToInt16{}
		},
	}
)

func GetRequestOfUint64ToInt16() *RequestOfUint64ToInt16 {
	return pool_of_RequestOfUint64ToInt16.Get().(*RequestOfUint64ToInt16)
}
func PutRequestOfUint64ToInt16(d *RequestOfUint64ToInt16) {
	pool_of_RequestOfUint64ToInt16.Put(d)
}

type RequestOfUint64ToInt32 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToInt32{}
		},
	}
)

func GetRequestOfUint64ToInt32() *RequestOfUint64ToInt32 {
	return pool_of_RequestOfUint64ToInt32.Get().(*RequestOfUint64ToInt32)
}
func PutRequestOfUint64ToInt32(d *RequestOfUint64ToInt32) {
	pool_of_RequestOfUint64ToInt32.Put(d)
}

type RequestOfUint64ToInt64 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToInt64{}
		},
	}
)

func GetRequestOfUint64ToInt64() *RequestOfUint64ToInt64 {
	return pool_of_RequestOfUint64ToInt64.Get().(*RequestOfUint64ToInt64)
}
func PutRequestOfUint64ToInt64(d *RequestOfUint64ToInt64) {
	pool_of_RequestOfUint64ToInt64.Put(d)
}

type RequestOfUint64ToInt8 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToInt8{}
		},
	}
)

func GetRequestOfUint64ToInt8() *RequestOfUint64ToInt8 {
	return pool_of_RequestOfUint64ToInt8.Get().(*RequestOfUint64ToInt8)
}
func PutRequestOfUint64ToInt8(d *RequestOfUint64ToInt8) {
	pool_of_RequestOfUint64ToInt8.Put(d)
}

type RequestOfUint64ToRune struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToRune{}
		},
	}
)

func GetRequestOfUint64ToRune() *RequestOfUint64ToRune {
	return pool_of_RequestOfUint64ToRune.Get().(*RequestOfUint64ToRune)
}
func PutRequestOfUint64ToRune(d *RequestOfUint64ToRune) {
	pool_of_RequestOfUint64ToRune.Put(d)
}

type RequestOfUint64ToString struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToString{}
		},
	}
)

func GetRequestOfUint64ToString() *RequestOfUint64ToString {
	return pool_of_RequestOfUint64ToString.Get().(*RequestOfUint64ToString)
}
func PutRequestOfUint64ToString(d *RequestOfUint64ToString) {
	pool_of_RequestOfUint64ToString.Put(d)
}

type RequestOfUint64ToUint struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToUint{}
		},
	}
)

func GetRequestOfUint64ToUint() *RequestOfUint64ToUint {
	return pool_of_RequestOfUint64ToUint.Get().(*RequestOfUint64ToUint)
}
func PutRequestOfUint64ToUint(d *RequestOfUint64ToUint) {
	pool_of_RequestOfUint64ToUint.Put(d)
}

type RequestOfUint64ToUint16 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToUint16{}
		},
	}
)

func GetRequestOfUint64ToUint16() *RequestOfUint64ToUint16 {
	return pool_of_RequestOfUint64ToUint16.Get().(*RequestOfUint64ToUint16)
}
func PutRequestOfUint64ToUint16(d *RequestOfUint64ToUint16) {
	pool_of_RequestOfUint64ToUint16.Put(d)
}

type RequestOfUint64ToUint32 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToUint32{}
		},
	}
)

func GetRequestOfUint64ToUint32() *RequestOfUint64ToUint32 {
	return pool_of_RequestOfUint64ToUint32.Get().(*RequestOfUint64ToUint32)
}
func PutRequestOfUint64ToUint32(d *RequestOfUint64ToUint32) {
	pool_of_RequestOfUint64ToUint32.Put(d)
}

type RequestOfUint64ToUint64 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToUint64{}
		},
	}
)

func GetRequestOfUint64ToUint64() *RequestOfUint64ToUint64 {
	return pool_of_RequestOfUint64ToUint64.Get().(*RequestOfUint64ToUint64)
}
func PutRequestOfUint64ToUint64(d *RequestOfUint64ToUint64) {
	pool_of_RequestOfUint64ToUint64.Put(d)
}

type RequestOfUint64ToUint8 struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToUint8{}
		},
	}
)

func GetRequestOfUint64ToUint8() *RequestOfUint64ToUint8 {
	return pool_of_RequestOfUint64ToUint8.Get().(*RequestOfUint64ToUint8)
}
func PutRequestOfUint64ToUint8(d *RequestOfUint64ToUint8) {
	pool_of_RequestOfUint64ToUint8.Put(d)
}

type RequestOfUint64ToUintptr struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToUintptr{}
		},
	}
)

func GetRequestOfUint64ToUintptr() *RequestOfUint64ToUintptr {
	return pool_of_RequestOfUint64ToUintptr.Get().(*RequestOfUint64ToUintptr)
}
func PutRequestOfUint64ToUintptr(d *RequestOfUint64ToUintptr) {
	pool_of_RequestOfUint64ToUintptr.Put(d)
}

type RequestOfUint64ToBytes struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToBytes{}
		},
	}
)

func GetRequestOfUint64ToBytes() *RequestOfUint64ToBytes {
	return pool_of_RequestOfUint64ToBytes.Get().(*RequestOfUint64ToBytes)
}
func PutRequestOfUint64ToBytes(d *RequestOfUint64ToBytes) {
	pool_of_RequestOfUint64ToBytes.Put(d)
}

type RequestOfUint64ToInterface struct {
	Context  context.Context
	Value    uint64
	ReturnCh chan<- ReturnOfUint64
}

var (
	pool_of_RequestOfUint64ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint64ToInterface{}
		},
	}
)

func GetRequestOfUint64ToInterface() *RequestOfUint64ToInterface {
	return pool_of_RequestOfUint64ToInterface.Get().(*RequestOfUint64ToInterface)
}
func PutRequestOfUint64ToInterface(d *RequestOfUint64ToInterface) {
	pool_of_RequestOfUint64ToInterface.Put(d)
}

type RequestOfUint8ToBool struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToBool{}
		},
	}
)

func GetRequestOfUint8ToBool() *RequestOfUint8ToBool {
	return pool_of_RequestOfUint8ToBool.Get().(*RequestOfUint8ToBool)
}
func PutRequestOfUint8ToBool(d *RequestOfUint8ToBool) {
	pool_of_RequestOfUint8ToBool.Put(d)
}

type RequestOfUint8ToByte struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToByte{}
		},
	}
)

func GetRequestOfUint8ToByte() *RequestOfUint8ToByte {
	return pool_of_RequestOfUint8ToByte.Get().(*RequestOfUint8ToByte)
}
func PutRequestOfUint8ToByte(d *RequestOfUint8ToByte) {
	pool_of_RequestOfUint8ToByte.Put(d)
}

type RequestOfUint8ToComplex128 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToComplex128{}
		},
	}
)

func GetRequestOfUint8ToComplex128() *RequestOfUint8ToComplex128 {
	return pool_of_RequestOfUint8ToComplex128.Get().(*RequestOfUint8ToComplex128)
}
func PutRequestOfUint8ToComplex128(d *RequestOfUint8ToComplex128) {
	pool_of_RequestOfUint8ToComplex128.Put(d)
}

type RequestOfUint8ToComplex64 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToComplex64{}
		},
	}
)

func GetRequestOfUint8ToComplex64() *RequestOfUint8ToComplex64 {
	return pool_of_RequestOfUint8ToComplex64.Get().(*RequestOfUint8ToComplex64)
}
func PutRequestOfUint8ToComplex64(d *RequestOfUint8ToComplex64) {
	pool_of_RequestOfUint8ToComplex64.Put(d)
}

type RequestOfUint8ToError struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToError{}
		},
	}
)

func GetRequestOfUint8ToError() *RequestOfUint8ToError {
	return pool_of_RequestOfUint8ToError.Get().(*RequestOfUint8ToError)
}
func PutRequestOfUint8ToError(d *RequestOfUint8ToError) {
	pool_of_RequestOfUint8ToError.Put(d)
}

type RequestOfUint8ToFloat32 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToFloat32{}
		},
	}
)

func GetRequestOfUint8ToFloat32() *RequestOfUint8ToFloat32 {
	return pool_of_RequestOfUint8ToFloat32.Get().(*RequestOfUint8ToFloat32)
}
func PutRequestOfUint8ToFloat32(d *RequestOfUint8ToFloat32) {
	pool_of_RequestOfUint8ToFloat32.Put(d)
}

type RequestOfUint8ToFloat64 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToFloat64{}
		},
	}
)

func GetRequestOfUint8ToFloat64() *RequestOfUint8ToFloat64 {
	return pool_of_RequestOfUint8ToFloat64.Get().(*RequestOfUint8ToFloat64)
}
func PutRequestOfUint8ToFloat64(d *RequestOfUint8ToFloat64) {
	pool_of_RequestOfUint8ToFloat64.Put(d)
}

type RequestOfUint8ToInt struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToInt{}
		},
	}
)

func GetRequestOfUint8ToInt() *RequestOfUint8ToInt {
	return pool_of_RequestOfUint8ToInt.Get().(*RequestOfUint8ToInt)
}
func PutRequestOfUint8ToInt(d *RequestOfUint8ToInt) {
	pool_of_RequestOfUint8ToInt.Put(d)
}

type RequestOfUint8ToInt16 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToInt16{}
		},
	}
)

func GetRequestOfUint8ToInt16() *RequestOfUint8ToInt16 {
	return pool_of_RequestOfUint8ToInt16.Get().(*RequestOfUint8ToInt16)
}
func PutRequestOfUint8ToInt16(d *RequestOfUint8ToInt16) {
	pool_of_RequestOfUint8ToInt16.Put(d)
}

type RequestOfUint8ToInt32 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToInt32{}
		},
	}
)

func GetRequestOfUint8ToInt32() *RequestOfUint8ToInt32 {
	return pool_of_RequestOfUint8ToInt32.Get().(*RequestOfUint8ToInt32)
}
func PutRequestOfUint8ToInt32(d *RequestOfUint8ToInt32) {
	pool_of_RequestOfUint8ToInt32.Put(d)
}

type RequestOfUint8ToInt64 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToInt64{}
		},
	}
)

func GetRequestOfUint8ToInt64() *RequestOfUint8ToInt64 {
	return pool_of_RequestOfUint8ToInt64.Get().(*RequestOfUint8ToInt64)
}
func PutRequestOfUint8ToInt64(d *RequestOfUint8ToInt64) {
	pool_of_RequestOfUint8ToInt64.Put(d)
}

type RequestOfUint8ToInt8 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToInt8{}
		},
	}
)

func GetRequestOfUint8ToInt8() *RequestOfUint8ToInt8 {
	return pool_of_RequestOfUint8ToInt8.Get().(*RequestOfUint8ToInt8)
}
func PutRequestOfUint8ToInt8(d *RequestOfUint8ToInt8) {
	pool_of_RequestOfUint8ToInt8.Put(d)
}

type RequestOfUint8ToRune struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToRune{}
		},
	}
)

func GetRequestOfUint8ToRune() *RequestOfUint8ToRune {
	return pool_of_RequestOfUint8ToRune.Get().(*RequestOfUint8ToRune)
}
func PutRequestOfUint8ToRune(d *RequestOfUint8ToRune) {
	pool_of_RequestOfUint8ToRune.Put(d)
}

type RequestOfUint8ToString struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToString{}
		},
	}
)

func GetRequestOfUint8ToString() *RequestOfUint8ToString {
	return pool_of_RequestOfUint8ToString.Get().(*RequestOfUint8ToString)
}
func PutRequestOfUint8ToString(d *RequestOfUint8ToString) {
	pool_of_RequestOfUint8ToString.Put(d)
}

type RequestOfUint8ToUint struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToUint{}
		},
	}
)

func GetRequestOfUint8ToUint() *RequestOfUint8ToUint {
	return pool_of_RequestOfUint8ToUint.Get().(*RequestOfUint8ToUint)
}
func PutRequestOfUint8ToUint(d *RequestOfUint8ToUint) {
	pool_of_RequestOfUint8ToUint.Put(d)
}

type RequestOfUint8ToUint16 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToUint16{}
		},
	}
)

func GetRequestOfUint8ToUint16() *RequestOfUint8ToUint16 {
	return pool_of_RequestOfUint8ToUint16.Get().(*RequestOfUint8ToUint16)
}
func PutRequestOfUint8ToUint16(d *RequestOfUint8ToUint16) {
	pool_of_RequestOfUint8ToUint16.Put(d)
}

type RequestOfUint8ToUint32 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToUint32{}
		},
	}
)

func GetRequestOfUint8ToUint32() *RequestOfUint8ToUint32 {
	return pool_of_RequestOfUint8ToUint32.Get().(*RequestOfUint8ToUint32)
}
func PutRequestOfUint8ToUint32(d *RequestOfUint8ToUint32) {
	pool_of_RequestOfUint8ToUint32.Put(d)
}

type RequestOfUint8ToUint64 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToUint64{}
		},
	}
)

func GetRequestOfUint8ToUint64() *RequestOfUint8ToUint64 {
	return pool_of_RequestOfUint8ToUint64.Get().(*RequestOfUint8ToUint64)
}
func PutRequestOfUint8ToUint64(d *RequestOfUint8ToUint64) {
	pool_of_RequestOfUint8ToUint64.Put(d)
}

type RequestOfUint8ToUint8 struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToUint8{}
		},
	}
)

func GetRequestOfUint8ToUint8() *RequestOfUint8ToUint8 {
	return pool_of_RequestOfUint8ToUint8.Get().(*RequestOfUint8ToUint8)
}
func PutRequestOfUint8ToUint8(d *RequestOfUint8ToUint8) {
	pool_of_RequestOfUint8ToUint8.Put(d)
}

type RequestOfUint8ToUintptr struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToUintptr{}
		},
	}
)

func GetRequestOfUint8ToUintptr() *RequestOfUint8ToUintptr {
	return pool_of_RequestOfUint8ToUintptr.Get().(*RequestOfUint8ToUintptr)
}
func PutRequestOfUint8ToUintptr(d *RequestOfUint8ToUintptr) {
	pool_of_RequestOfUint8ToUintptr.Put(d)
}

type RequestOfUint8ToBytes struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToBytes{}
		},
	}
)

func GetRequestOfUint8ToBytes() *RequestOfUint8ToBytes {
	return pool_of_RequestOfUint8ToBytes.Get().(*RequestOfUint8ToBytes)
}
func PutRequestOfUint8ToBytes(d *RequestOfUint8ToBytes) {
	pool_of_RequestOfUint8ToBytes.Put(d)
}

type RequestOfUint8ToInterface struct {
	Context  context.Context
	Value    uint8
	ReturnCh chan<- ReturnOfUint8
}

var (
	pool_of_RequestOfUint8ToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfUint8ToInterface{}
		},
	}
)

func GetRequestOfUint8ToInterface() *RequestOfUint8ToInterface {
	return pool_of_RequestOfUint8ToInterface.Get().(*RequestOfUint8ToInterface)
}
func PutRequestOfUint8ToInterface(d *RequestOfUint8ToInterface) {
	pool_of_RequestOfUint8ToInterface.Put(d)
}

type RequestOfUintptrToBool struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToBool{}
		},
	}
)

func GetRequestOfUintptrToBool() *RequestOfUintptrToBool {
	return pool_of_RequestOfUintptrToBool.Get().(*RequestOfUintptrToBool)
}
func PutRequestOfUintptrToBool(d *RequestOfUintptrToBool) {
	pool_of_RequestOfUintptrToBool.Put(d)
}

type RequestOfUintptrToByte struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToByte{}
		},
	}
)

func GetRequestOfUintptrToByte() *RequestOfUintptrToByte {
	return pool_of_RequestOfUintptrToByte.Get().(*RequestOfUintptrToByte)
}
func PutRequestOfUintptrToByte(d *RequestOfUintptrToByte) {
	pool_of_RequestOfUintptrToByte.Put(d)
}

type RequestOfUintptrToComplex128 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToComplex128{}
		},
	}
)

func GetRequestOfUintptrToComplex128() *RequestOfUintptrToComplex128 {
	return pool_of_RequestOfUintptrToComplex128.Get().(*RequestOfUintptrToComplex128)
}
func PutRequestOfUintptrToComplex128(d *RequestOfUintptrToComplex128) {
	pool_of_RequestOfUintptrToComplex128.Put(d)
}

type RequestOfUintptrToComplex64 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToComplex64{}
		},
	}
)

func GetRequestOfUintptrToComplex64() *RequestOfUintptrToComplex64 {
	return pool_of_RequestOfUintptrToComplex64.Get().(*RequestOfUintptrToComplex64)
}
func PutRequestOfUintptrToComplex64(d *RequestOfUintptrToComplex64) {
	pool_of_RequestOfUintptrToComplex64.Put(d)
}

type RequestOfUintptrToError struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToError{}
		},
	}
)

func GetRequestOfUintptrToError() *RequestOfUintptrToError {
	return pool_of_RequestOfUintptrToError.Get().(*RequestOfUintptrToError)
}
func PutRequestOfUintptrToError(d *RequestOfUintptrToError) {
	pool_of_RequestOfUintptrToError.Put(d)
}

type RequestOfUintptrToFloat32 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToFloat32{}
		},
	}
)

func GetRequestOfUintptrToFloat32() *RequestOfUintptrToFloat32 {
	return pool_of_RequestOfUintptrToFloat32.Get().(*RequestOfUintptrToFloat32)
}
func PutRequestOfUintptrToFloat32(d *RequestOfUintptrToFloat32) {
	pool_of_RequestOfUintptrToFloat32.Put(d)
}

type RequestOfUintptrToFloat64 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToFloat64{}
		},
	}
)

func GetRequestOfUintptrToFloat64() *RequestOfUintptrToFloat64 {
	return pool_of_RequestOfUintptrToFloat64.Get().(*RequestOfUintptrToFloat64)
}
func PutRequestOfUintptrToFloat64(d *RequestOfUintptrToFloat64) {
	pool_of_RequestOfUintptrToFloat64.Put(d)
}

type RequestOfUintptrToInt struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToInt{}
		},
	}
)

func GetRequestOfUintptrToInt() *RequestOfUintptrToInt {
	return pool_of_RequestOfUintptrToInt.Get().(*RequestOfUintptrToInt)
}
func PutRequestOfUintptrToInt(d *RequestOfUintptrToInt) {
	pool_of_RequestOfUintptrToInt.Put(d)
}

type RequestOfUintptrToInt16 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToInt16{}
		},
	}
)

func GetRequestOfUintptrToInt16() *RequestOfUintptrToInt16 {
	return pool_of_RequestOfUintptrToInt16.Get().(*RequestOfUintptrToInt16)
}
func PutRequestOfUintptrToInt16(d *RequestOfUintptrToInt16) {
	pool_of_RequestOfUintptrToInt16.Put(d)
}

type RequestOfUintptrToInt32 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToInt32{}
		},
	}
)

func GetRequestOfUintptrToInt32() *RequestOfUintptrToInt32 {
	return pool_of_RequestOfUintptrToInt32.Get().(*RequestOfUintptrToInt32)
}
func PutRequestOfUintptrToInt32(d *RequestOfUintptrToInt32) {
	pool_of_RequestOfUintptrToInt32.Put(d)
}

type RequestOfUintptrToInt64 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToInt64{}
		},
	}
)

func GetRequestOfUintptrToInt64() *RequestOfUintptrToInt64 {
	return pool_of_RequestOfUintptrToInt64.Get().(*RequestOfUintptrToInt64)
}
func PutRequestOfUintptrToInt64(d *RequestOfUintptrToInt64) {
	pool_of_RequestOfUintptrToInt64.Put(d)
}

type RequestOfUintptrToInt8 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToInt8{}
		},
	}
)

func GetRequestOfUintptrToInt8() *RequestOfUintptrToInt8 {
	return pool_of_RequestOfUintptrToInt8.Get().(*RequestOfUintptrToInt8)
}
func PutRequestOfUintptrToInt8(d *RequestOfUintptrToInt8) {
	pool_of_RequestOfUintptrToInt8.Put(d)
}

type RequestOfUintptrToRune struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToRune{}
		},
	}
)

func GetRequestOfUintptrToRune() *RequestOfUintptrToRune {
	return pool_of_RequestOfUintptrToRune.Get().(*RequestOfUintptrToRune)
}
func PutRequestOfUintptrToRune(d *RequestOfUintptrToRune) {
	pool_of_RequestOfUintptrToRune.Put(d)
}

type RequestOfUintptrToString struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToString{}
		},
	}
)

func GetRequestOfUintptrToString() *RequestOfUintptrToString {
	return pool_of_RequestOfUintptrToString.Get().(*RequestOfUintptrToString)
}
func PutRequestOfUintptrToString(d *RequestOfUintptrToString) {
	pool_of_RequestOfUintptrToString.Put(d)
}

type RequestOfUintptrToUint struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToUint{}
		},
	}
)

func GetRequestOfUintptrToUint() *RequestOfUintptrToUint {
	return pool_of_RequestOfUintptrToUint.Get().(*RequestOfUintptrToUint)
}
func PutRequestOfUintptrToUint(d *RequestOfUintptrToUint) {
	pool_of_RequestOfUintptrToUint.Put(d)
}

type RequestOfUintptrToUint16 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToUint16{}
		},
	}
)

func GetRequestOfUintptrToUint16() *RequestOfUintptrToUint16 {
	return pool_of_RequestOfUintptrToUint16.Get().(*RequestOfUintptrToUint16)
}
func PutRequestOfUintptrToUint16(d *RequestOfUintptrToUint16) {
	pool_of_RequestOfUintptrToUint16.Put(d)
}

type RequestOfUintptrToUint32 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToUint32{}
		},
	}
)

func GetRequestOfUintptrToUint32() *RequestOfUintptrToUint32 {
	return pool_of_RequestOfUintptrToUint32.Get().(*RequestOfUintptrToUint32)
}
func PutRequestOfUintptrToUint32(d *RequestOfUintptrToUint32) {
	pool_of_RequestOfUintptrToUint32.Put(d)
}

type RequestOfUintptrToUint64 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToUint64{}
		},
	}
)

func GetRequestOfUintptrToUint64() *RequestOfUintptrToUint64 {
	return pool_of_RequestOfUintptrToUint64.Get().(*RequestOfUintptrToUint64)
}
func PutRequestOfUintptrToUint64(d *RequestOfUintptrToUint64) {
	pool_of_RequestOfUintptrToUint64.Put(d)
}

type RequestOfUintptrToUint8 struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToUint8{}
		},
	}
)

func GetRequestOfUintptrToUint8() *RequestOfUintptrToUint8 {
	return pool_of_RequestOfUintptrToUint8.Get().(*RequestOfUintptrToUint8)
}
func PutRequestOfUintptrToUint8(d *RequestOfUintptrToUint8) {
	pool_of_RequestOfUintptrToUint8.Put(d)
}

type RequestOfUintptrToUintptr struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToUintptr{}
		},
	}
)

func GetRequestOfUintptrToUintptr() *RequestOfUintptrToUintptr {
	return pool_of_RequestOfUintptrToUintptr.Get().(*RequestOfUintptrToUintptr)
}
func PutRequestOfUintptrToUintptr(d *RequestOfUintptrToUintptr) {
	pool_of_RequestOfUintptrToUintptr.Put(d)
}

type RequestOfUintptrToBytes struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToBytes{}
		},
	}
)

func GetRequestOfUintptrToBytes() *RequestOfUintptrToBytes {
	return pool_of_RequestOfUintptrToBytes.Get().(*RequestOfUintptrToBytes)
}
func PutRequestOfUintptrToBytes(d *RequestOfUintptrToBytes) {
	pool_of_RequestOfUintptrToBytes.Put(d)
}

type RequestOfUintptrToInterface struct {
	Context  context.Context
	Value    uintptr
	ReturnCh chan<- ReturnOfUintptr
}

var (
	pool_of_RequestOfUintptrToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfUintptrToInterface{}
		},
	}
)

func GetRequestOfUintptrToInterface() *RequestOfUintptrToInterface {
	return pool_of_RequestOfUintptrToInterface.Get().(*RequestOfUintptrToInterface)
}
func PutRequestOfUintptrToInterface(d *RequestOfUintptrToInterface) {
	pool_of_RequestOfUintptrToInterface.Put(d)
}

type RequestOfBytesToBool struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToBool{}
		},
	}
)

func GetRequestOfBytesToBool() *RequestOfBytesToBool {
	return pool_of_RequestOfBytesToBool.Get().(*RequestOfBytesToBool)
}
func PutRequestOfBytesToBool(d *RequestOfBytesToBool) {
	pool_of_RequestOfBytesToBool.Put(d)
}

type RequestOfBytesToByte struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToByte{}
		},
	}
)

func GetRequestOfBytesToByte() *RequestOfBytesToByte {
	return pool_of_RequestOfBytesToByte.Get().(*RequestOfBytesToByte)
}
func PutRequestOfBytesToByte(d *RequestOfBytesToByte) {
	pool_of_RequestOfBytesToByte.Put(d)
}

type RequestOfBytesToComplex128 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToComplex128{}
		},
	}
)

func GetRequestOfBytesToComplex128() *RequestOfBytesToComplex128 {
	return pool_of_RequestOfBytesToComplex128.Get().(*RequestOfBytesToComplex128)
}
func PutRequestOfBytesToComplex128(d *RequestOfBytesToComplex128) {
	pool_of_RequestOfBytesToComplex128.Put(d)
}

type RequestOfBytesToComplex64 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToComplex64{}
		},
	}
)

func GetRequestOfBytesToComplex64() *RequestOfBytesToComplex64 {
	return pool_of_RequestOfBytesToComplex64.Get().(*RequestOfBytesToComplex64)
}
func PutRequestOfBytesToComplex64(d *RequestOfBytesToComplex64) {
	pool_of_RequestOfBytesToComplex64.Put(d)
}

type RequestOfBytesToError struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToError{}
		},
	}
)

func GetRequestOfBytesToError() *RequestOfBytesToError {
	return pool_of_RequestOfBytesToError.Get().(*RequestOfBytesToError)
}
func PutRequestOfBytesToError(d *RequestOfBytesToError) {
	pool_of_RequestOfBytesToError.Put(d)
}

type RequestOfBytesToFloat32 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToFloat32{}
		},
	}
)

func GetRequestOfBytesToFloat32() *RequestOfBytesToFloat32 {
	return pool_of_RequestOfBytesToFloat32.Get().(*RequestOfBytesToFloat32)
}
func PutRequestOfBytesToFloat32(d *RequestOfBytesToFloat32) {
	pool_of_RequestOfBytesToFloat32.Put(d)
}

type RequestOfBytesToFloat64 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToFloat64{}
		},
	}
)

func GetRequestOfBytesToFloat64() *RequestOfBytesToFloat64 {
	return pool_of_RequestOfBytesToFloat64.Get().(*RequestOfBytesToFloat64)
}
func PutRequestOfBytesToFloat64(d *RequestOfBytesToFloat64) {
	pool_of_RequestOfBytesToFloat64.Put(d)
}

type RequestOfBytesToInt struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToInt{}
		},
	}
)

func GetRequestOfBytesToInt() *RequestOfBytesToInt {
	return pool_of_RequestOfBytesToInt.Get().(*RequestOfBytesToInt)
}
func PutRequestOfBytesToInt(d *RequestOfBytesToInt) {
	pool_of_RequestOfBytesToInt.Put(d)
}

type RequestOfBytesToInt16 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToInt16{}
		},
	}
)

func GetRequestOfBytesToInt16() *RequestOfBytesToInt16 {
	return pool_of_RequestOfBytesToInt16.Get().(*RequestOfBytesToInt16)
}
func PutRequestOfBytesToInt16(d *RequestOfBytesToInt16) {
	pool_of_RequestOfBytesToInt16.Put(d)
}

type RequestOfBytesToInt32 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToInt32{}
		},
	}
)

func GetRequestOfBytesToInt32() *RequestOfBytesToInt32 {
	return pool_of_RequestOfBytesToInt32.Get().(*RequestOfBytesToInt32)
}
func PutRequestOfBytesToInt32(d *RequestOfBytesToInt32) {
	pool_of_RequestOfBytesToInt32.Put(d)
}

type RequestOfBytesToInt64 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToInt64{}
		},
	}
)

func GetRequestOfBytesToInt64() *RequestOfBytesToInt64 {
	return pool_of_RequestOfBytesToInt64.Get().(*RequestOfBytesToInt64)
}
func PutRequestOfBytesToInt64(d *RequestOfBytesToInt64) {
	pool_of_RequestOfBytesToInt64.Put(d)
}

type RequestOfBytesToInt8 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToInt8{}
		},
	}
)

func GetRequestOfBytesToInt8() *RequestOfBytesToInt8 {
	return pool_of_RequestOfBytesToInt8.Get().(*RequestOfBytesToInt8)
}
func PutRequestOfBytesToInt8(d *RequestOfBytesToInt8) {
	pool_of_RequestOfBytesToInt8.Put(d)
}

type RequestOfBytesToRune struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToRune{}
		},
	}
)

func GetRequestOfBytesToRune() *RequestOfBytesToRune {
	return pool_of_RequestOfBytesToRune.Get().(*RequestOfBytesToRune)
}
func PutRequestOfBytesToRune(d *RequestOfBytesToRune) {
	pool_of_RequestOfBytesToRune.Put(d)
}

type RequestOfBytesToString struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToString{}
		},
	}
)

func GetRequestOfBytesToString() *RequestOfBytesToString {
	return pool_of_RequestOfBytesToString.Get().(*RequestOfBytesToString)
}
func PutRequestOfBytesToString(d *RequestOfBytesToString) {
	pool_of_RequestOfBytesToString.Put(d)
}

type RequestOfBytesToUint struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToUint{}
		},
	}
)

func GetRequestOfBytesToUint() *RequestOfBytesToUint {
	return pool_of_RequestOfBytesToUint.Get().(*RequestOfBytesToUint)
}
func PutRequestOfBytesToUint(d *RequestOfBytesToUint) {
	pool_of_RequestOfBytesToUint.Put(d)
}

type RequestOfBytesToUint16 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToUint16{}
		},
	}
)

func GetRequestOfBytesToUint16() *RequestOfBytesToUint16 {
	return pool_of_RequestOfBytesToUint16.Get().(*RequestOfBytesToUint16)
}
func PutRequestOfBytesToUint16(d *RequestOfBytesToUint16) {
	pool_of_RequestOfBytesToUint16.Put(d)
}

type RequestOfBytesToUint32 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToUint32{}
		},
	}
)

func GetRequestOfBytesToUint32() *RequestOfBytesToUint32 {
	return pool_of_RequestOfBytesToUint32.Get().(*RequestOfBytesToUint32)
}
func PutRequestOfBytesToUint32(d *RequestOfBytesToUint32) {
	pool_of_RequestOfBytesToUint32.Put(d)
}

type RequestOfBytesToUint64 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToUint64{}
		},
	}
)

func GetRequestOfBytesToUint64() *RequestOfBytesToUint64 {
	return pool_of_RequestOfBytesToUint64.Get().(*RequestOfBytesToUint64)
}
func PutRequestOfBytesToUint64(d *RequestOfBytesToUint64) {
	pool_of_RequestOfBytesToUint64.Put(d)
}

type RequestOfBytesToUint8 struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToUint8{}
		},
	}
)

func GetRequestOfBytesToUint8() *RequestOfBytesToUint8 {
	return pool_of_RequestOfBytesToUint8.Get().(*RequestOfBytesToUint8)
}
func PutRequestOfBytesToUint8(d *RequestOfBytesToUint8) {
	pool_of_RequestOfBytesToUint8.Put(d)
}

type RequestOfBytesToUintptr struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToUintptr{}
		},
	}
)

func GetRequestOfBytesToUintptr() *RequestOfBytesToUintptr {
	return pool_of_RequestOfBytesToUintptr.Get().(*RequestOfBytesToUintptr)
}
func PutRequestOfBytesToUintptr(d *RequestOfBytesToUintptr) {
	pool_of_RequestOfBytesToUintptr.Put(d)
}

type RequestOfBytesToBytes struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToBytes{}
		},
	}
)

func GetRequestOfBytesToBytes() *RequestOfBytesToBytes {
	return pool_of_RequestOfBytesToBytes.Get().(*RequestOfBytesToBytes)
}
func PutRequestOfBytesToBytes(d *RequestOfBytesToBytes) {
	pool_of_RequestOfBytesToBytes.Put(d)
}

type RequestOfBytesToInterface struct {
	Context  context.Context
	Value    Bytes
	ReturnCh chan<- ReturnOfBytes
}

var (
	pool_of_RequestOfBytesToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfBytesToInterface{}
		},
	}
)

func GetRequestOfBytesToInterface() *RequestOfBytesToInterface {
	return pool_of_RequestOfBytesToInterface.Get().(*RequestOfBytesToInterface)
}
func PutRequestOfBytesToInterface(d *RequestOfBytesToInterface) {
	pool_of_RequestOfBytesToInterface.Put(d)
}

type RequestOfInterfaceToBool struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToBool = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToBool{}
		},
	}
)

func GetRequestOfInterfaceToBool() *RequestOfInterfaceToBool {
	return pool_of_RequestOfInterfaceToBool.Get().(*RequestOfInterfaceToBool)
}
func PutRequestOfInterfaceToBool(d *RequestOfInterfaceToBool) {
	pool_of_RequestOfInterfaceToBool.Put(d)
}

type RequestOfInterfaceToByte struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToByte = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToByte{}
		},
	}
)

func GetRequestOfInterfaceToByte() *RequestOfInterfaceToByte {
	return pool_of_RequestOfInterfaceToByte.Get().(*RequestOfInterfaceToByte)
}
func PutRequestOfInterfaceToByte(d *RequestOfInterfaceToByte) {
	pool_of_RequestOfInterfaceToByte.Put(d)
}

type RequestOfInterfaceToComplex128 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToComplex128 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToComplex128{}
		},
	}
)

func GetRequestOfInterfaceToComplex128() *RequestOfInterfaceToComplex128 {
	return pool_of_RequestOfInterfaceToComplex128.Get().(*RequestOfInterfaceToComplex128)
}
func PutRequestOfInterfaceToComplex128(d *RequestOfInterfaceToComplex128) {
	pool_of_RequestOfInterfaceToComplex128.Put(d)
}

type RequestOfInterfaceToComplex64 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToComplex64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToComplex64{}
		},
	}
)

func GetRequestOfInterfaceToComplex64() *RequestOfInterfaceToComplex64 {
	return pool_of_RequestOfInterfaceToComplex64.Get().(*RequestOfInterfaceToComplex64)
}
func PutRequestOfInterfaceToComplex64(d *RequestOfInterfaceToComplex64) {
	pool_of_RequestOfInterfaceToComplex64.Put(d)
}

type RequestOfInterfaceToError struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToError = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToError{}
		},
	}
)

func GetRequestOfInterfaceToError() *RequestOfInterfaceToError {
	return pool_of_RequestOfInterfaceToError.Get().(*RequestOfInterfaceToError)
}
func PutRequestOfInterfaceToError(d *RequestOfInterfaceToError) {
	pool_of_RequestOfInterfaceToError.Put(d)
}

type RequestOfInterfaceToFloat32 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToFloat32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToFloat32{}
		},
	}
)

func GetRequestOfInterfaceToFloat32() *RequestOfInterfaceToFloat32 {
	return pool_of_RequestOfInterfaceToFloat32.Get().(*RequestOfInterfaceToFloat32)
}
func PutRequestOfInterfaceToFloat32(d *RequestOfInterfaceToFloat32) {
	pool_of_RequestOfInterfaceToFloat32.Put(d)
}

type RequestOfInterfaceToFloat64 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToFloat64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToFloat64{}
		},
	}
)

func GetRequestOfInterfaceToFloat64() *RequestOfInterfaceToFloat64 {
	return pool_of_RequestOfInterfaceToFloat64.Get().(*RequestOfInterfaceToFloat64)
}
func PutRequestOfInterfaceToFloat64(d *RequestOfInterfaceToFloat64) {
	pool_of_RequestOfInterfaceToFloat64.Put(d)
}

type RequestOfInterfaceToInt struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToInt = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToInt{}
		},
	}
)

func GetRequestOfInterfaceToInt() *RequestOfInterfaceToInt {
	return pool_of_RequestOfInterfaceToInt.Get().(*RequestOfInterfaceToInt)
}
func PutRequestOfInterfaceToInt(d *RequestOfInterfaceToInt) {
	pool_of_RequestOfInterfaceToInt.Put(d)
}

type RequestOfInterfaceToInt16 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToInt16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToInt16{}
		},
	}
)

func GetRequestOfInterfaceToInt16() *RequestOfInterfaceToInt16 {
	return pool_of_RequestOfInterfaceToInt16.Get().(*RequestOfInterfaceToInt16)
}
func PutRequestOfInterfaceToInt16(d *RequestOfInterfaceToInt16) {
	pool_of_RequestOfInterfaceToInt16.Put(d)
}

type RequestOfInterfaceToInt32 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToInt32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToInt32{}
		},
	}
)

func GetRequestOfInterfaceToInt32() *RequestOfInterfaceToInt32 {
	return pool_of_RequestOfInterfaceToInt32.Get().(*RequestOfInterfaceToInt32)
}
func PutRequestOfInterfaceToInt32(d *RequestOfInterfaceToInt32) {
	pool_of_RequestOfInterfaceToInt32.Put(d)
}

type RequestOfInterfaceToInt64 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToInt64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToInt64{}
		},
	}
)

func GetRequestOfInterfaceToInt64() *RequestOfInterfaceToInt64 {
	return pool_of_RequestOfInterfaceToInt64.Get().(*RequestOfInterfaceToInt64)
}
func PutRequestOfInterfaceToInt64(d *RequestOfInterfaceToInt64) {
	pool_of_RequestOfInterfaceToInt64.Put(d)
}

type RequestOfInterfaceToInt8 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToInt8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToInt8{}
		},
	}
)

func GetRequestOfInterfaceToInt8() *RequestOfInterfaceToInt8 {
	return pool_of_RequestOfInterfaceToInt8.Get().(*RequestOfInterfaceToInt8)
}
func PutRequestOfInterfaceToInt8(d *RequestOfInterfaceToInt8) {
	pool_of_RequestOfInterfaceToInt8.Put(d)
}

type RequestOfInterfaceToRune struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToRune = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToRune{}
		},
	}
)

func GetRequestOfInterfaceToRune() *RequestOfInterfaceToRune {
	return pool_of_RequestOfInterfaceToRune.Get().(*RequestOfInterfaceToRune)
}
func PutRequestOfInterfaceToRune(d *RequestOfInterfaceToRune) {
	pool_of_RequestOfInterfaceToRune.Put(d)
}

type RequestOfInterfaceToString struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToString = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToString{}
		},
	}
)

func GetRequestOfInterfaceToString() *RequestOfInterfaceToString {
	return pool_of_RequestOfInterfaceToString.Get().(*RequestOfInterfaceToString)
}
func PutRequestOfInterfaceToString(d *RequestOfInterfaceToString) {
	pool_of_RequestOfInterfaceToString.Put(d)
}

type RequestOfInterfaceToUint struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToUint = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToUint{}
		},
	}
)

func GetRequestOfInterfaceToUint() *RequestOfInterfaceToUint {
	return pool_of_RequestOfInterfaceToUint.Get().(*RequestOfInterfaceToUint)
}
func PutRequestOfInterfaceToUint(d *RequestOfInterfaceToUint) {
	pool_of_RequestOfInterfaceToUint.Put(d)
}

type RequestOfInterfaceToUint16 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToUint16 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToUint16{}
		},
	}
)

func GetRequestOfInterfaceToUint16() *RequestOfInterfaceToUint16 {
	return pool_of_RequestOfInterfaceToUint16.Get().(*RequestOfInterfaceToUint16)
}
func PutRequestOfInterfaceToUint16(d *RequestOfInterfaceToUint16) {
	pool_of_RequestOfInterfaceToUint16.Put(d)
}

type RequestOfInterfaceToUint32 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToUint32 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToUint32{}
		},
	}
)

func GetRequestOfInterfaceToUint32() *RequestOfInterfaceToUint32 {
	return pool_of_RequestOfInterfaceToUint32.Get().(*RequestOfInterfaceToUint32)
}
func PutRequestOfInterfaceToUint32(d *RequestOfInterfaceToUint32) {
	pool_of_RequestOfInterfaceToUint32.Put(d)
}

type RequestOfInterfaceToUint64 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToUint64 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToUint64{}
		},
	}
)

func GetRequestOfInterfaceToUint64() *RequestOfInterfaceToUint64 {
	return pool_of_RequestOfInterfaceToUint64.Get().(*RequestOfInterfaceToUint64)
}
func PutRequestOfInterfaceToUint64(d *RequestOfInterfaceToUint64) {
	pool_of_RequestOfInterfaceToUint64.Put(d)
}

type RequestOfInterfaceToUint8 struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToUint8 = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToUint8{}
		},
	}
)

func GetRequestOfInterfaceToUint8() *RequestOfInterfaceToUint8 {
	return pool_of_RequestOfInterfaceToUint8.Get().(*RequestOfInterfaceToUint8)
}
func PutRequestOfInterfaceToUint8(d *RequestOfInterfaceToUint8) {
	pool_of_RequestOfInterfaceToUint8.Put(d)
}

type RequestOfInterfaceToUintptr struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToUintptr = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToUintptr{}
		},
	}
)

func GetRequestOfInterfaceToUintptr() *RequestOfInterfaceToUintptr {
	return pool_of_RequestOfInterfaceToUintptr.Get().(*RequestOfInterfaceToUintptr)
}
func PutRequestOfInterfaceToUintptr(d *RequestOfInterfaceToUintptr) {
	pool_of_RequestOfInterfaceToUintptr.Put(d)
}

type RequestOfInterfaceToBytes struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToBytes = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToBytes{}
		},
	}
)

func GetRequestOfInterfaceToBytes() *RequestOfInterfaceToBytes {
	return pool_of_RequestOfInterfaceToBytes.Get().(*RequestOfInterfaceToBytes)
}
func PutRequestOfInterfaceToBytes(d *RequestOfInterfaceToBytes) {
	pool_of_RequestOfInterfaceToBytes.Put(d)
}

type RequestOfInterfaceToInterface struct {
	Context  context.Context
	Value    interface{}
	ReturnCh chan<- ReturnOfInterface
}

var (
	pool_of_RequestOfInterfaceToInterface = sync.Pool{
		New: func() interface{} {
			return &RequestOfInterfaceToInterface{}
		},
	}
)

func GetRequestOfInterfaceToInterface() *RequestOfInterfaceToInterface {
	return pool_of_RequestOfInterfaceToInterface.Get().(*RequestOfInterfaceToInterface)
}
func PutRequestOfInterfaceToInterface(d *RequestOfInterfaceToInterface) {
	pool_of_RequestOfInterfaceToInterface.Put(d)
}
