// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package async

import "context"

type WorkOfBytesThenBytes struct {
	Argument Bytes
	ReturnCh chan<- *ReturnOfBytes
}

type WorkWithContextOfBytesThenBytes struct {
	context.Context
	*WorkOfBytesThenBytes
}

type WorkerOfPushBytesThenBytes interface {
	Push(context.Context, *WorkOfBytesThenBytes)
	DoneNotify() <-chan struct{}
}

type WorkOfBytesThenString struct {
	Argument Bytes
	ReturnCh chan<- *ReturnOfString
}

type WorkWithContextOfBytesThenString struct {
	context.Context
	*WorkOfBytesThenString
}

type WorkerOfPushBytesThenString interface {
	Push(context.Context, *WorkOfBytesThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfBytesThenInterface struct {
	Argument Bytes
	ReturnCh chan<- *ReturnOfInterface
}

type WorkWithContextOfBytesThenInterface struct {
	context.Context
	*WorkOfBytesThenInterface
}

type WorkerOfPushBytesThenInterface interface {
	Push(context.Context, *WorkOfBytesThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenBytes struct {
	Argument string
	ReturnCh chan<- *ReturnOfBytes
}

type WorkWithContextOfStringThenBytes struct {
	context.Context
	*WorkOfStringThenBytes
}

type WorkerOfPushStringThenBytes interface {
	Push(context.Context, *WorkOfStringThenBytes)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenString struct {
	Argument string
	ReturnCh chan<- *ReturnOfString
}

type WorkWithContextOfStringThenString struct {
	context.Context
	*WorkOfStringThenString
}

type WorkerOfPushStringThenString interface {
	Push(context.Context, *WorkOfStringThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfStringThenInterface struct {
	Argument string
	ReturnCh chan<- *ReturnOfInterface
}

type WorkWithContextOfStringThenInterface struct {
	context.Context
	*WorkOfStringThenInterface
}

type WorkerOfPushStringThenInterface interface {
	Push(context.Context, *WorkOfStringThenInterface)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenBytes struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfBytes
}

type WorkWithContextOfInterfaceThenBytes struct {
	context.Context
	*WorkOfInterfaceThenBytes
}

type WorkerOfPushInterfaceThenBytes interface {
	Push(context.Context, *WorkOfInterfaceThenBytes)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenString struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfString
}

type WorkWithContextOfInterfaceThenString struct {
	context.Context
	*WorkOfInterfaceThenString
}

type WorkerOfPushInterfaceThenString interface {
	Push(context.Context, *WorkOfInterfaceThenString)
	DoneNotify() <-chan struct{}
}

type WorkOfInterfaceThenInterface struct {
	Argument interface{}
	ReturnCh chan<- *ReturnOfInterface
}

type WorkWithContextOfInterfaceThenInterface struct {
	context.Context
	*WorkOfInterfaceThenInterface
}

type WorkerOfPushInterfaceThenInterface interface {
	Push(context.Context, *WorkOfInterfaceThenInterface)
	DoneNotify() <-chan struct{}
}
